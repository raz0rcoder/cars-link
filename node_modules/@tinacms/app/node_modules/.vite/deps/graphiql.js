import {
  getFragmentDependenciesForAST,
  getOperationFacts
} from "./chunk-B7O6ULAJ.js";
import {
  $1746a345f3d73bb7$export$f680877a34711e37,
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c,
  $5cb92bef7577960e$export$177fb62ff3ec1f22,
  $5e63c961fc1ce211$export$8c6ed5c666ac1360,
  $5e63c961fc1ce211$export$d9f1ccf0bdb05d45,
  $6ed0406888f73fc4$export$c7b2cbe3552a0d05,
  $71cd76cc60e0454e$export$6f32135080cb4c3,
  $8927f6f2acc4f386$export$250ffa63cdc0d034,
  $921a889cee6df7e8$export$99c2b779aa4e8b8b,
  $c512c27ab02ef895$export$50c7b4e9d9f19c1,
  $c512c27ab02ef895$export$fd42f52fd3ae1109,
  $cf1ac5d9fe0e8206$export$21b07c8f274aebd5,
  $cf1ac5d9fe0e8206$export$722aac194ae923,
  $cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2,
  $cf1ac5d9fe0e8206$export$b688253958b8dfe7,
  $cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9,
  $d08ef79370b62062$export$41fb9f06171c75f4,
  $d08ef79370b62062$export$602eac185826482c,
  $d08ef79370b62062$export$6d08773d2e66f8f2,
  $d08ef79370b62062$export$7c6e2c02157bb7d2,
  $d08ef79370b62062$export$be92b6f5f03c0fe9,
  $d3863c46a17e8a28$export$20e40289641fbbb6,
  $e42e1063c40fb3ef$export$b9ecd428b558ff10,
  $f1701beae083dbae$export$602eac185826482c,
  Combination_default,
  __assign,
  __extends,
  __read,
  __rest,
  __spreadArray,
  clsx,
  hideOthers
} from "./chunk-3AR3J7CS.js";
import {
  require_jsx_runtime
} from "./chunk-7NJ4QMWV.js";
import {
  require_react_dom
} from "./chunk-LML2YCET.js";
import {
  require_react
} from "./chunk-6K2RAZOY.js";
import {
  HistoryStore,
  StorageAPI,
  fetcherReturnToPromise,
  fillLeafs,
  formatError,
  formatResult,
  getSelectedOperationName,
  isAsyncIterable,
  isObservable,
  isPromise,
  mergeAst
} from "./chunk-SS4UCYGN.js";
import {
  astFromValue,
  buildClientSchema,
  getIntrospectionQuery,
  isAbstractType,
  isEnumType,
  isInputObjectType,
  isInterfaceType,
  isListType,
  isNamedType,
  isNonNullType,
  isObjectType,
  isScalarType,
  isSchema,
  isType,
  isUnionType,
  parse,
  print,
  validateSchema,
  visit
} from "./chunk-RMYGERCM.js";
import {
  _extends
} from "./chunk-SJ46GW5Y.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-AUZ3RYOM.js";

// node_modules/is-primitive/index.js
var require_is_primitive = __commonJS({
  "node_modules/is-primitive/index.js"(exports, module) {
    "use strict";
    module.exports = function isPrimitive(val) {
      if (typeof val === "object") {
        return val === null;
      }
      return typeof val !== "function";
    };
  }
});

// node_modules/isobject/index.js
var require_isobject = __commonJS({
  "node_modules/isobject/index.js"(exports, module) {
    "use strict";
    module.exports = function isObject(val) {
      return val != null && typeof val === "object" && Array.isArray(val) === false;
    };
  }
});

// node_modules/is-plain-object/index.js
var require_is_plain_object = __commonJS({
  "node_modules/is-plain-object/index.js"(exports, module) {
    "use strict";
    var isObject = require_isobject();
    function isObjectObject(o13) {
      return isObject(o13) === true && Object.prototype.toString.call(o13) === "[object Object]";
    }
    module.exports = function isPlainObject(o13) {
      var ctor, prot;
      if (isObjectObject(o13) === false)
        return false;
      ctor = o13.constructor;
      if (typeof ctor !== "function")
        return false;
      prot = ctor.prototype;
      if (isObjectObject(prot) === false)
        return false;
      if (prot.hasOwnProperty("isPrototypeOf") === false) {
        return false;
      }
      return true;
    };
  }
});

// node_modules/set-value/index.js
var require_set_value = __commonJS({
  "node_modules/set-value/index.js"(exports, module) {
    "use strict";
    var { deleteProperty } = Reflect;
    var isPrimitive = require_is_primitive();
    var isPlainObject = require_is_plain_object();
    var isObject = (value) => {
      return typeof value === "object" && value !== null || typeof value === "function";
    };
    var isUnsafeKey = (key) => {
      return key === "__proto__" || key === "constructor" || key === "prototype";
    };
    var validateKey = (key) => {
      if (!isPrimitive(key)) {
        throw new TypeError("Object keys must be strings or symbols");
      }
      if (isUnsafeKey(key)) {
        throw new Error(`Cannot set unsafe key: "${key}"`);
      }
    };
    var toStringKey = (input) => {
      return Array.isArray(input) ? input.flat().map(String).join(",") : input;
    };
    var createMemoKey = (input, options) => {
      if (typeof input !== "string" || !options)
        return input;
      let key = input + ";";
      if (options.arrays !== void 0)
        key += `arrays=${options.arrays};`;
      if (options.separator !== void 0)
        key += `separator=${options.separator};`;
      if (options.split !== void 0)
        key += `split=${options.split};`;
      if (options.merge !== void 0)
        key += `merge=${options.merge};`;
      if (options.preservePaths !== void 0)
        key += `preservePaths=${options.preservePaths};`;
      return key;
    };
    var memoize2 = (input, options, fn) => {
      const key = toStringKey(options ? createMemoKey(input, options) : input);
      validateKey(key);
      const value = setValue.cache.get(key) || fn();
      setValue.cache.set(key, value);
      return value;
    };
    var splitString = (input, options = {}) => {
      const sep = options.separator || ".";
      const preserve = sep === "/" ? false : options.preservePaths;
      if (typeof input === "string" && preserve !== false && /\//.test(input)) {
        return [input];
      }
      const parts = [];
      let part = "";
      const push = (part2) => {
        let number2;
        if (part2.trim() !== "" && Number.isInteger(number2 = Number(part2))) {
          parts.push(number2);
        } else {
          parts.push(part2);
        }
      };
      for (let i10 = 0; i10 < input.length; i10++) {
        const value = input[i10];
        if (value === "\\") {
          part += input[++i10];
          continue;
        }
        if (value === sep) {
          push(part);
          part = "";
          continue;
        }
        part += value;
      }
      if (part) {
        push(part);
      }
      return parts;
    };
    var split = (input, options) => {
      if (options && typeof options.split === "function")
        return options.split(input);
      if (typeof input === "symbol")
        return [input];
      if (Array.isArray(input))
        return input;
      return memoize2(input, options, () => splitString(input, options));
    };
    var assignProp = (obj, prop, value, options) => {
      validateKey(prop);
      if (value === void 0) {
        deleteProperty(obj, prop);
      } else if (options && options.merge) {
        const merge = options.merge === "function" ? options.merge : Object.assign;
        if (merge && isPlainObject(obj[prop]) && isPlainObject(value)) {
          obj[prop] = merge(obj[prop], value);
        } else {
          obj[prop] = value;
        }
      } else {
        obj[prop] = value;
      }
      return obj;
    };
    var setValue = (target, path, value, options) => {
      if (!path || !isObject(target))
        return target;
      const keys = split(path, options);
      let obj = target;
      for (let i10 = 0; i10 < keys.length; i10++) {
        const key = keys[i10];
        const next = keys[i10 + 1];
        validateKey(key);
        if (next === void 0) {
          assignProp(obj, key, value, options);
          break;
        }
        if (typeof next === "number" && !Array.isArray(obj[key])) {
          obj = obj[key] = [];
          continue;
        }
        if (!isObject(obj[key])) {
          obj[key] = {};
        }
        obj = obj[key];
      }
      return target;
    };
    setValue.split = split;
    setValue.cache = /* @__PURE__ */ new Map();
    setValue.clear = () => {
      setValue.cache = /* @__PURE__ */ new Map();
    };
    module.exports = setValue;
  }
});

// node_modules/toggle-selection/index.js
var require_toggle_selection = __commonJS({
  "node_modules/toggle-selection/index.js"(exports, module) {
    module.exports = function() {
      var selection = document.getSelection();
      if (!selection.rangeCount) {
        return function() {
        };
      }
      var active = document.activeElement;
      var ranges = [];
      for (var i10 = 0; i10 < selection.rangeCount; i10++) {
        ranges.push(selection.getRangeAt(i10));
      }
      switch (active.tagName.toUpperCase()) {
        case "INPUT":
        case "TEXTAREA":
          active.blur();
          break;
        default:
          active = null;
          break;
      }
      selection.removeAllRanges();
      return function() {
        selection.type === "Caret" && selection.removeAllRanges();
        if (!selection.rangeCount) {
          ranges.forEach(function(range) {
            selection.addRange(range);
          });
        }
        active && active.focus();
      };
    };
  }
});

// node_modules/copy-to-clipboard/index.js
var require_copy_to_clipboard = __commonJS({
  "node_modules/copy-to-clipboard/index.js"(exports, module) {
    "use strict";
    var deselectCurrent = require_toggle_selection();
    var clipboardToIE11Formatting = {
      "text/plain": "Text",
      "text/html": "Url",
      "default": "Text"
    };
    var defaultMessage = "Copy to clipboard: #{key}, Enter";
    function format(message) {
      var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
      return message.replace(/#{\s*key\s*}/g, copyKey);
    }
    function copy(text, options) {
      var debug, message, reselectPrevious, range, selection, mark, success = false;
      if (!options) {
        options = {};
      }
      debug = options.debug || false;
      try {
        reselectPrevious = deselectCurrent();
        range = document.createRange();
        selection = document.getSelection();
        mark = document.createElement("span");
        mark.textContent = text;
        mark.ariaHidden = "true";
        mark.style.all = "unset";
        mark.style.position = "fixed";
        mark.style.top = 0;
        mark.style.clip = "rect(0, 0, 0, 0)";
        mark.style.whiteSpace = "pre";
        mark.style.webkitUserSelect = "text";
        mark.style.MozUserSelect = "text";
        mark.style.msUserSelect = "text";
        mark.style.userSelect = "text";
        mark.addEventListener("copy", function(e6) {
          e6.stopPropagation();
          if (options.format) {
            e6.preventDefault();
            if (typeof e6.clipboardData === "undefined") {
              debug && console.warn("unable to use e.clipboardData");
              debug && console.warn("trying IE specific stuff");
              window.clipboardData.clearData();
              var format2 = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
              window.clipboardData.setData(format2, text);
            } else {
              e6.clipboardData.clearData();
              e6.clipboardData.setData(options.format, text);
            }
          }
          if (options.onCopy) {
            e6.preventDefault();
            options.onCopy(e6.clipboardData);
          }
        });
        document.body.appendChild(mark);
        range.selectNodeContents(mark);
        selection.addRange(range);
        var successful = document.execCommand("copy");
        if (!successful) {
          throw new Error("copy command was unsuccessful");
        }
        success = true;
      } catch (err) {
        debug && console.error("unable to copy using execCommand: ", err);
        debug && console.warn("trying IE specific stuff");
        try {
          window.clipboardData.setData(options.format || "text", text);
          options.onCopy && options.onCopy(window.clipboardData);
          success = true;
        } catch (err2) {
          debug && console.error("unable to copy using clipboardData: ", err2);
          debug && console.error("falling back to prompt");
          message = format("message" in options ? options.message : defaultMessage);
          window.prompt(message, text);
        }
      } finally {
        if (selection) {
          if (typeof selection.removeRange == "function") {
            selection.removeRange(range);
          } else {
            selection.removeAllRanges();
          }
        }
        if (mark) {
          document.body.removeChild(mark);
        }
        reselectPrevious();
      }
      return success;
    }
    module.exports = copy;
  }
});

// node_modules/markdown-it/node_modules/entities/lib/maps/entities.json
var require_entities = __commonJS({
  "node_modules/markdown-it/node_modules/entities/lib/maps/entities.json"(exports, module) {
    module.exports = { Aacute: "Á", aacute: "á", Abreve: "Ă", abreve: "ă", ac: "∾", acd: "∿", acE: "∾̳", Acirc: "Â", acirc: "â", acute: "´", Acy: "А", acy: "а", AElig: "Æ", aelig: "æ", af: "⁡", Afr: "𝔄", afr: "𝔞", Agrave: "À", agrave: "à", alefsym: "ℵ", aleph: "ℵ", Alpha: "Α", alpha: "α", Amacr: "Ā", amacr: "ā", amalg: "⨿", amp: "&", AMP: "&", andand: "⩕", And: "⩓", and: "∧", andd: "⩜", andslope: "⩘", andv: "⩚", ang: "∠", ange: "⦤", angle: "∠", angmsdaa: "⦨", angmsdab: "⦩", angmsdac: "⦪", angmsdad: "⦫", angmsdae: "⦬", angmsdaf: "⦭", angmsdag: "⦮", angmsdah: "⦯", angmsd: "∡", angrt: "∟", angrtvb: "⊾", angrtvbd: "⦝", angsph: "∢", angst: "Å", angzarr: "⍼", Aogon: "Ą", aogon: "ą", Aopf: "𝔸", aopf: "𝕒", apacir: "⩯", ap: "≈", apE: "⩰", ape: "≊", apid: "≋", apos: "'", ApplyFunction: "⁡", approx: "≈", approxeq: "≊", Aring: "Å", aring: "å", Ascr: "𝒜", ascr: "𝒶", Assign: "≔", ast: "*", asymp: "≈", asympeq: "≍", Atilde: "Ã", atilde: "ã", Auml: "Ä", auml: "ä", awconint: "∳", awint: "⨑", backcong: "≌", backepsilon: "϶", backprime: "‵", backsim: "∽", backsimeq: "⋍", Backslash: "∖", Barv: "⫧", barvee: "⊽", barwed: "⌅", Barwed: "⌆", barwedge: "⌅", bbrk: "⎵", bbrktbrk: "⎶", bcong: "≌", Bcy: "Б", bcy: "б", bdquo: "„", becaus: "∵", because: "∵", Because: "∵", bemptyv: "⦰", bepsi: "϶", bernou: "ℬ", Bernoullis: "ℬ", Beta: "Β", beta: "β", beth: "ℶ", between: "≬", Bfr: "𝔅", bfr: "𝔟", bigcap: "⋂", bigcirc: "◯", bigcup: "⋃", bigodot: "⨀", bigoplus: "⨁", bigotimes: "⨂", bigsqcup: "⨆", bigstar: "★", bigtriangledown: "▽", bigtriangleup: "△", biguplus: "⨄", bigvee: "⋁", bigwedge: "⋀", bkarow: "⤍", blacklozenge: "⧫", blacksquare: "▪", blacktriangle: "▴", blacktriangledown: "▾", blacktriangleleft: "◂", blacktriangleright: "▸", blank: "␣", blk12: "▒", blk14: "░", blk34: "▓", block: "█", bne: "=⃥", bnequiv: "≡⃥", bNot: "⫭", bnot: "⌐", Bopf: "𝔹", bopf: "𝕓", bot: "⊥", bottom: "⊥", bowtie: "⋈", boxbox: "⧉", boxdl: "┐", boxdL: "╕", boxDl: "╖", boxDL: "╗", boxdr: "┌", boxdR: "╒", boxDr: "╓", boxDR: "╔", boxh: "─", boxH: "═", boxhd: "┬", boxHd: "╤", boxhD: "╥", boxHD: "╦", boxhu: "┴", boxHu: "╧", boxhU: "╨", boxHU: "╩", boxminus: "⊟", boxplus: "⊞", boxtimes: "⊠", boxul: "┘", boxuL: "╛", boxUl: "╜", boxUL: "╝", boxur: "└", boxuR: "╘", boxUr: "╙", boxUR: "╚", boxv: "│", boxV: "║", boxvh: "┼", boxvH: "╪", boxVh: "╫", boxVH: "╬", boxvl: "┤", boxvL: "╡", boxVl: "╢", boxVL: "╣", boxvr: "├", boxvR: "╞", boxVr: "╟", boxVR: "╠", bprime: "‵", breve: "˘", Breve: "˘", brvbar: "¦", bscr: "𝒷", Bscr: "ℬ", bsemi: "⁏", bsim: "∽", bsime: "⋍", bsolb: "⧅", bsol: "\\", bsolhsub: "⟈", bull: "•", bullet: "•", bump: "≎", bumpE: "⪮", bumpe: "≏", Bumpeq: "≎", bumpeq: "≏", Cacute: "Ć", cacute: "ć", capand: "⩄", capbrcup: "⩉", capcap: "⩋", cap: "∩", Cap: "⋒", capcup: "⩇", capdot: "⩀", CapitalDifferentialD: "ⅅ", caps: "∩︀", caret: "⁁", caron: "ˇ", Cayleys: "ℭ", ccaps: "⩍", Ccaron: "Č", ccaron: "č", Ccedil: "Ç", ccedil: "ç", Ccirc: "Ĉ", ccirc: "ĉ", Cconint: "∰", ccups: "⩌", ccupssm: "⩐", Cdot: "Ċ", cdot: "ċ", cedil: "¸", Cedilla: "¸", cemptyv: "⦲", cent: "¢", centerdot: "·", CenterDot: "·", cfr: "𝔠", Cfr: "ℭ", CHcy: "Ч", chcy: "ч", check: "✓", checkmark: "✓", Chi: "Χ", chi: "χ", circ: "ˆ", circeq: "≗", circlearrowleft: "↺", circlearrowright: "↻", circledast: "⊛", circledcirc: "⊚", circleddash: "⊝", CircleDot: "⊙", circledR: "®", circledS: "Ⓢ", CircleMinus: "⊖", CirclePlus: "⊕", CircleTimes: "⊗", cir: "○", cirE: "⧃", cire: "≗", cirfnint: "⨐", cirmid: "⫯", cirscir: "⧂", ClockwiseContourIntegral: "∲", CloseCurlyDoubleQuote: "”", CloseCurlyQuote: "’", clubs: "♣", clubsuit: "♣", colon: ":", Colon: "∷", Colone: "⩴", colone: "≔", coloneq: "≔", comma: ",", commat: "@", comp: "∁", compfn: "∘", complement: "∁", complexes: "ℂ", cong: "≅", congdot: "⩭", Congruent: "≡", conint: "∮", Conint: "∯", ContourIntegral: "∮", copf: "𝕔", Copf: "ℂ", coprod: "∐", Coproduct: "∐", copy: "©", COPY: "©", copysr: "℗", CounterClockwiseContourIntegral: "∳", crarr: "↵", cross: "✗", Cross: "⨯", Cscr: "𝒞", cscr: "𝒸", csub: "⫏", csube: "⫑", csup: "⫐", csupe: "⫒", ctdot: "⋯", cudarrl: "⤸", cudarrr: "⤵", cuepr: "⋞", cuesc: "⋟", cularr: "↶", cularrp: "⤽", cupbrcap: "⩈", cupcap: "⩆", CupCap: "≍", cup: "∪", Cup: "⋓", cupcup: "⩊", cupdot: "⊍", cupor: "⩅", cups: "∪︀", curarr: "↷", curarrm: "⤼", curlyeqprec: "⋞", curlyeqsucc: "⋟", curlyvee: "⋎", curlywedge: "⋏", curren: "¤", curvearrowleft: "↶", curvearrowright: "↷", cuvee: "⋎", cuwed: "⋏", cwconint: "∲", cwint: "∱", cylcty: "⌭", dagger: "†", Dagger: "‡", daleth: "ℸ", darr: "↓", Darr: "↡", dArr: "⇓", dash: "‐", Dashv: "⫤", dashv: "⊣", dbkarow: "⤏", dblac: "˝", Dcaron: "Ď", dcaron: "ď", Dcy: "Д", dcy: "д", ddagger: "‡", ddarr: "⇊", DD: "ⅅ", dd: "ⅆ", DDotrahd: "⤑", ddotseq: "⩷", deg: "°", Del: "∇", Delta: "Δ", delta: "δ", demptyv: "⦱", dfisht: "⥿", Dfr: "𝔇", dfr: "𝔡", dHar: "⥥", dharl: "⇃", dharr: "⇂", DiacriticalAcute: "´", DiacriticalDot: "˙", DiacriticalDoubleAcute: "˝", DiacriticalGrave: "`", DiacriticalTilde: "˜", diam: "⋄", diamond: "⋄", Diamond: "⋄", diamondsuit: "♦", diams: "♦", die: "¨", DifferentialD: "ⅆ", digamma: "ϝ", disin: "⋲", div: "÷", divide: "÷", divideontimes: "⋇", divonx: "⋇", DJcy: "Ђ", djcy: "ђ", dlcorn: "⌞", dlcrop: "⌍", dollar: "$", Dopf: "𝔻", dopf: "𝕕", Dot: "¨", dot: "˙", DotDot: "⃜", doteq: "≐", doteqdot: "≑", DotEqual: "≐", dotminus: "∸", dotplus: "∔", dotsquare: "⊡", doublebarwedge: "⌆", DoubleContourIntegral: "∯", DoubleDot: "¨", DoubleDownArrow: "⇓", DoubleLeftArrow: "⇐", DoubleLeftRightArrow: "⇔", DoubleLeftTee: "⫤", DoubleLongLeftArrow: "⟸", DoubleLongLeftRightArrow: "⟺", DoubleLongRightArrow: "⟹", DoubleRightArrow: "⇒", DoubleRightTee: "⊨", DoubleUpArrow: "⇑", DoubleUpDownArrow: "⇕", DoubleVerticalBar: "∥", DownArrowBar: "⤓", downarrow: "↓", DownArrow: "↓", Downarrow: "⇓", DownArrowUpArrow: "⇵", DownBreve: "̑", downdownarrows: "⇊", downharpoonleft: "⇃", downharpoonright: "⇂", DownLeftRightVector: "⥐", DownLeftTeeVector: "⥞", DownLeftVectorBar: "⥖", DownLeftVector: "↽", DownRightTeeVector: "⥟", DownRightVectorBar: "⥗", DownRightVector: "⇁", DownTeeArrow: "↧", DownTee: "⊤", drbkarow: "⤐", drcorn: "⌟", drcrop: "⌌", Dscr: "𝒟", dscr: "𝒹", DScy: "Ѕ", dscy: "ѕ", dsol: "⧶", Dstrok: "Đ", dstrok: "đ", dtdot: "⋱", dtri: "▿", dtrif: "▾", duarr: "⇵", duhar: "⥯", dwangle: "⦦", DZcy: "Џ", dzcy: "џ", dzigrarr: "⟿", Eacute: "É", eacute: "é", easter: "⩮", Ecaron: "Ě", ecaron: "ě", Ecirc: "Ê", ecirc: "ê", ecir: "≖", ecolon: "≕", Ecy: "Э", ecy: "э", eDDot: "⩷", Edot: "Ė", edot: "ė", eDot: "≑", ee: "ⅇ", efDot: "≒", Efr: "𝔈", efr: "𝔢", eg: "⪚", Egrave: "È", egrave: "è", egs: "⪖", egsdot: "⪘", el: "⪙", Element: "∈", elinters: "⏧", ell: "ℓ", els: "⪕", elsdot: "⪗", Emacr: "Ē", emacr: "ē", empty: "∅", emptyset: "∅", EmptySmallSquare: "◻", emptyv: "∅", EmptyVerySmallSquare: "▫", emsp13: " ", emsp14: " ", emsp: " ", ENG: "Ŋ", eng: "ŋ", ensp: " ", Eogon: "Ę", eogon: "ę", Eopf: "𝔼", eopf: "𝕖", epar: "⋕", eparsl: "⧣", eplus: "⩱", epsi: "ε", Epsilon: "Ε", epsilon: "ε", epsiv: "ϵ", eqcirc: "≖", eqcolon: "≕", eqsim: "≂", eqslantgtr: "⪖", eqslantless: "⪕", Equal: "⩵", equals: "=", EqualTilde: "≂", equest: "≟", Equilibrium: "⇌", equiv: "≡", equivDD: "⩸", eqvparsl: "⧥", erarr: "⥱", erDot: "≓", escr: "ℯ", Escr: "ℰ", esdot: "≐", Esim: "⩳", esim: "≂", Eta: "Η", eta: "η", ETH: "Ð", eth: "ð", Euml: "Ë", euml: "ë", euro: "€", excl: "!", exist: "∃", Exists: "∃", expectation: "ℰ", exponentiale: "ⅇ", ExponentialE: "ⅇ", fallingdotseq: "≒", Fcy: "Ф", fcy: "ф", female: "♀", ffilig: "ﬃ", fflig: "ﬀ", ffllig: "ﬄ", Ffr: "𝔉", ffr: "𝔣", filig: "ﬁ", FilledSmallSquare: "◼", FilledVerySmallSquare: "▪", fjlig: "fj", flat: "♭", fllig: "ﬂ", fltns: "▱", fnof: "ƒ", Fopf: "𝔽", fopf: "𝕗", forall: "∀", ForAll: "∀", fork: "⋔", forkv: "⫙", Fouriertrf: "ℱ", fpartint: "⨍", frac12: "½", frac13: "⅓", frac14: "¼", frac15: "⅕", frac16: "⅙", frac18: "⅛", frac23: "⅔", frac25: "⅖", frac34: "¾", frac35: "⅗", frac38: "⅜", frac45: "⅘", frac56: "⅚", frac58: "⅝", frac78: "⅞", frasl: "⁄", frown: "⌢", fscr: "𝒻", Fscr: "ℱ", gacute: "ǵ", Gamma: "Γ", gamma: "γ", Gammad: "Ϝ", gammad: "ϝ", gap: "⪆", Gbreve: "Ğ", gbreve: "ğ", Gcedil: "Ģ", Gcirc: "Ĝ", gcirc: "ĝ", Gcy: "Г", gcy: "г", Gdot: "Ġ", gdot: "ġ", ge: "≥", gE: "≧", gEl: "⪌", gel: "⋛", geq: "≥", geqq: "≧", geqslant: "⩾", gescc: "⪩", ges: "⩾", gesdot: "⪀", gesdoto: "⪂", gesdotol: "⪄", gesl: "⋛︀", gesles: "⪔", Gfr: "𝔊", gfr: "𝔤", gg: "≫", Gg: "⋙", ggg: "⋙", gimel: "ℷ", GJcy: "Ѓ", gjcy: "ѓ", gla: "⪥", gl: "≷", glE: "⪒", glj: "⪤", gnap: "⪊", gnapprox: "⪊", gne: "⪈", gnE: "≩", gneq: "⪈", gneqq: "≩", gnsim: "⋧", Gopf: "𝔾", gopf: "𝕘", grave: "`", GreaterEqual: "≥", GreaterEqualLess: "⋛", GreaterFullEqual: "≧", GreaterGreater: "⪢", GreaterLess: "≷", GreaterSlantEqual: "⩾", GreaterTilde: "≳", Gscr: "𝒢", gscr: "ℊ", gsim: "≳", gsime: "⪎", gsiml: "⪐", gtcc: "⪧", gtcir: "⩺", gt: ">", GT: ">", Gt: "≫", gtdot: "⋗", gtlPar: "⦕", gtquest: "⩼", gtrapprox: "⪆", gtrarr: "⥸", gtrdot: "⋗", gtreqless: "⋛", gtreqqless: "⪌", gtrless: "≷", gtrsim: "≳", gvertneqq: "≩︀", gvnE: "≩︀", Hacek: "ˇ", hairsp: " ", half: "½", hamilt: "ℋ", HARDcy: "Ъ", hardcy: "ъ", harrcir: "⥈", harr: "↔", hArr: "⇔", harrw: "↭", Hat: "^", hbar: "ℏ", Hcirc: "Ĥ", hcirc: "ĥ", hearts: "♥", heartsuit: "♥", hellip: "…", hercon: "⊹", hfr: "𝔥", Hfr: "ℌ", HilbertSpace: "ℋ", hksearow: "⤥", hkswarow: "⤦", hoarr: "⇿", homtht: "∻", hookleftarrow: "↩", hookrightarrow: "↪", hopf: "𝕙", Hopf: "ℍ", horbar: "―", HorizontalLine: "─", hscr: "𝒽", Hscr: "ℋ", hslash: "ℏ", Hstrok: "Ħ", hstrok: "ħ", HumpDownHump: "≎", HumpEqual: "≏", hybull: "⁃", hyphen: "‐", Iacute: "Í", iacute: "í", ic: "⁣", Icirc: "Î", icirc: "î", Icy: "И", icy: "и", Idot: "İ", IEcy: "Е", iecy: "е", iexcl: "¡", iff: "⇔", ifr: "𝔦", Ifr: "ℑ", Igrave: "Ì", igrave: "ì", ii: "ⅈ", iiiint: "⨌", iiint: "∭", iinfin: "⧜", iiota: "℩", IJlig: "Ĳ", ijlig: "ĳ", Imacr: "Ī", imacr: "ī", image: "ℑ", ImaginaryI: "ⅈ", imagline: "ℐ", imagpart: "ℑ", imath: "ı", Im: "ℑ", imof: "⊷", imped: "Ƶ", Implies: "⇒", incare: "℅", in: "∈", infin: "∞", infintie: "⧝", inodot: "ı", intcal: "⊺", int: "∫", Int: "∬", integers: "ℤ", Integral: "∫", intercal: "⊺", Intersection: "⋂", intlarhk: "⨗", intprod: "⨼", InvisibleComma: "⁣", InvisibleTimes: "⁢", IOcy: "Ё", iocy: "ё", Iogon: "Į", iogon: "į", Iopf: "𝕀", iopf: "𝕚", Iota: "Ι", iota: "ι", iprod: "⨼", iquest: "¿", iscr: "𝒾", Iscr: "ℐ", isin: "∈", isindot: "⋵", isinE: "⋹", isins: "⋴", isinsv: "⋳", isinv: "∈", it: "⁢", Itilde: "Ĩ", itilde: "ĩ", Iukcy: "І", iukcy: "і", Iuml: "Ï", iuml: "ï", Jcirc: "Ĵ", jcirc: "ĵ", Jcy: "Й", jcy: "й", Jfr: "𝔍", jfr: "𝔧", jmath: "ȷ", Jopf: "𝕁", jopf: "𝕛", Jscr: "𝒥", jscr: "𝒿", Jsercy: "Ј", jsercy: "ј", Jukcy: "Є", jukcy: "є", Kappa: "Κ", kappa: "κ", kappav: "ϰ", Kcedil: "Ķ", kcedil: "ķ", Kcy: "К", kcy: "к", Kfr: "𝔎", kfr: "𝔨", kgreen: "ĸ", KHcy: "Х", khcy: "х", KJcy: "Ќ", kjcy: "ќ", Kopf: "𝕂", kopf: "𝕜", Kscr: "𝒦", kscr: "𝓀", lAarr: "⇚", Lacute: "Ĺ", lacute: "ĺ", laemptyv: "⦴", lagran: "ℒ", Lambda: "Λ", lambda: "λ", lang: "⟨", Lang: "⟪", langd: "⦑", langle: "⟨", lap: "⪅", Laplacetrf: "ℒ", laquo: "«", larrb: "⇤", larrbfs: "⤟", larr: "←", Larr: "↞", lArr: "⇐", larrfs: "⤝", larrhk: "↩", larrlp: "↫", larrpl: "⤹", larrsim: "⥳", larrtl: "↢", latail: "⤙", lAtail: "⤛", lat: "⪫", late: "⪭", lates: "⪭︀", lbarr: "⤌", lBarr: "⤎", lbbrk: "❲", lbrace: "{", lbrack: "[", lbrke: "⦋", lbrksld: "⦏", lbrkslu: "⦍", Lcaron: "Ľ", lcaron: "ľ", Lcedil: "Ļ", lcedil: "ļ", lceil: "⌈", lcub: "{", Lcy: "Л", lcy: "л", ldca: "⤶", ldquo: "“", ldquor: "„", ldrdhar: "⥧", ldrushar: "⥋", ldsh: "↲", le: "≤", lE: "≦", LeftAngleBracket: "⟨", LeftArrowBar: "⇤", leftarrow: "←", LeftArrow: "←", Leftarrow: "⇐", LeftArrowRightArrow: "⇆", leftarrowtail: "↢", LeftCeiling: "⌈", LeftDoubleBracket: "⟦", LeftDownTeeVector: "⥡", LeftDownVectorBar: "⥙", LeftDownVector: "⇃", LeftFloor: "⌊", leftharpoondown: "↽", leftharpoonup: "↼", leftleftarrows: "⇇", leftrightarrow: "↔", LeftRightArrow: "↔", Leftrightarrow: "⇔", leftrightarrows: "⇆", leftrightharpoons: "⇋", leftrightsquigarrow: "↭", LeftRightVector: "⥎", LeftTeeArrow: "↤", LeftTee: "⊣", LeftTeeVector: "⥚", leftthreetimes: "⋋", LeftTriangleBar: "⧏", LeftTriangle: "⊲", LeftTriangleEqual: "⊴", LeftUpDownVector: "⥑", LeftUpTeeVector: "⥠", LeftUpVectorBar: "⥘", LeftUpVector: "↿", LeftVectorBar: "⥒", LeftVector: "↼", lEg: "⪋", leg: "⋚", leq: "≤", leqq: "≦", leqslant: "⩽", lescc: "⪨", les: "⩽", lesdot: "⩿", lesdoto: "⪁", lesdotor: "⪃", lesg: "⋚︀", lesges: "⪓", lessapprox: "⪅", lessdot: "⋖", lesseqgtr: "⋚", lesseqqgtr: "⪋", LessEqualGreater: "⋚", LessFullEqual: "≦", LessGreater: "≶", lessgtr: "≶", LessLess: "⪡", lesssim: "≲", LessSlantEqual: "⩽", LessTilde: "≲", lfisht: "⥼", lfloor: "⌊", Lfr: "𝔏", lfr: "𝔩", lg: "≶", lgE: "⪑", lHar: "⥢", lhard: "↽", lharu: "↼", lharul: "⥪", lhblk: "▄", LJcy: "Љ", ljcy: "љ", llarr: "⇇", ll: "≪", Ll: "⋘", llcorner: "⌞", Lleftarrow: "⇚", llhard: "⥫", lltri: "◺", Lmidot: "Ŀ", lmidot: "ŀ", lmoustache: "⎰", lmoust: "⎰", lnap: "⪉", lnapprox: "⪉", lne: "⪇", lnE: "≨", lneq: "⪇", lneqq: "≨", lnsim: "⋦", loang: "⟬", loarr: "⇽", lobrk: "⟦", longleftarrow: "⟵", LongLeftArrow: "⟵", Longleftarrow: "⟸", longleftrightarrow: "⟷", LongLeftRightArrow: "⟷", Longleftrightarrow: "⟺", longmapsto: "⟼", longrightarrow: "⟶", LongRightArrow: "⟶", Longrightarrow: "⟹", looparrowleft: "↫", looparrowright: "↬", lopar: "⦅", Lopf: "𝕃", lopf: "𝕝", loplus: "⨭", lotimes: "⨴", lowast: "∗", lowbar: "_", LowerLeftArrow: "↙", LowerRightArrow: "↘", loz: "◊", lozenge: "◊", lozf: "⧫", lpar: "(", lparlt: "⦓", lrarr: "⇆", lrcorner: "⌟", lrhar: "⇋", lrhard: "⥭", lrm: "‎", lrtri: "⊿", lsaquo: "‹", lscr: "𝓁", Lscr: "ℒ", lsh: "↰", Lsh: "↰", lsim: "≲", lsime: "⪍", lsimg: "⪏", lsqb: "[", lsquo: "‘", lsquor: "‚", Lstrok: "Ł", lstrok: "ł", ltcc: "⪦", ltcir: "⩹", lt: "<", LT: "<", Lt: "≪", ltdot: "⋖", lthree: "⋋", ltimes: "⋉", ltlarr: "⥶", ltquest: "⩻", ltri: "◃", ltrie: "⊴", ltrif: "◂", ltrPar: "⦖", lurdshar: "⥊", luruhar: "⥦", lvertneqq: "≨︀", lvnE: "≨︀", macr: "¯", male: "♂", malt: "✠", maltese: "✠", Map: "⤅", map: "↦", mapsto: "↦", mapstodown: "↧", mapstoleft: "↤", mapstoup: "↥", marker: "▮", mcomma: "⨩", Mcy: "М", mcy: "м", mdash: "—", mDDot: "∺", measuredangle: "∡", MediumSpace: " ", Mellintrf: "ℳ", Mfr: "𝔐", mfr: "𝔪", mho: "℧", micro: "µ", midast: "*", midcir: "⫰", mid: "∣", middot: "·", minusb: "⊟", minus: "−", minusd: "∸", minusdu: "⨪", MinusPlus: "∓", mlcp: "⫛", mldr: "…", mnplus: "∓", models: "⊧", Mopf: "𝕄", mopf: "𝕞", mp: "∓", mscr: "𝓂", Mscr: "ℳ", mstpos: "∾", Mu: "Μ", mu: "μ", multimap: "⊸", mumap: "⊸", nabla: "∇", Nacute: "Ń", nacute: "ń", nang: "∠⃒", nap: "≉", napE: "⩰̸", napid: "≋̸", napos: "ŉ", napprox: "≉", natural: "♮", naturals: "ℕ", natur: "♮", nbsp: " ", nbump: "≎̸", nbumpe: "≏̸", ncap: "⩃", Ncaron: "Ň", ncaron: "ň", Ncedil: "Ņ", ncedil: "ņ", ncong: "≇", ncongdot: "⩭̸", ncup: "⩂", Ncy: "Н", ncy: "н", ndash: "–", nearhk: "⤤", nearr: "↗", neArr: "⇗", nearrow: "↗", ne: "≠", nedot: "≐̸", NegativeMediumSpace: "​", NegativeThickSpace: "​", NegativeThinSpace: "​", NegativeVeryThinSpace: "​", nequiv: "≢", nesear: "⤨", nesim: "≂̸", NestedGreaterGreater: "≫", NestedLessLess: "≪", NewLine: "\n", nexist: "∄", nexists: "∄", Nfr: "𝔑", nfr: "𝔫", ngE: "≧̸", nge: "≱", ngeq: "≱", ngeqq: "≧̸", ngeqslant: "⩾̸", nges: "⩾̸", nGg: "⋙̸", ngsim: "≵", nGt: "≫⃒", ngt: "≯", ngtr: "≯", nGtv: "≫̸", nharr: "↮", nhArr: "⇎", nhpar: "⫲", ni: "∋", nis: "⋼", nisd: "⋺", niv: "∋", NJcy: "Њ", njcy: "њ", nlarr: "↚", nlArr: "⇍", nldr: "‥", nlE: "≦̸", nle: "≰", nleftarrow: "↚", nLeftarrow: "⇍", nleftrightarrow: "↮", nLeftrightarrow: "⇎", nleq: "≰", nleqq: "≦̸", nleqslant: "⩽̸", nles: "⩽̸", nless: "≮", nLl: "⋘̸", nlsim: "≴", nLt: "≪⃒", nlt: "≮", nltri: "⋪", nltrie: "⋬", nLtv: "≪̸", nmid: "∤", NoBreak: "⁠", NonBreakingSpace: " ", nopf: "𝕟", Nopf: "ℕ", Not: "⫬", not: "¬", NotCongruent: "≢", NotCupCap: "≭", NotDoubleVerticalBar: "∦", NotElement: "∉", NotEqual: "≠", NotEqualTilde: "≂̸", NotExists: "∄", NotGreater: "≯", NotGreaterEqual: "≱", NotGreaterFullEqual: "≧̸", NotGreaterGreater: "≫̸", NotGreaterLess: "≹", NotGreaterSlantEqual: "⩾̸", NotGreaterTilde: "≵", NotHumpDownHump: "≎̸", NotHumpEqual: "≏̸", notin: "∉", notindot: "⋵̸", notinE: "⋹̸", notinva: "∉", notinvb: "⋷", notinvc: "⋶", NotLeftTriangleBar: "⧏̸", NotLeftTriangle: "⋪", NotLeftTriangleEqual: "⋬", NotLess: "≮", NotLessEqual: "≰", NotLessGreater: "≸", NotLessLess: "≪̸", NotLessSlantEqual: "⩽̸", NotLessTilde: "≴", NotNestedGreaterGreater: "⪢̸", NotNestedLessLess: "⪡̸", notni: "∌", notniva: "∌", notnivb: "⋾", notnivc: "⋽", NotPrecedes: "⊀", NotPrecedesEqual: "⪯̸", NotPrecedesSlantEqual: "⋠", NotReverseElement: "∌", NotRightTriangleBar: "⧐̸", NotRightTriangle: "⋫", NotRightTriangleEqual: "⋭", NotSquareSubset: "⊏̸", NotSquareSubsetEqual: "⋢", NotSquareSuperset: "⊐̸", NotSquareSupersetEqual: "⋣", NotSubset: "⊂⃒", NotSubsetEqual: "⊈", NotSucceeds: "⊁", NotSucceedsEqual: "⪰̸", NotSucceedsSlantEqual: "⋡", NotSucceedsTilde: "≿̸", NotSuperset: "⊃⃒", NotSupersetEqual: "⊉", NotTilde: "≁", NotTildeEqual: "≄", NotTildeFullEqual: "≇", NotTildeTilde: "≉", NotVerticalBar: "∤", nparallel: "∦", npar: "∦", nparsl: "⫽⃥", npart: "∂̸", npolint: "⨔", npr: "⊀", nprcue: "⋠", nprec: "⊀", npreceq: "⪯̸", npre: "⪯̸", nrarrc: "⤳̸", nrarr: "↛", nrArr: "⇏", nrarrw: "↝̸", nrightarrow: "↛", nRightarrow: "⇏", nrtri: "⋫", nrtrie: "⋭", nsc: "⊁", nsccue: "⋡", nsce: "⪰̸", Nscr: "𝒩", nscr: "𝓃", nshortmid: "∤", nshortparallel: "∦", nsim: "≁", nsime: "≄", nsimeq: "≄", nsmid: "∤", nspar: "∦", nsqsube: "⋢", nsqsupe: "⋣", nsub: "⊄", nsubE: "⫅̸", nsube: "⊈", nsubset: "⊂⃒", nsubseteq: "⊈", nsubseteqq: "⫅̸", nsucc: "⊁", nsucceq: "⪰̸", nsup: "⊅", nsupE: "⫆̸", nsupe: "⊉", nsupset: "⊃⃒", nsupseteq: "⊉", nsupseteqq: "⫆̸", ntgl: "≹", Ntilde: "Ñ", ntilde: "ñ", ntlg: "≸", ntriangleleft: "⋪", ntrianglelefteq: "⋬", ntriangleright: "⋫", ntrianglerighteq: "⋭", Nu: "Ν", nu: "ν", num: "#", numero: "№", numsp: " ", nvap: "≍⃒", nvdash: "⊬", nvDash: "⊭", nVdash: "⊮", nVDash: "⊯", nvge: "≥⃒", nvgt: ">⃒", nvHarr: "⤄", nvinfin: "⧞", nvlArr: "⤂", nvle: "≤⃒", nvlt: "<⃒", nvltrie: "⊴⃒", nvrArr: "⤃", nvrtrie: "⊵⃒", nvsim: "∼⃒", nwarhk: "⤣", nwarr: "↖", nwArr: "⇖", nwarrow: "↖", nwnear: "⤧", Oacute: "Ó", oacute: "ó", oast: "⊛", Ocirc: "Ô", ocirc: "ô", ocir: "⊚", Ocy: "О", ocy: "о", odash: "⊝", Odblac: "Ő", odblac: "ő", odiv: "⨸", odot: "⊙", odsold: "⦼", OElig: "Œ", oelig: "œ", ofcir: "⦿", Ofr: "𝔒", ofr: "𝔬", ogon: "˛", Ograve: "Ò", ograve: "ò", ogt: "⧁", ohbar: "⦵", ohm: "Ω", oint: "∮", olarr: "↺", olcir: "⦾", olcross: "⦻", oline: "‾", olt: "⧀", Omacr: "Ō", omacr: "ō", Omega: "Ω", omega: "ω", Omicron: "Ο", omicron: "ο", omid: "⦶", ominus: "⊖", Oopf: "𝕆", oopf: "𝕠", opar: "⦷", OpenCurlyDoubleQuote: "“", OpenCurlyQuote: "‘", operp: "⦹", oplus: "⊕", orarr: "↻", Or: "⩔", or: "∨", ord: "⩝", order: "ℴ", orderof: "ℴ", ordf: "ª", ordm: "º", origof: "⊶", oror: "⩖", orslope: "⩗", orv: "⩛", oS: "Ⓢ", Oscr: "𝒪", oscr: "ℴ", Oslash: "Ø", oslash: "ø", osol: "⊘", Otilde: "Õ", otilde: "õ", otimesas: "⨶", Otimes: "⨷", otimes: "⊗", Ouml: "Ö", ouml: "ö", ovbar: "⌽", OverBar: "‾", OverBrace: "⏞", OverBracket: "⎴", OverParenthesis: "⏜", para: "¶", parallel: "∥", par: "∥", parsim: "⫳", parsl: "⫽", part: "∂", PartialD: "∂", Pcy: "П", pcy: "п", percnt: "%", period: ".", permil: "‰", perp: "⊥", pertenk: "‱", Pfr: "𝔓", pfr: "𝔭", Phi: "Φ", phi: "φ", phiv: "ϕ", phmmat: "ℳ", phone: "☎", Pi: "Π", pi: "π", pitchfork: "⋔", piv: "ϖ", planck: "ℏ", planckh: "ℎ", plankv: "ℏ", plusacir: "⨣", plusb: "⊞", pluscir: "⨢", plus: "+", plusdo: "∔", plusdu: "⨥", pluse: "⩲", PlusMinus: "±", plusmn: "±", plussim: "⨦", plustwo: "⨧", pm: "±", Poincareplane: "ℌ", pointint: "⨕", popf: "𝕡", Popf: "ℙ", pound: "£", prap: "⪷", Pr: "⪻", pr: "≺", prcue: "≼", precapprox: "⪷", prec: "≺", preccurlyeq: "≼", Precedes: "≺", PrecedesEqual: "⪯", PrecedesSlantEqual: "≼", PrecedesTilde: "≾", preceq: "⪯", precnapprox: "⪹", precneqq: "⪵", precnsim: "⋨", pre: "⪯", prE: "⪳", precsim: "≾", prime: "′", Prime: "″", primes: "ℙ", prnap: "⪹", prnE: "⪵", prnsim: "⋨", prod: "∏", Product: "∏", profalar: "⌮", profline: "⌒", profsurf: "⌓", prop: "∝", Proportional: "∝", Proportion: "∷", propto: "∝", prsim: "≾", prurel: "⊰", Pscr: "𝒫", pscr: "𝓅", Psi: "Ψ", psi: "ψ", puncsp: " ", Qfr: "𝔔", qfr: "𝔮", qint: "⨌", qopf: "𝕢", Qopf: "ℚ", qprime: "⁗", Qscr: "𝒬", qscr: "𝓆", quaternions: "ℍ", quatint: "⨖", quest: "?", questeq: "≟", quot: '"', QUOT: '"', rAarr: "⇛", race: "∽̱", Racute: "Ŕ", racute: "ŕ", radic: "√", raemptyv: "⦳", rang: "⟩", Rang: "⟫", rangd: "⦒", range: "⦥", rangle: "⟩", raquo: "»", rarrap: "⥵", rarrb: "⇥", rarrbfs: "⤠", rarrc: "⤳", rarr: "→", Rarr: "↠", rArr: "⇒", rarrfs: "⤞", rarrhk: "↪", rarrlp: "↬", rarrpl: "⥅", rarrsim: "⥴", Rarrtl: "⤖", rarrtl: "↣", rarrw: "↝", ratail: "⤚", rAtail: "⤜", ratio: "∶", rationals: "ℚ", rbarr: "⤍", rBarr: "⤏", RBarr: "⤐", rbbrk: "❳", rbrace: "}", rbrack: "]", rbrke: "⦌", rbrksld: "⦎", rbrkslu: "⦐", Rcaron: "Ř", rcaron: "ř", Rcedil: "Ŗ", rcedil: "ŗ", rceil: "⌉", rcub: "}", Rcy: "Р", rcy: "р", rdca: "⤷", rdldhar: "⥩", rdquo: "”", rdquor: "”", rdsh: "↳", real: "ℜ", realine: "ℛ", realpart: "ℜ", reals: "ℝ", Re: "ℜ", rect: "▭", reg: "®", REG: "®", ReverseElement: "∋", ReverseEquilibrium: "⇋", ReverseUpEquilibrium: "⥯", rfisht: "⥽", rfloor: "⌋", rfr: "𝔯", Rfr: "ℜ", rHar: "⥤", rhard: "⇁", rharu: "⇀", rharul: "⥬", Rho: "Ρ", rho: "ρ", rhov: "ϱ", RightAngleBracket: "⟩", RightArrowBar: "⇥", rightarrow: "→", RightArrow: "→", Rightarrow: "⇒", RightArrowLeftArrow: "⇄", rightarrowtail: "↣", RightCeiling: "⌉", RightDoubleBracket: "⟧", RightDownTeeVector: "⥝", RightDownVectorBar: "⥕", RightDownVector: "⇂", RightFloor: "⌋", rightharpoondown: "⇁", rightharpoonup: "⇀", rightleftarrows: "⇄", rightleftharpoons: "⇌", rightrightarrows: "⇉", rightsquigarrow: "↝", RightTeeArrow: "↦", RightTee: "⊢", RightTeeVector: "⥛", rightthreetimes: "⋌", RightTriangleBar: "⧐", RightTriangle: "⊳", RightTriangleEqual: "⊵", RightUpDownVector: "⥏", RightUpTeeVector: "⥜", RightUpVectorBar: "⥔", RightUpVector: "↾", RightVectorBar: "⥓", RightVector: "⇀", ring: "˚", risingdotseq: "≓", rlarr: "⇄", rlhar: "⇌", rlm: "‏", rmoustache: "⎱", rmoust: "⎱", rnmid: "⫮", roang: "⟭", roarr: "⇾", robrk: "⟧", ropar: "⦆", ropf: "𝕣", Ropf: "ℝ", roplus: "⨮", rotimes: "⨵", RoundImplies: "⥰", rpar: ")", rpargt: "⦔", rppolint: "⨒", rrarr: "⇉", Rrightarrow: "⇛", rsaquo: "›", rscr: "𝓇", Rscr: "ℛ", rsh: "↱", Rsh: "↱", rsqb: "]", rsquo: "’", rsquor: "’", rthree: "⋌", rtimes: "⋊", rtri: "▹", rtrie: "⊵", rtrif: "▸", rtriltri: "⧎", RuleDelayed: "⧴", ruluhar: "⥨", rx: "℞", Sacute: "Ś", sacute: "ś", sbquo: "‚", scap: "⪸", Scaron: "Š", scaron: "š", Sc: "⪼", sc: "≻", sccue: "≽", sce: "⪰", scE: "⪴", Scedil: "Ş", scedil: "ş", Scirc: "Ŝ", scirc: "ŝ", scnap: "⪺", scnE: "⪶", scnsim: "⋩", scpolint: "⨓", scsim: "≿", Scy: "С", scy: "с", sdotb: "⊡", sdot: "⋅", sdote: "⩦", searhk: "⤥", searr: "↘", seArr: "⇘", searrow: "↘", sect: "§", semi: ";", seswar: "⤩", setminus: "∖", setmn: "∖", sext: "✶", Sfr: "𝔖", sfr: "𝔰", sfrown: "⌢", sharp: "♯", SHCHcy: "Щ", shchcy: "щ", SHcy: "Ш", shcy: "ш", ShortDownArrow: "↓", ShortLeftArrow: "←", shortmid: "∣", shortparallel: "∥", ShortRightArrow: "→", ShortUpArrow: "↑", shy: "­", Sigma: "Σ", sigma: "σ", sigmaf: "ς", sigmav: "ς", sim: "∼", simdot: "⩪", sime: "≃", simeq: "≃", simg: "⪞", simgE: "⪠", siml: "⪝", simlE: "⪟", simne: "≆", simplus: "⨤", simrarr: "⥲", slarr: "←", SmallCircle: "∘", smallsetminus: "∖", smashp: "⨳", smeparsl: "⧤", smid: "∣", smile: "⌣", smt: "⪪", smte: "⪬", smtes: "⪬︀", SOFTcy: "Ь", softcy: "ь", solbar: "⌿", solb: "⧄", sol: "/", Sopf: "𝕊", sopf: "𝕤", spades: "♠", spadesuit: "♠", spar: "∥", sqcap: "⊓", sqcaps: "⊓︀", sqcup: "⊔", sqcups: "⊔︀", Sqrt: "√", sqsub: "⊏", sqsube: "⊑", sqsubset: "⊏", sqsubseteq: "⊑", sqsup: "⊐", sqsupe: "⊒", sqsupset: "⊐", sqsupseteq: "⊒", square: "□", Square: "□", SquareIntersection: "⊓", SquareSubset: "⊏", SquareSubsetEqual: "⊑", SquareSuperset: "⊐", SquareSupersetEqual: "⊒", SquareUnion: "⊔", squarf: "▪", squ: "□", squf: "▪", srarr: "→", Sscr: "𝒮", sscr: "𝓈", ssetmn: "∖", ssmile: "⌣", sstarf: "⋆", Star: "⋆", star: "☆", starf: "★", straightepsilon: "ϵ", straightphi: "ϕ", strns: "¯", sub: "⊂", Sub: "⋐", subdot: "⪽", subE: "⫅", sube: "⊆", subedot: "⫃", submult: "⫁", subnE: "⫋", subne: "⊊", subplus: "⪿", subrarr: "⥹", subset: "⊂", Subset: "⋐", subseteq: "⊆", subseteqq: "⫅", SubsetEqual: "⊆", subsetneq: "⊊", subsetneqq: "⫋", subsim: "⫇", subsub: "⫕", subsup: "⫓", succapprox: "⪸", succ: "≻", succcurlyeq: "≽", Succeeds: "≻", SucceedsEqual: "⪰", SucceedsSlantEqual: "≽", SucceedsTilde: "≿", succeq: "⪰", succnapprox: "⪺", succneqq: "⪶", succnsim: "⋩", succsim: "≿", SuchThat: "∋", sum: "∑", Sum: "∑", sung: "♪", sup1: "¹", sup2: "²", sup3: "³", sup: "⊃", Sup: "⋑", supdot: "⪾", supdsub: "⫘", supE: "⫆", supe: "⊇", supedot: "⫄", Superset: "⊃", SupersetEqual: "⊇", suphsol: "⟉", suphsub: "⫗", suplarr: "⥻", supmult: "⫂", supnE: "⫌", supne: "⊋", supplus: "⫀", supset: "⊃", Supset: "⋑", supseteq: "⊇", supseteqq: "⫆", supsetneq: "⊋", supsetneqq: "⫌", supsim: "⫈", supsub: "⫔", supsup: "⫖", swarhk: "⤦", swarr: "↙", swArr: "⇙", swarrow: "↙", swnwar: "⤪", szlig: "ß", Tab: "	", target: "⌖", Tau: "Τ", tau: "τ", tbrk: "⎴", Tcaron: "Ť", tcaron: "ť", Tcedil: "Ţ", tcedil: "ţ", Tcy: "Т", tcy: "т", tdot: "⃛", telrec: "⌕", Tfr: "𝔗", tfr: "𝔱", there4: "∴", therefore: "∴", Therefore: "∴", Theta: "Θ", theta: "θ", thetasym: "ϑ", thetav: "ϑ", thickapprox: "≈", thicksim: "∼", ThickSpace: "  ", ThinSpace: " ", thinsp: " ", thkap: "≈", thksim: "∼", THORN: "Þ", thorn: "þ", tilde: "˜", Tilde: "∼", TildeEqual: "≃", TildeFullEqual: "≅", TildeTilde: "≈", timesbar: "⨱", timesb: "⊠", times: "×", timesd: "⨰", tint: "∭", toea: "⤨", topbot: "⌶", topcir: "⫱", top: "⊤", Topf: "𝕋", topf: "𝕥", topfork: "⫚", tosa: "⤩", tprime: "‴", trade: "™", TRADE: "™", triangle: "▵", triangledown: "▿", triangleleft: "◃", trianglelefteq: "⊴", triangleq: "≜", triangleright: "▹", trianglerighteq: "⊵", tridot: "◬", trie: "≜", triminus: "⨺", TripleDot: "⃛", triplus: "⨹", trisb: "⧍", tritime: "⨻", trpezium: "⏢", Tscr: "𝒯", tscr: "𝓉", TScy: "Ц", tscy: "ц", TSHcy: "Ћ", tshcy: "ћ", Tstrok: "Ŧ", tstrok: "ŧ", twixt: "≬", twoheadleftarrow: "↞", twoheadrightarrow: "↠", Uacute: "Ú", uacute: "ú", uarr: "↑", Uarr: "↟", uArr: "⇑", Uarrocir: "⥉", Ubrcy: "Ў", ubrcy: "ў", Ubreve: "Ŭ", ubreve: "ŭ", Ucirc: "Û", ucirc: "û", Ucy: "У", ucy: "у", udarr: "⇅", Udblac: "Ű", udblac: "ű", udhar: "⥮", ufisht: "⥾", Ufr: "𝔘", ufr: "𝔲", Ugrave: "Ù", ugrave: "ù", uHar: "⥣", uharl: "↿", uharr: "↾", uhblk: "▀", ulcorn: "⌜", ulcorner: "⌜", ulcrop: "⌏", ultri: "◸", Umacr: "Ū", umacr: "ū", uml: "¨", UnderBar: "_", UnderBrace: "⏟", UnderBracket: "⎵", UnderParenthesis: "⏝", Union: "⋃", UnionPlus: "⊎", Uogon: "Ų", uogon: "ų", Uopf: "𝕌", uopf: "𝕦", UpArrowBar: "⤒", uparrow: "↑", UpArrow: "↑", Uparrow: "⇑", UpArrowDownArrow: "⇅", updownarrow: "↕", UpDownArrow: "↕", Updownarrow: "⇕", UpEquilibrium: "⥮", upharpoonleft: "↿", upharpoonright: "↾", uplus: "⊎", UpperLeftArrow: "↖", UpperRightArrow: "↗", upsi: "υ", Upsi: "ϒ", upsih: "ϒ", Upsilon: "Υ", upsilon: "υ", UpTeeArrow: "↥", UpTee: "⊥", upuparrows: "⇈", urcorn: "⌝", urcorner: "⌝", urcrop: "⌎", Uring: "Ů", uring: "ů", urtri: "◹", Uscr: "𝒰", uscr: "𝓊", utdot: "⋰", Utilde: "Ũ", utilde: "ũ", utri: "▵", utrif: "▴", uuarr: "⇈", Uuml: "Ü", uuml: "ü", uwangle: "⦧", vangrt: "⦜", varepsilon: "ϵ", varkappa: "ϰ", varnothing: "∅", varphi: "ϕ", varpi: "ϖ", varpropto: "∝", varr: "↕", vArr: "⇕", varrho: "ϱ", varsigma: "ς", varsubsetneq: "⊊︀", varsubsetneqq: "⫋︀", varsupsetneq: "⊋︀", varsupsetneqq: "⫌︀", vartheta: "ϑ", vartriangleleft: "⊲", vartriangleright: "⊳", vBar: "⫨", Vbar: "⫫", vBarv: "⫩", Vcy: "В", vcy: "в", vdash: "⊢", vDash: "⊨", Vdash: "⊩", VDash: "⊫", Vdashl: "⫦", veebar: "⊻", vee: "∨", Vee: "⋁", veeeq: "≚", vellip: "⋮", verbar: "|", Verbar: "‖", vert: "|", Vert: "‖", VerticalBar: "∣", VerticalLine: "|", VerticalSeparator: "❘", VerticalTilde: "≀", VeryThinSpace: " ", Vfr: "𝔙", vfr: "𝔳", vltri: "⊲", vnsub: "⊂⃒", vnsup: "⊃⃒", Vopf: "𝕍", vopf: "𝕧", vprop: "∝", vrtri: "⊳", Vscr: "𝒱", vscr: "𝓋", vsubnE: "⫋︀", vsubne: "⊊︀", vsupnE: "⫌︀", vsupne: "⊋︀", Vvdash: "⊪", vzigzag: "⦚", Wcirc: "Ŵ", wcirc: "ŵ", wedbar: "⩟", wedge: "∧", Wedge: "⋀", wedgeq: "≙", weierp: "℘", Wfr: "𝔚", wfr: "𝔴", Wopf: "𝕎", wopf: "𝕨", wp: "℘", wr: "≀", wreath: "≀", Wscr: "𝒲", wscr: "𝓌", xcap: "⋂", xcirc: "◯", xcup: "⋃", xdtri: "▽", Xfr: "𝔛", xfr: "𝔵", xharr: "⟷", xhArr: "⟺", Xi: "Ξ", xi: "ξ", xlarr: "⟵", xlArr: "⟸", xmap: "⟼", xnis: "⋻", xodot: "⨀", Xopf: "𝕏", xopf: "𝕩", xoplus: "⨁", xotime: "⨂", xrarr: "⟶", xrArr: "⟹", Xscr: "𝒳", xscr: "𝓍", xsqcup: "⨆", xuplus: "⨄", xutri: "△", xvee: "⋁", xwedge: "⋀", Yacute: "Ý", yacute: "ý", YAcy: "Я", yacy: "я", Ycirc: "Ŷ", ycirc: "ŷ", Ycy: "Ы", ycy: "ы", yen: "¥", Yfr: "𝔜", yfr: "𝔶", YIcy: "Ї", yicy: "ї", Yopf: "𝕐", yopf: "𝕪", Yscr: "𝒴", yscr: "𝓎", YUcy: "Ю", yucy: "ю", yuml: "ÿ", Yuml: "Ÿ", Zacute: "Ź", zacute: "ź", Zcaron: "Ž", zcaron: "ž", Zcy: "З", zcy: "з", Zdot: "Ż", zdot: "ż", zeetrf: "ℨ", ZeroWidthSpace: "​", Zeta: "Ζ", zeta: "ζ", zfr: "𝔷", Zfr: "ℨ", ZHcy: "Ж", zhcy: "ж", zigrarr: "⇝", zopf: "𝕫", Zopf: "ℤ", Zscr: "𝒵", zscr: "𝓏", zwj: "‍", zwnj: "‌" };
  }
});

// node_modules/markdown-it/lib/common/entities.js
var require_entities2 = __commonJS({
  "node_modules/markdown-it/lib/common/entities.js"(exports, module) {
    "use strict";
    module.exports = require_entities();
  }
});

// node_modules/uc.micro/categories/P/regex.js
var require_regex = __commonJS({
  "node_modules/uc.micro/categories/P/regex.js"(exports, module) {
    module.exports = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/;
  }
});

// node_modules/mdurl/encode.js
var require_encode = __commonJS({
  "node_modules/mdurl/encode.js"(exports, module) {
    "use strict";
    var encodeCache = {};
    function getEncodeCache(exclude) {
      var i10, ch, cache = encodeCache[exclude];
      if (cache) {
        return cache;
      }
      cache = encodeCache[exclude] = [];
      for (i10 = 0; i10 < 128; i10++) {
        ch = String.fromCharCode(i10);
        if (/^[0-9a-z]$/i.test(ch)) {
          cache.push(ch);
        } else {
          cache.push("%" + ("0" + i10.toString(16).toUpperCase()).slice(-2));
        }
      }
      for (i10 = 0; i10 < exclude.length; i10++) {
        cache[exclude.charCodeAt(i10)] = exclude[i10];
      }
      return cache;
    }
    function encode2(string, exclude, keepEscaped) {
      var i10, l11, code, nextCode, cache, result = "";
      if (typeof exclude !== "string") {
        keepEscaped = exclude;
        exclude = encode2.defaultChars;
      }
      if (typeof keepEscaped === "undefined") {
        keepEscaped = true;
      }
      cache = getEncodeCache(exclude);
      for (i10 = 0, l11 = string.length; i10 < l11; i10++) {
        code = string.charCodeAt(i10);
        if (keepEscaped && code === 37 && i10 + 2 < l11) {
          if (/^[0-9a-f]{2}$/i.test(string.slice(i10 + 1, i10 + 3))) {
            result += string.slice(i10, i10 + 3);
            i10 += 2;
            continue;
          }
        }
        if (code < 128) {
          result += cache[code];
          continue;
        }
        if (code >= 55296 && code <= 57343) {
          if (code >= 55296 && code <= 56319 && i10 + 1 < l11) {
            nextCode = string.charCodeAt(i10 + 1);
            if (nextCode >= 56320 && nextCode <= 57343) {
              result += encodeURIComponent(string[i10] + string[i10 + 1]);
              i10++;
              continue;
            }
          }
          result += "%EF%BF%BD";
          continue;
        }
        result += encodeURIComponent(string[i10]);
      }
      return result;
    }
    encode2.defaultChars = ";/?:@&=+$,-_.!~*'()#";
    encode2.componentChars = "-_.!~*'()";
    module.exports = encode2;
  }
});

// node_modules/mdurl/decode.js
var require_decode = __commonJS({
  "node_modules/mdurl/decode.js"(exports, module) {
    "use strict";
    var decodeCache = {};
    function getDecodeCache(exclude) {
      var i10, ch, cache = decodeCache[exclude];
      if (cache) {
        return cache;
      }
      cache = decodeCache[exclude] = [];
      for (i10 = 0; i10 < 128; i10++) {
        ch = String.fromCharCode(i10);
        cache.push(ch);
      }
      for (i10 = 0; i10 < exclude.length; i10++) {
        ch = exclude.charCodeAt(i10);
        cache[ch] = "%" + ("0" + ch.toString(16).toUpperCase()).slice(-2);
      }
      return cache;
    }
    function decode2(string, exclude) {
      var cache;
      if (typeof exclude !== "string") {
        exclude = decode2.defaultChars;
      }
      cache = getDecodeCache(exclude);
      return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {
        var i10, l11, b1, b22, b32, b42, chr, result = "";
        for (i10 = 0, l11 = seq.length; i10 < l11; i10 += 3) {
          b1 = parseInt(seq.slice(i10 + 1, i10 + 3), 16);
          if (b1 < 128) {
            result += cache[b1];
            continue;
          }
          if ((b1 & 224) === 192 && i10 + 3 < l11) {
            b22 = parseInt(seq.slice(i10 + 4, i10 + 6), 16);
            if ((b22 & 192) === 128) {
              chr = b1 << 6 & 1984 | b22 & 63;
              if (chr < 128) {
                result += "��";
              } else {
                result += String.fromCharCode(chr);
              }
              i10 += 3;
              continue;
            }
          }
          if ((b1 & 240) === 224 && i10 + 6 < l11) {
            b22 = parseInt(seq.slice(i10 + 4, i10 + 6), 16);
            b32 = parseInt(seq.slice(i10 + 7, i10 + 9), 16);
            if ((b22 & 192) === 128 && (b32 & 192) === 128) {
              chr = b1 << 12 & 61440 | b22 << 6 & 4032 | b32 & 63;
              if (chr < 2048 || chr >= 55296 && chr <= 57343) {
                result += "���";
              } else {
                result += String.fromCharCode(chr);
              }
              i10 += 6;
              continue;
            }
          }
          if ((b1 & 248) === 240 && i10 + 9 < l11) {
            b22 = parseInt(seq.slice(i10 + 4, i10 + 6), 16);
            b32 = parseInt(seq.slice(i10 + 7, i10 + 9), 16);
            b42 = parseInt(seq.slice(i10 + 10, i10 + 12), 16);
            if ((b22 & 192) === 128 && (b32 & 192) === 128 && (b42 & 192) === 128) {
              chr = b1 << 18 & 1835008 | b22 << 12 & 258048 | b32 << 6 & 4032 | b42 & 63;
              if (chr < 65536 || chr > 1114111) {
                result += "����";
              } else {
                chr -= 65536;
                result += String.fromCharCode(55296 + (chr >> 10), 56320 + (chr & 1023));
              }
              i10 += 9;
              continue;
            }
          }
          result += "�";
        }
        return result;
      });
    }
    decode2.defaultChars = ";/?:@&=+$,#";
    decode2.componentChars = "";
    module.exports = decode2;
  }
});

// node_modules/mdurl/format.js
var require_format = __commonJS({
  "node_modules/mdurl/format.js"(exports, module) {
    "use strict";
    module.exports = function format(url) {
      var result = "";
      result += url.protocol || "";
      result += url.slashes ? "//" : "";
      result += url.auth ? url.auth + "@" : "";
      if (url.hostname && url.hostname.indexOf(":") !== -1) {
        result += "[" + url.hostname + "]";
      } else {
        result += url.hostname || "";
      }
      result += url.port ? ":" + url.port : "";
      result += url.pathname || "";
      result += url.search || "";
      result += url.hash || "";
      return result;
    };
  }
});

// node_modules/mdurl/parse.js
var require_parse = __commonJS({
  "node_modules/mdurl/parse.js"(exports, module) {
    "use strict";
    function Url() {
      this.protocol = null;
      this.slashes = null;
      this.auth = null;
      this.port = null;
      this.hostname = null;
      this.hash = null;
      this.search = null;
      this.pathname = null;
    }
    var protocolPattern = /^([a-z0-9.+-]+:)/i;
    var portPattern = /:[0-9]*$/;
    var simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/;
    var delims = ["<", ">", '"', "`", " ", "\r", "\n", "	"];
    var unwise = ["{", "}", "|", "\\", "^", "`"].concat(delims);
    var autoEscape = ["'"].concat(unwise);
    var nonHostChars = ["%", "/", "?", ";", "#"].concat(autoEscape);
    var hostEndingChars = ["/", "?", "#"];
    var hostnameMaxLen = 255;
    var hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/;
    var hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/;
    var hostlessProtocol = {
      "javascript": true,
      "javascript:": true
    };
    var slashedProtocol = {
      "http": true,
      "https": true,
      "ftp": true,
      "gopher": true,
      "file": true,
      "http:": true,
      "https:": true,
      "ftp:": true,
      "gopher:": true,
      "file:": true
    };
    function urlParse(url, slashesDenoteHost) {
      if (url && url instanceof Url) {
        return url;
      }
      var u10 = new Url();
      u10.parse(url, slashesDenoteHost);
      return u10;
    }
    Url.prototype.parse = function(url, slashesDenoteHost) {
      var i10, l11, lowerProto, hec, slashes, rest = url;
      rest = rest.trim();
      if (!slashesDenoteHost && url.split("#").length === 1) {
        var simplePath = simplePathPattern.exec(rest);
        if (simplePath) {
          this.pathname = simplePath[1];
          if (simplePath[2]) {
            this.search = simplePath[2];
          }
          return this;
        }
      }
      var proto = protocolPattern.exec(rest);
      if (proto) {
        proto = proto[0];
        lowerProto = proto.toLowerCase();
        this.protocol = proto;
        rest = rest.substr(proto.length);
      }
      if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
        slashes = rest.substr(0, 2) === "//";
        if (slashes && !(proto && hostlessProtocol[proto])) {
          rest = rest.substr(2);
          this.slashes = true;
        }
      }
      if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
        var hostEnd = -1;
        for (i10 = 0; i10 < hostEndingChars.length; i10++) {
          hec = rest.indexOf(hostEndingChars[i10]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
            hostEnd = hec;
          }
        }
        var auth, atSign;
        if (hostEnd === -1) {
          atSign = rest.lastIndexOf("@");
        } else {
          atSign = rest.lastIndexOf("@", hostEnd);
        }
        if (atSign !== -1) {
          auth = rest.slice(0, atSign);
          rest = rest.slice(atSign + 1);
          this.auth = auth;
        }
        hostEnd = -1;
        for (i10 = 0; i10 < nonHostChars.length; i10++) {
          hec = rest.indexOf(nonHostChars[i10]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
            hostEnd = hec;
          }
        }
        if (hostEnd === -1) {
          hostEnd = rest.length;
        }
        if (rest[hostEnd - 1] === ":") {
          hostEnd--;
        }
        var host = rest.slice(0, hostEnd);
        rest = rest.slice(hostEnd);
        this.parseHost(host);
        this.hostname = this.hostname || "";
        var ipv6Hostname = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
        if (!ipv6Hostname) {
          var hostparts = this.hostname.split(/\./);
          for (i10 = 0, l11 = hostparts.length; i10 < l11; i10++) {
            var part = hostparts[i10];
            if (!part) {
              continue;
            }
            if (!part.match(hostnamePartPattern)) {
              var newpart = "";
              for (var j7 = 0, k2 = part.length; j7 < k2; j7++) {
                if (part.charCodeAt(j7) > 127) {
                  newpart += "x";
                } else {
                  newpart += part[j7];
                }
              }
              if (!newpart.match(hostnamePartPattern)) {
                var validParts = hostparts.slice(0, i10);
                var notHost = hostparts.slice(i10 + 1);
                var bit = part.match(hostnamePartStart);
                if (bit) {
                  validParts.push(bit[1]);
                  notHost.unshift(bit[2]);
                }
                if (notHost.length) {
                  rest = notHost.join(".") + rest;
                }
                this.hostname = validParts.join(".");
                break;
              }
            }
          }
        }
        if (this.hostname.length > hostnameMaxLen) {
          this.hostname = "";
        }
        if (ipv6Hostname) {
          this.hostname = this.hostname.substr(1, this.hostname.length - 2);
        }
      }
      var hash = rest.indexOf("#");
      if (hash !== -1) {
        this.hash = rest.substr(hash);
        rest = rest.slice(0, hash);
      }
      var qm = rest.indexOf("?");
      if (qm !== -1) {
        this.search = rest.substr(qm);
        rest = rest.slice(0, qm);
      }
      if (rest) {
        this.pathname = rest;
      }
      if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
        this.pathname = "";
      }
      return this;
    };
    Url.prototype.parseHost = function(host) {
      var port = portPattern.exec(host);
      if (port) {
        port = port[0];
        if (port !== ":") {
          this.port = port.substr(1);
        }
        host = host.substr(0, host.length - port.length);
      }
      if (host) {
        this.hostname = host;
      }
    };
    module.exports = urlParse;
  }
});

// node_modules/mdurl/index.js
var require_mdurl = __commonJS({
  "node_modules/mdurl/index.js"(exports, module) {
    "use strict";
    module.exports.encode = require_encode();
    module.exports.decode = require_decode();
    module.exports.format = require_format();
    module.exports.parse = require_parse();
  }
});

// node_modules/uc.micro/properties/Any/regex.js
var require_regex2 = __commonJS({
  "node_modules/uc.micro/properties/Any/regex.js"(exports, module) {
    module.exports = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
  }
});

// node_modules/uc.micro/categories/Cc/regex.js
var require_regex3 = __commonJS({
  "node_modules/uc.micro/categories/Cc/regex.js"(exports, module) {
    module.exports = /[\0-\x1F\x7F-\x9F]/;
  }
});

// node_modules/uc.micro/categories/Cf/regex.js
var require_regex4 = __commonJS({
  "node_modules/uc.micro/categories/Cf/regex.js"(exports, module) {
    module.exports = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/;
  }
});

// node_modules/uc.micro/categories/Z/regex.js
var require_regex5 = __commonJS({
  "node_modules/uc.micro/categories/Z/regex.js"(exports, module) {
    module.exports = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/;
  }
});

// node_modules/uc.micro/index.js
var require_uc = __commonJS({
  "node_modules/uc.micro/index.js"(exports) {
    "use strict";
    exports.Any = require_regex2();
    exports.Cc = require_regex3();
    exports.Cf = require_regex4();
    exports.P = require_regex();
    exports.Z = require_regex5();
  }
});

// node_modules/markdown-it/lib/common/utils.js
var require_utils = __commonJS({
  "node_modules/markdown-it/lib/common/utils.js"(exports) {
    "use strict";
    function _class(obj) {
      return Object.prototype.toString.call(obj);
    }
    function isString3(obj) {
      return _class(obj) === "[object String]";
    }
    var _hasOwnProperty = Object.prototype.hasOwnProperty;
    function has(object, key) {
      return _hasOwnProperty.call(object, key);
    }
    function assign(obj) {
      var sources = Array.prototype.slice.call(arguments, 1);
      sources.forEach(function(source) {
        if (!source) {
          return;
        }
        if (typeof source !== "object") {
          throw new TypeError(source + "must be object");
        }
        Object.keys(source).forEach(function(key) {
          obj[key] = source[key];
        });
      });
      return obj;
    }
    function arrayReplaceAt(src, pos, newElements) {
      return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));
    }
    function isValidEntityCode(c16) {
      if (c16 >= 55296 && c16 <= 57343) {
        return false;
      }
      if (c16 >= 64976 && c16 <= 65007) {
        return false;
      }
      if ((c16 & 65535) === 65535 || (c16 & 65535) === 65534) {
        return false;
      }
      if (c16 >= 0 && c16 <= 8) {
        return false;
      }
      if (c16 === 11) {
        return false;
      }
      if (c16 >= 14 && c16 <= 31) {
        return false;
      }
      if (c16 >= 127 && c16 <= 159) {
        return false;
      }
      if (c16 > 1114111) {
        return false;
      }
      return true;
    }
    function fromCodePoint(c16) {
      if (c16 > 65535) {
        c16 -= 65536;
        var surrogate1 = 55296 + (c16 >> 10), surrogate2 = 56320 + (c16 & 1023);
        return String.fromCharCode(surrogate1, surrogate2);
      }
      return String.fromCharCode(c16);
    }
    var UNESCAPE_MD_RE = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g;
    var ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;
    var UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + "|" + ENTITY_RE.source, "gi");
    var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;
    var entities = require_entities2();
    function replaceEntityPattern(match, name) {
      var code = 0;
      if (has(entities, name)) {
        return entities[name];
      }
      if (name.charCodeAt(0) === 35 && DIGITAL_ENTITY_TEST_RE.test(name)) {
        code = name[1].toLowerCase() === "x" ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);
        if (isValidEntityCode(code)) {
          return fromCodePoint(code);
        }
      }
      return match;
    }
    function unescapeMd(str) {
      if (str.indexOf("\\") < 0) {
        return str;
      }
      return str.replace(UNESCAPE_MD_RE, "$1");
    }
    function unescapeAll(str) {
      if (str.indexOf("\\") < 0 && str.indexOf("&") < 0) {
        return str;
      }
      return str.replace(UNESCAPE_ALL_RE, function(match, escaped, entity) {
        if (escaped) {
          return escaped;
        }
        return replaceEntityPattern(match, entity);
      });
    }
    var HTML_ESCAPE_TEST_RE = /[&<>"]/;
    var HTML_ESCAPE_REPLACE_RE = /[&<>"]/g;
    var HTML_REPLACEMENTS = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;"
    };
    function replaceUnsafeChar(ch) {
      return HTML_REPLACEMENTS[ch];
    }
    function escapeHtml(str) {
      if (HTML_ESCAPE_TEST_RE.test(str)) {
        return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);
      }
      return str;
    }
    var REGEXP_ESCAPE_RE = /[.?*+^$[\]\\(){}|-]/g;
    function escapeRE(str) {
      return str.replace(REGEXP_ESCAPE_RE, "\\$&");
    }
    function isSpace(code) {
      switch (code) {
        case 9:
        case 32:
          return true;
      }
      return false;
    }
    function isWhiteSpace(code) {
      if (code >= 8192 && code <= 8202) {
        return true;
      }
      switch (code) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
        case 160:
        case 5760:
        case 8239:
        case 8287:
        case 12288:
          return true;
      }
      return false;
    }
    var UNICODE_PUNCT_RE = require_regex();
    function isPunctChar(ch) {
      return UNICODE_PUNCT_RE.test(ch);
    }
    function isMdAsciiPunct(ch) {
      switch (ch) {
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
        case 64:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
        case 123:
        case 124:
        case 125:
        case 126:
          return true;
        default:
          return false;
      }
    }
    function normalizeReference(str) {
      str = str.trim().replace(/\s+/g, " ");
      if ("ẞ".toLowerCase() === "Ṿ") {
        str = str.replace(/ẞ/g, "ß");
      }
      return str.toLowerCase().toUpperCase();
    }
    exports.lib = {};
    exports.lib.mdurl = require_mdurl();
    exports.lib.ucmicro = require_uc();
    exports.assign = assign;
    exports.isString = isString3;
    exports.has = has;
    exports.unescapeMd = unescapeMd;
    exports.unescapeAll = unescapeAll;
    exports.isValidEntityCode = isValidEntityCode;
    exports.fromCodePoint = fromCodePoint;
    exports.escapeHtml = escapeHtml;
    exports.arrayReplaceAt = arrayReplaceAt;
    exports.isSpace = isSpace;
    exports.isWhiteSpace = isWhiteSpace;
    exports.isMdAsciiPunct = isMdAsciiPunct;
    exports.isPunctChar = isPunctChar;
    exports.escapeRE = escapeRE;
    exports.normalizeReference = normalizeReference;
  }
});

// node_modules/markdown-it/lib/helpers/parse_link_label.js
var require_parse_link_label = __commonJS({
  "node_modules/markdown-it/lib/helpers/parse_link_label.js"(exports, module) {
    "use strict";
    module.exports = function parseLinkLabel(state, start, disableNested) {
      var level, found, marker, prevPos, labelEnd = -1, max = state.posMax, oldPos = state.pos;
      state.pos = start + 1;
      level = 1;
      while (state.pos < max) {
        marker = state.src.charCodeAt(state.pos);
        if (marker === 93) {
          level--;
          if (level === 0) {
            found = true;
            break;
          }
        }
        prevPos = state.pos;
        state.md.inline.skipToken(state);
        if (marker === 91) {
          if (prevPos === state.pos - 1) {
            level++;
          } else if (disableNested) {
            state.pos = oldPos;
            return -1;
          }
        }
      }
      if (found) {
        labelEnd = state.pos;
      }
      state.pos = oldPos;
      return labelEnd;
    };
  }
});

// node_modules/markdown-it/lib/helpers/parse_link_destination.js
var require_parse_link_destination = __commonJS({
  "node_modules/markdown-it/lib/helpers/parse_link_destination.js"(exports, module) {
    "use strict";
    var unescapeAll = require_utils().unescapeAll;
    module.exports = function parseLinkDestination(str, pos, max) {
      var code, level, lines = 0, start = pos, result = {
        ok: false,
        pos: 0,
        lines: 0,
        str: ""
      };
      if (str.charCodeAt(pos) === 60) {
        pos++;
        while (pos < max) {
          code = str.charCodeAt(pos);
          if (code === 10) {
            return result;
          }
          if (code === 60) {
            return result;
          }
          if (code === 62) {
            result.pos = pos + 1;
            result.str = unescapeAll(str.slice(start + 1, pos));
            result.ok = true;
            return result;
          }
          if (code === 92 && pos + 1 < max) {
            pos += 2;
            continue;
          }
          pos++;
        }
        return result;
      }
      level = 0;
      while (pos < max) {
        code = str.charCodeAt(pos);
        if (code === 32) {
          break;
        }
        if (code < 32 || code === 127) {
          break;
        }
        if (code === 92 && pos + 1 < max) {
          if (str.charCodeAt(pos + 1) === 32) {
            break;
          }
          pos += 2;
          continue;
        }
        if (code === 40) {
          level++;
          if (level > 32) {
            return result;
          }
        }
        if (code === 41) {
          if (level === 0) {
            break;
          }
          level--;
        }
        pos++;
      }
      if (start === pos) {
        return result;
      }
      if (level !== 0) {
        return result;
      }
      result.str = unescapeAll(str.slice(start, pos));
      result.lines = lines;
      result.pos = pos;
      result.ok = true;
      return result;
    };
  }
});

// node_modules/markdown-it/lib/helpers/parse_link_title.js
var require_parse_link_title = __commonJS({
  "node_modules/markdown-it/lib/helpers/parse_link_title.js"(exports, module) {
    "use strict";
    var unescapeAll = require_utils().unescapeAll;
    module.exports = function parseLinkTitle(str, pos, max) {
      var code, marker, lines = 0, start = pos, result = {
        ok: false,
        pos: 0,
        lines: 0,
        str: ""
      };
      if (pos >= max) {
        return result;
      }
      marker = str.charCodeAt(pos);
      if (marker !== 34 && marker !== 39 && marker !== 40) {
        return result;
      }
      pos++;
      if (marker === 40) {
        marker = 41;
      }
      while (pos < max) {
        code = str.charCodeAt(pos);
        if (code === marker) {
          result.pos = pos + 1;
          result.lines = lines;
          result.str = unescapeAll(str.slice(start + 1, pos));
          result.ok = true;
          return result;
        } else if (code === 40 && marker === 41) {
          return result;
        } else if (code === 10) {
          lines++;
        } else if (code === 92 && pos + 1 < max) {
          pos++;
          if (str.charCodeAt(pos) === 10) {
            lines++;
          }
        }
        pos++;
      }
      return result;
    };
  }
});

// node_modules/markdown-it/lib/helpers/index.js
var require_helpers = __commonJS({
  "node_modules/markdown-it/lib/helpers/index.js"(exports) {
    "use strict";
    exports.parseLinkLabel = require_parse_link_label();
    exports.parseLinkDestination = require_parse_link_destination();
    exports.parseLinkTitle = require_parse_link_title();
  }
});

// node_modules/markdown-it/lib/renderer.js
var require_renderer = __commonJS({
  "node_modules/markdown-it/lib/renderer.js"(exports, module) {
    "use strict";
    var assign = require_utils().assign;
    var unescapeAll = require_utils().unescapeAll;
    var escapeHtml = require_utils().escapeHtml;
    var default_rules = {};
    default_rules.code_inline = function(tokens, idx, options, env2, slf) {
      var token = tokens[idx];
      return "<code" + slf.renderAttrs(token) + ">" + escapeHtml(tokens[idx].content) + "</code>";
    };
    default_rules.code_block = function(tokens, idx, options, env2, slf) {
      var token = tokens[idx];
      return "<pre" + slf.renderAttrs(token) + "><code>" + escapeHtml(tokens[idx].content) + "</code></pre>\n";
    };
    default_rules.fence = function(tokens, idx, options, env2, slf) {
      var token = tokens[idx], info = token.info ? unescapeAll(token.info).trim() : "", langName = "", langAttrs = "", highlighted, i10, arr, tmpAttrs, tmpToken;
      if (info) {
        arr = info.split(/(\s+)/g);
        langName = arr[0];
        langAttrs = arr.slice(2).join("");
      }
      if (options.highlight) {
        highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);
      } else {
        highlighted = escapeHtml(token.content);
      }
      if (highlighted.indexOf("<pre") === 0) {
        return highlighted + "\n";
      }
      if (info) {
        i10 = token.attrIndex("class");
        tmpAttrs = token.attrs ? token.attrs.slice() : [];
        if (i10 < 0) {
          tmpAttrs.push(["class", options.langPrefix + langName]);
        } else {
          tmpAttrs[i10] = tmpAttrs[i10].slice();
          tmpAttrs[i10][1] += " " + options.langPrefix + langName;
        }
        tmpToken = {
          attrs: tmpAttrs
        };
        return "<pre><code" + slf.renderAttrs(tmpToken) + ">" + highlighted + "</code></pre>\n";
      }
      return "<pre><code" + slf.renderAttrs(token) + ">" + highlighted + "</code></pre>\n";
    };
    default_rules.image = function(tokens, idx, options, env2, slf) {
      var token = tokens[idx];
      token.attrs[token.attrIndex("alt")][1] = slf.renderInlineAsText(token.children, options, env2);
      return slf.renderToken(tokens, idx, options);
    };
    default_rules.hardbreak = function(tokens, idx, options) {
      return options.xhtmlOut ? "<br />\n" : "<br>\n";
    };
    default_rules.softbreak = function(tokens, idx, options) {
      return options.breaks ? options.xhtmlOut ? "<br />\n" : "<br>\n" : "\n";
    };
    default_rules.text = function(tokens, idx) {
      return escapeHtml(tokens[idx].content);
    };
    default_rules.html_block = function(tokens, idx) {
      return tokens[idx].content;
    };
    default_rules.html_inline = function(tokens, idx) {
      return tokens[idx].content;
    };
    function Renderer() {
      this.rules = assign({}, default_rules);
    }
    Renderer.prototype.renderAttrs = function renderAttrs(token) {
      var i10, l11, result;
      if (!token.attrs) {
        return "";
      }
      result = "";
      for (i10 = 0, l11 = token.attrs.length; i10 < l11; i10++) {
        result += " " + escapeHtml(token.attrs[i10][0]) + '="' + escapeHtml(token.attrs[i10][1]) + '"';
      }
      return result;
    };
    Renderer.prototype.renderToken = function renderToken(tokens, idx, options) {
      var nextToken, result = "", needLf = false, token = tokens[idx];
      if (token.hidden) {
        return "";
      }
      if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {
        result += "\n";
      }
      result += (token.nesting === -1 ? "</" : "<") + token.tag;
      result += this.renderAttrs(token);
      if (token.nesting === 0 && options.xhtmlOut) {
        result += " /";
      }
      if (token.block) {
        needLf = true;
        if (token.nesting === 1) {
          if (idx + 1 < tokens.length) {
            nextToken = tokens[idx + 1];
            if (nextToken.type === "inline" || nextToken.hidden) {
              needLf = false;
            } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {
              needLf = false;
            }
          }
        }
      }
      result += needLf ? ">\n" : ">";
      return result;
    };
    Renderer.prototype.renderInline = function(tokens, options, env2) {
      var type, result = "", rules = this.rules;
      for (var i10 = 0, len = tokens.length; i10 < len; i10++) {
        type = tokens[i10].type;
        if (typeof rules[type] !== "undefined") {
          result += rules[type](tokens, i10, options, env2, this);
        } else {
          result += this.renderToken(tokens, i10, options);
        }
      }
      return result;
    };
    Renderer.prototype.renderInlineAsText = function(tokens, options, env2) {
      var result = "";
      for (var i10 = 0, len = tokens.length; i10 < len; i10++) {
        if (tokens[i10].type === "text") {
          result += tokens[i10].content;
        } else if (tokens[i10].type === "image") {
          result += this.renderInlineAsText(tokens[i10].children, options, env2);
        } else if (tokens[i10].type === "softbreak") {
          result += "\n";
        }
      }
      return result;
    };
    Renderer.prototype.render = function(tokens, options, env2) {
      var i10, len, type, result = "", rules = this.rules;
      for (i10 = 0, len = tokens.length; i10 < len; i10++) {
        type = tokens[i10].type;
        if (type === "inline") {
          result += this.renderInline(tokens[i10].children, options, env2);
        } else if (typeof rules[type] !== "undefined") {
          result += rules[tokens[i10].type](tokens, i10, options, env2, this);
        } else {
          result += this.renderToken(tokens, i10, options, env2);
        }
      }
      return result;
    };
    module.exports = Renderer;
  }
});

// node_modules/markdown-it/lib/ruler.js
var require_ruler = __commonJS({
  "node_modules/markdown-it/lib/ruler.js"(exports, module) {
    "use strict";
    function Ruler() {
      this.__rules__ = [];
      this.__cache__ = null;
    }
    Ruler.prototype.__find__ = function(name) {
      for (var i10 = 0; i10 < this.__rules__.length; i10++) {
        if (this.__rules__[i10].name === name) {
          return i10;
        }
      }
      return -1;
    };
    Ruler.prototype.__compile__ = function() {
      var self = this;
      var chains = [""];
      self.__rules__.forEach(function(rule) {
        if (!rule.enabled) {
          return;
        }
        rule.alt.forEach(function(altName) {
          if (chains.indexOf(altName) < 0) {
            chains.push(altName);
          }
        });
      });
      self.__cache__ = {};
      chains.forEach(function(chain) {
        self.__cache__[chain] = [];
        self.__rules__.forEach(function(rule) {
          if (!rule.enabled) {
            return;
          }
          if (chain && rule.alt.indexOf(chain) < 0) {
            return;
          }
          self.__cache__[chain].push(rule.fn);
        });
      });
    };
    Ruler.prototype.at = function(name, fn, options) {
      var index2 = this.__find__(name);
      var opt = options || {};
      if (index2 === -1) {
        throw new Error("Parser rule not found: " + name);
      }
      this.__rules__[index2].fn = fn;
      this.__rules__[index2].alt = opt.alt || [];
      this.__cache__ = null;
    };
    Ruler.prototype.before = function(beforeName, ruleName, fn, options) {
      var index2 = this.__find__(beforeName);
      var opt = options || {};
      if (index2 === -1) {
        throw new Error("Parser rule not found: " + beforeName);
      }
      this.__rules__.splice(index2, 0, {
        name: ruleName,
        enabled: true,
        fn,
        alt: opt.alt || []
      });
      this.__cache__ = null;
    };
    Ruler.prototype.after = function(afterName, ruleName, fn, options) {
      var index2 = this.__find__(afterName);
      var opt = options || {};
      if (index2 === -1) {
        throw new Error("Parser rule not found: " + afterName);
      }
      this.__rules__.splice(index2 + 1, 0, {
        name: ruleName,
        enabled: true,
        fn,
        alt: opt.alt || []
      });
      this.__cache__ = null;
    };
    Ruler.prototype.push = function(ruleName, fn, options) {
      var opt = options || {};
      this.__rules__.push({
        name: ruleName,
        enabled: true,
        fn,
        alt: opt.alt || []
      });
      this.__cache__ = null;
    };
    Ruler.prototype.enable = function(list, ignoreInvalid) {
      if (!Array.isArray(list)) {
        list = [list];
      }
      var result = [];
      list.forEach(function(name) {
        var idx = this.__find__(name);
        if (idx < 0) {
          if (ignoreInvalid) {
            return;
          }
          throw new Error("Rules manager: invalid rule name " + name);
        }
        this.__rules__[idx].enabled = true;
        result.push(name);
      }, this);
      this.__cache__ = null;
      return result;
    };
    Ruler.prototype.enableOnly = function(list, ignoreInvalid) {
      if (!Array.isArray(list)) {
        list = [list];
      }
      this.__rules__.forEach(function(rule) {
        rule.enabled = false;
      });
      this.enable(list, ignoreInvalid);
    };
    Ruler.prototype.disable = function(list, ignoreInvalid) {
      if (!Array.isArray(list)) {
        list = [list];
      }
      var result = [];
      list.forEach(function(name) {
        var idx = this.__find__(name);
        if (idx < 0) {
          if (ignoreInvalid) {
            return;
          }
          throw new Error("Rules manager: invalid rule name " + name);
        }
        this.__rules__[idx].enabled = false;
        result.push(name);
      }, this);
      this.__cache__ = null;
      return result;
    };
    Ruler.prototype.getRules = function(chainName) {
      if (this.__cache__ === null) {
        this.__compile__();
      }
      return this.__cache__[chainName] || [];
    };
    module.exports = Ruler;
  }
});

// node_modules/markdown-it/lib/rules_core/normalize.js
var require_normalize = __commonJS({
  "node_modules/markdown-it/lib/rules_core/normalize.js"(exports, module) {
    "use strict";
    var NEWLINES_RE = /\r\n?|\n/g;
    var NULL_RE = /\0/g;
    module.exports = function normalize(state) {
      var str;
      str = state.src.replace(NEWLINES_RE, "\n");
      str = str.replace(NULL_RE, "�");
      state.src = str;
    };
  }
});

// node_modules/markdown-it/lib/rules_core/block.js
var require_block = __commonJS({
  "node_modules/markdown-it/lib/rules_core/block.js"(exports, module) {
    "use strict";
    module.exports = function block(state) {
      var token;
      if (state.inlineMode) {
        token = new state.Token("inline", "", 0);
        token.content = state.src;
        token.map = [0, 1];
        token.children = [];
        state.tokens.push(token);
      } else {
        state.md.block.parse(state.src, state.md, state.env, state.tokens);
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_core/inline.js
var require_inline = __commonJS({
  "node_modules/markdown-it/lib/rules_core/inline.js"(exports, module) {
    "use strict";
    module.exports = function inline(state) {
      var tokens = state.tokens, tok, i10, l11;
      for (i10 = 0, l11 = tokens.length; i10 < l11; i10++) {
        tok = tokens[i10];
        if (tok.type === "inline") {
          state.md.inline.parse(tok.content, state.md, state.env, tok.children);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_core/linkify.js
var require_linkify = __commonJS({
  "node_modules/markdown-it/lib/rules_core/linkify.js"(exports, module) {
    "use strict";
    var arrayReplaceAt = require_utils().arrayReplaceAt;
    function isLinkOpen(str) {
      return /^<a[>\s]/i.test(str);
    }
    function isLinkClose(str) {
      return /^<\/a\s*>/i.test(str);
    }
    module.exports = function linkify(state) {
      var i10, j7, l11, tokens, token, currentToken, nodes, ln2, text, pos, lastPos, level, htmlLinkLevel, url, fullUrl, urlText, blockTokens = state.tokens, links;
      if (!state.md.options.linkify) {
        return;
      }
      for (j7 = 0, l11 = blockTokens.length; j7 < l11; j7++) {
        if (blockTokens[j7].type !== "inline" || !state.md.linkify.pretest(blockTokens[j7].content)) {
          continue;
        }
        tokens = blockTokens[j7].children;
        htmlLinkLevel = 0;
        for (i10 = tokens.length - 1; i10 >= 0; i10--) {
          currentToken = tokens[i10];
          if (currentToken.type === "link_close") {
            i10--;
            while (tokens[i10].level !== currentToken.level && tokens[i10].type !== "link_open") {
              i10--;
            }
            continue;
          }
          if (currentToken.type === "html_inline") {
            if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {
              htmlLinkLevel--;
            }
            if (isLinkClose(currentToken.content)) {
              htmlLinkLevel++;
            }
          }
          if (htmlLinkLevel > 0) {
            continue;
          }
          if (currentToken.type === "text" && state.md.linkify.test(currentToken.content)) {
            text = currentToken.content;
            links = state.md.linkify.match(text);
            nodes = [];
            level = currentToken.level;
            lastPos = 0;
            for (ln2 = 0; ln2 < links.length; ln2++) {
              url = links[ln2].url;
              fullUrl = state.md.normalizeLink(url);
              if (!state.md.validateLink(fullUrl)) {
                continue;
              }
              urlText = links[ln2].text;
              if (!links[ln2].schema) {
                urlText = state.md.normalizeLinkText("http://" + urlText).replace(/^http:\/\//, "");
              } else if (links[ln2].schema === "mailto:" && !/^mailto:/i.test(urlText)) {
                urlText = state.md.normalizeLinkText("mailto:" + urlText).replace(/^mailto:/, "");
              } else {
                urlText = state.md.normalizeLinkText(urlText);
              }
              pos = links[ln2].index;
              if (pos > lastPos) {
                token = new state.Token("text", "", 0);
                token.content = text.slice(lastPos, pos);
                token.level = level;
                nodes.push(token);
              }
              token = new state.Token("link_open", "a", 1);
              token.attrs = [["href", fullUrl]];
              token.level = level++;
              token.markup = "linkify";
              token.info = "auto";
              nodes.push(token);
              token = new state.Token("text", "", 0);
              token.content = urlText;
              token.level = level;
              nodes.push(token);
              token = new state.Token("link_close", "a", -1);
              token.level = --level;
              token.markup = "linkify";
              token.info = "auto";
              nodes.push(token);
              lastPos = links[ln2].lastIndex;
            }
            if (lastPos < text.length) {
              token = new state.Token("text", "", 0);
              token.content = text.slice(lastPos);
              token.level = level;
              nodes.push(token);
            }
            blockTokens[j7].children = tokens = arrayReplaceAt(tokens, i10, nodes);
          }
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_core/replacements.js
var require_replacements = __commonJS({
  "node_modules/markdown-it/lib/rules_core/replacements.js"(exports, module) {
    "use strict";
    var RARE_RE = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/;
    var SCOPED_ABBR_TEST_RE = /\((c|tm|r|p)\)/i;
    var SCOPED_ABBR_RE = /\((c|tm|r|p)\)/ig;
    var SCOPED_ABBR = {
      c: "©",
      r: "®",
      p: "§",
      tm: "™"
    };
    function replaceFn(match, name) {
      return SCOPED_ABBR[name.toLowerCase()];
    }
    function replace_scoped(inlineTokens) {
      var i10, token, inside_autolink = 0;
      for (i10 = inlineTokens.length - 1; i10 >= 0; i10--) {
        token = inlineTokens[i10];
        if (token.type === "text" && !inside_autolink) {
          token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);
        }
        if (token.type === "link_open" && token.info === "auto") {
          inside_autolink--;
        }
        if (token.type === "link_close" && token.info === "auto") {
          inside_autolink++;
        }
      }
    }
    function replace_rare(inlineTokens) {
      var i10, token, inside_autolink = 0;
      for (i10 = inlineTokens.length - 1; i10 >= 0; i10--) {
        token = inlineTokens[i10];
        if (token.type === "text" && !inside_autolink) {
          if (RARE_RE.test(token.content)) {
            token.content = token.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–");
          }
        }
        if (token.type === "link_open" && token.info === "auto") {
          inside_autolink--;
        }
        if (token.type === "link_close" && token.info === "auto") {
          inside_autolink++;
        }
      }
    }
    module.exports = function replace(state) {
      var blkIdx;
      if (!state.md.options.typographer) {
        return;
      }
      for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
        if (state.tokens[blkIdx].type !== "inline") {
          continue;
        }
        if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {
          replace_scoped(state.tokens[blkIdx].children);
        }
        if (RARE_RE.test(state.tokens[blkIdx].content)) {
          replace_rare(state.tokens[blkIdx].children);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_core/smartquotes.js
var require_smartquotes = __commonJS({
  "node_modules/markdown-it/lib/rules_core/smartquotes.js"(exports, module) {
    "use strict";
    var isWhiteSpace = require_utils().isWhiteSpace;
    var isPunctChar = require_utils().isPunctChar;
    var isMdAsciiPunct = require_utils().isMdAsciiPunct;
    var QUOTE_TEST_RE = /['"]/;
    var QUOTE_RE = /['"]/g;
    var APOSTROPHE = "’";
    function replaceAt(str, index2, ch) {
      return str.substr(0, index2) + ch + str.substr(index2 + 1);
    }
    function process_inlines(tokens, state) {
      var i10, token, text, t15, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j7, isSingle, stack, openQuote, closeQuote;
      stack = [];
      for (i10 = 0; i10 < tokens.length; i10++) {
        token = tokens[i10];
        thisLevel = tokens[i10].level;
        for (j7 = stack.length - 1; j7 >= 0; j7--) {
          if (stack[j7].level <= thisLevel) {
            break;
          }
        }
        stack.length = j7 + 1;
        if (token.type !== "text") {
          continue;
        }
        text = token.content;
        pos = 0;
        max = text.length;
        OUTER:
          while (pos < max) {
            QUOTE_RE.lastIndex = pos;
            t15 = QUOTE_RE.exec(text);
            if (!t15) {
              break;
            }
            canOpen = canClose = true;
            pos = t15.index + 1;
            isSingle = t15[0] === "'";
            lastChar = 32;
            if (t15.index - 1 >= 0) {
              lastChar = text.charCodeAt(t15.index - 1);
            } else {
              for (j7 = i10 - 1; j7 >= 0; j7--) {
                if (tokens[j7].type === "softbreak" || tokens[j7].type === "hardbreak")
                  break;
                if (!tokens[j7].content)
                  continue;
                lastChar = tokens[j7].content.charCodeAt(tokens[j7].content.length - 1);
                break;
              }
            }
            nextChar = 32;
            if (pos < max) {
              nextChar = text.charCodeAt(pos);
            } else {
              for (j7 = i10 + 1; j7 < tokens.length; j7++) {
                if (tokens[j7].type === "softbreak" || tokens[j7].type === "hardbreak")
                  break;
                if (!tokens[j7].content)
                  continue;
                nextChar = tokens[j7].content.charCodeAt(0);
                break;
              }
            }
            isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));
            isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));
            isLastWhiteSpace = isWhiteSpace(lastChar);
            isNextWhiteSpace = isWhiteSpace(nextChar);
            if (isNextWhiteSpace) {
              canOpen = false;
            } else if (isNextPunctChar) {
              if (!(isLastWhiteSpace || isLastPunctChar)) {
                canOpen = false;
              }
            }
            if (isLastWhiteSpace) {
              canClose = false;
            } else if (isLastPunctChar) {
              if (!(isNextWhiteSpace || isNextPunctChar)) {
                canClose = false;
              }
            }
            if (nextChar === 34 && t15[0] === '"') {
              if (lastChar >= 48 && lastChar <= 57) {
                canClose = canOpen = false;
              }
            }
            if (canOpen && canClose) {
              canOpen = isLastPunctChar;
              canClose = isNextPunctChar;
            }
            if (!canOpen && !canClose) {
              if (isSingle) {
                token.content = replaceAt(token.content, t15.index, APOSTROPHE);
              }
              continue;
            }
            if (canClose) {
              for (j7 = stack.length - 1; j7 >= 0; j7--) {
                item = stack[j7];
                if (stack[j7].level < thisLevel) {
                  break;
                }
                if (item.single === isSingle && stack[j7].level === thisLevel) {
                  item = stack[j7];
                  if (isSingle) {
                    openQuote = state.md.options.quotes[2];
                    closeQuote = state.md.options.quotes[3];
                  } else {
                    openQuote = state.md.options.quotes[0];
                    closeQuote = state.md.options.quotes[1];
                  }
                  token.content = replaceAt(token.content, t15.index, closeQuote);
                  tokens[item.token].content = replaceAt(
                    tokens[item.token].content,
                    item.pos,
                    openQuote
                  );
                  pos += closeQuote.length - 1;
                  if (item.token === i10) {
                    pos += openQuote.length - 1;
                  }
                  text = token.content;
                  max = text.length;
                  stack.length = j7;
                  continue OUTER;
                }
              }
            }
            if (canOpen) {
              stack.push({
                token: i10,
                pos: t15.index,
                single: isSingle,
                level: thisLevel
              });
            } else if (canClose && isSingle) {
              token.content = replaceAt(token.content, t15.index, APOSTROPHE);
            }
          }
      }
    }
    module.exports = function smartquotes(state) {
      var blkIdx;
      if (!state.md.options.typographer) {
        return;
      }
      for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
        if (state.tokens[blkIdx].type !== "inline" || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {
          continue;
        }
        process_inlines(state.tokens[blkIdx].children, state);
      }
    };
  }
});

// node_modules/markdown-it/lib/token.js
var require_token = __commonJS({
  "node_modules/markdown-it/lib/token.js"(exports, module) {
    "use strict";
    function Token(type, tag, nesting) {
      this.type = type;
      this.tag = tag;
      this.attrs = null;
      this.map = null;
      this.nesting = nesting;
      this.level = 0;
      this.children = null;
      this.content = "";
      this.markup = "";
      this.info = "";
      this.meta = null;
      this.block = false;
      this.hidden = false;
    }
    Token.prototype.attrIndex = function attrIndex(name) {
      var attrs, i10, len;
      if (!this.attrs) {
        return -1;
      }
      attrs = this.attrs;
      for (i10 = 0, len = attrs.length; i10 < len; i10++) {
        if (attrs[i10][0] === name) {
          return i10;
        }
      }
      return -1;
    };
    Token.prototype.attrPush = function attrPush(attrData) {
      if (this.attrs) {
        this.attrs.push(attrData);
      } else {
        this.attrs = [attrData];
      }
    };
    Token.prototype.attrSet = function attrSet(name, value) {
      var idx = this.attrIndex(name), attrData = [name, value];
      if (idx < 0) {
        this.attrPush(attrData);
      } else {
        this.attrs[idx] = attrData;
      }
    };
    Token.prototype.attrGet = function attrGet(name) {
      var idx = this.attrIndex(name), value = null;
      if (idx >= 0) {
        value = this.attrs[idx][1];
      }
      return value;
    };
    Token.prototype.attrJoin = function attrJoin(name, value) {
      var idx = this.attrIndex(name);
      if (idx < 0) {
        this.attrPush([name, value]);
      } else {
        this.attrs[idx][1] = this.attrs[idx][1] + " " + value;
      }
    };
    module.exports = Token;
  }
});

// node_modules/markdown-it/lib/rules_core/state_core.js
var require_state_core = __commonJS({
  "node_modules/markdown-it/lib/rules_core/state_core.js"(exports, module) {
    "use strict";
    var Token = require_token();
    function StateCore(src, md, env2) {
      this.src = src;
      this.env = env2;
      this.tokens = [];
      this.inlineMode = false;
      this.md = md;
    }
    StateCore.prototype.Token = Token;
    module.exports = StateCore;
  }
});

// node_modules/markdown-it/lib/parser_core.js
var require_parser_core = __commonJS({
  "node_modules/markdown-it/lib/parser_core.js"(exports, module) {
    "use strict";
    var Ruler = require_ruler();
    var _rules = [
      ["normalize", require_normalize()],
      ["block", require_block()],
      ["inline", require_inline()],
      ["linkify", require_linkify()],
      ["replacements", require_replacements()],
      ["smartquotes", require_smartquotes()]
    ];
    function Core() {
      this.ruler = new Ruler();
      for (var i10 = 0; i10 < _rules.length; i10++) {
        this.ruler.push(_rules[i10][0], _rules[i10][1]);
      }
    }
    Core.prototype.process = function(state) {
      var i10, l11, rules;
      rules = this.ruler.getRules("");
      for (i10 = 0, l11 = rules.length; i10 < l11; i10++) {
        rules[i10](state);
      }
    };
    Core.prototype.State = require_state_core();
    module.exports = Core;
  }
});

// node_modules/markdown-it/lib/rules_block/table.js
var require_table = __commonJS({
  "node_modules/markdown-it/lib/rules_block/table.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    function getLine(state, line) {
      var pos = state.bMarks[line] + state.tShift[line], max = state.eMarks[line];
      return state.src.substr(pos, max - pos);
    }
    function escapedSplit(str) {
      var result = [], pos = 0, max = str.length, ch, isEscaped = false, lastPos = 0, current = "";
      ch = str.charCodeAt(pos);
      while (pos < max) {
        if (ch === 124) {
          if (!isEscaped) {
            result.push(current + str.substring(lastPos, pos));
            current = "";
            lastPos = pos + 1;
          } else {
            current += str.substring(lastPos, pos - 1);
            lastPos = pos;
          }
        }
        isEscaped = ch === 92;
        pos++;
        ch = str.charCodeAt(pos);
      }
      result.push(current + str.substring(lastPos));
      return result;
    }
    module.exports = function table(state, startLine, endLine, silent) {
      var ch, lineText, pos, i10, l11, nextLine, columns, columnCount, token, aligns, t15, tableLines, tbodyLines, oldParentType, terminate, terminatorRules, firstCh, secondCh;
      if (startLine + 2 > endLine) {
        return false;
      }
      nextLine = startLine + 1;
      if (state.sCount[nextLine] < state.blkIndent) {
        return false;
      }
      if (state.sCount[nextLine] - state.blkIndent >= 4) {
        return false;
      }
      pos = state.bMarks[nextLine] + state.tShift[nextLine];
      if (pos >= state.eMarks[nextLine]) {
        return false;
      }
      firstCh = state.src.charCodeAt(pos++);
      if (firstCh !== 124 && firstCh !== 45 && firstCh !== 58) {
        return false;
      }
      if (pos >= state.eMarks[nextLine]) {
        return false;
      }
      secondCh = state.src.charCodeAt(pos++);
      if (secondCh !== 124 && secondCh !== 45 && secondCh !== 58 && !isSpace(secondCh)) {
        return false;
      }
      if (firstCh === 45 && isSpace(secondCh)) {
        return false;
      }
      while (pos < state.eMarks[nextLine]) {
        ch = state.src.charCodeAt(pos);
        if (ch !== 124 && ch !== 45 && ch !== 58 && !isSpace(ch)) {
          return false;
        }
        pos++;
      }
      lineText = getLine(state, startLine + 1);
      columns = lineText.split("|");
      aligns = [];
      for (i10 = 0; i10 < columns.length; i10++) {
        t15 = columns[i10].trim();
        if (!t15) {
          if (i10 === 0 || i10 === columns.length - 1) {
            continue;
          } else {
            return false;
          }
        }
        if (!/^:?-+:?$/.test(t15)) {
          return false;
        }
        if (t15.charCodeAt(t15.length - 1) === 58) {
          aligns.push(t15.charCodeAt(0) === 58 ? "center" : "right");
        } else if (t15.charCodeAt(0) === 58) {
          aligns.push("left");
        } else {
          aligns.push("");
        }
      }
      lineText = getLine(state, startLine).trim();
      if (lineText.indexOf("|") === -1) {
        return false;
      }
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      columns = escapedSplit(lineText);
      if (columns.length && columns[0] === "")
        columns.shift();
      if (columns.length && columns[columns.length - 1] === "")
        columns.pop();
      columnCount = columns.length;
      if (columnCount === 0 || columnCount !== aligns.length) {
        return false;
      }
      if (silent) {
        return true;
      }
      oldParentType = state.parentType;
      state.parentType = "table";
      terminatorRules = state.md.block.ruler.getRules("blockquote");
      token = state.push("table_open", "table", 1);
      token.map = tableLines = [startLine, 0];
      token = state.push("thead_open", "thead", 1);
      token.map = [startLine, startLine + 1];
      token = state.push("tr_open", "tr", 1);
      token.map = [startLine, startLine + 1];
      for (i10 = 0; i10 < columns.length; i10++) {
        token = state.push("th_open", "th", 1);
        if (aligns[i10]) {
          token.attrs = [["style", "text-align:" + aligns[i10]]];
        }
        token = state.push("inline", "", 0);
        token.content = columns[i10].trim();
        token.children = [];
        token = state.push("th_close", "th", -1);
      }
      token = state.push("tr_close", "tr", -1);
      token = state.push("thead_close", "thead", -1);
      for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {
        if (state.sCount[nextLine] < state.blkIndent) {
          break;
        }
        terminate = false;
        for (i10 = 0, l11 = terminatorRules.length; i10 < l11; i10++) {
          if (terminatorRules[i10](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
        lineText = getLine(state, nextLine).trim();
        if (!lineText) {
          break;
        }
        if (state.sCount[nextLine] - state.blkIndent >= 4) {
          break;
        }
        columns = escapedSplit(lineText);
        if (columns.length && columns[0] === "")
          columns.shift();
        if (columns.length && columns[columns.length - 1] === "")
          columns.pop();
        if (nextLine === startLine + 2) {
          token = state.push("tbody_open", "tbody", 1);
          token.map = tbodyLines = [startLine + 2, 0];
        }
        token = state.push("tr_open", "tr", 1);
        token.map = [nextLine, nextLine + 1];
        for (i10 = 0; i10 < columnCount; i10++) {
          token = state.push("td_open", "td", 1);
          if (aligns[i10]) {
            token.attrs = [["style", "text-align:" + aligns[i10]]];
          }
          token = state.push("inline", "", 0);
          token.content = columns[i10] ? columns[i10].trim() : "";
          token.children = [];
          token = state.push("td_close", "td", -1);
        }
        token = state.push("tr_close", "tr", -1);
      }
      if (tbodyLines) {
        token = state.push("tbody_close", "tbody", -1);
        tbodyLines[1] = nextLine;
      }
      token = state.push("table_close", "table", -1);
      tableLines[1] = nextLine;
      state.parentType = oldParentType;
      state.line = nextLine;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/code.js
var require_code = __commonJS({
  "node_modules/markdown-it/lib/rules_block/code.js"(exports, module) {
    "use strict";
    module.exports = function code(state, startLine, endLine) {
      var nextLine, last, token;
      if (state.sCount[startLine] - state.blkIndent < 4) {
        return false;
      }
      last = nextLine = startLine + 1;
      while (nextLine < endLine) {
        if (state.isEmpty(nextLine)) {
          nextLine++;
          continue;
        }
        if (state.sCount[nextLine] - state.blkIndent >= 4) {
          nextLine++;
          last = nextLine;
          continue;
        }
        break;
      }
      state.line = last;
      token = state.push("code_block", "code", 0);
      token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + "\n";
      token.map = [startLine, state.line];
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/fence.js
var require_fence = __commonJS({
  "node_modules/markdown-it/lib/rules_block/fence.js"(exports, module) {
    "use strict";
    module.exports = function fence(state, startLine, endLine, silent) {
      var marker, len, params, nextLine, mem, token, markup, haveEndMarker = false, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (pos + 3 > max) {
        return false;
      }
      marker = state.src.charCodeAt(pos);
      if (marker !== 126 && marker !== 96) {
        return false;
      }
      mem = pos;
      pos = state.skipChars(pos, marker);
      len = pos - mem;
      if (len < 3) {
        return false;
      }
      markup = state.src.slice(mem, pos);
      params = state.src.slice(pos, max);
      if (marker === 96) {
        if (params.indexOf(String.fromCharCode(marker)) >= 0) {
          return false;
        }
      }
      if (silent) {
        return true;
      }
      nextLine = startLine;
      for (; ; ) {
        nextLine++;
        if (nextLine >= endLine) {
          break;
        }
        pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];
        max = state.eMarks[nextLine];
        if (pos < max && state.sCount[nextLine] < state.blkIndent) {
          break;
        }
        if (state.src.charCodeAt(pos) !== marker) {
          continue;
        }
        if (state.sCount[nextLine] - state.blkIndent >= 4) {
          continue;
        }
        pos = state.skipChars(pos, marker);
        if (pos - mem < len) {
          continue;
        }
        pos = state.skipSpaces(pos);
        if (pos < max) {
          continue;
        }
        haveEndMarker = true;
        break;
      }
      len = state.sCount[startLine];
      state.line = nextLine + (haveEndMarker ? 1 : 0);
      token = state.push("fence", "code", 0);
      token.info = params;
      token.content = state.getLines(startLine + 1, nextLine, len, true);
      token.markup = markup;
      token.map = [startLine, state.line];
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/blockquote.js
var require_blockquote = __commonJS({
  "node_modules/markdown-it/lib/rules_block/blockquote.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    module.exports = function blockquote(state, startLine, endLine, silent) {
      var adjustTab, ch, i10, initial, l11, lastLineEmpty, lines, nextLine, offset, oldBMarks, oldBSCount, oldIndent, oldParentType, oldSCount, oldTShift, spaceAfterMarker, terminate, terminatorRules, token, isOutdented, oldLineMax = state.lineMax, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (state.src.charCodeAt(pos++) !== 62) {
        return false;
      }
      if (silent) {
        return true;
      }
      initial = offset = state.sCount[startLine] + 1;
      if (state.src.charCodeAt(pos) === 32) {
        pos++;
        initial++;
        offset++;
        adjustTab = false;
        spaceAfterMarker = true;
      } else if (state.src.charCodeAt(pos) === 9) {
        spaceAfterMarker = true;
        if ((state.bsCount[startLine] + offset) % 4 === 3) {
          pos++;
          initial++;
          offset++;
          adjustTab = false;
        } else {
          adjustTab = true;
        }
      } else {
        spaceAfterMarker = false;
      }
      oldBMarks = [state.bMarks[startLine]];
      state.bMarks[startLine] = pos;
      while (pos < max) {
        ch = state.src.charCodeAt(pos);
        if (isSpace(ch)) {
          if (ch === 9) {
            offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;
          } else {
            offset++;
          }
        } else {
          break;
        }
        pos++;
      }
      oldBSCount = [state.bsCount[startLine]];
      state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);
      lastLineEmpty = pos >= max;
      oldSCount = [state.sCount[startLine]];
      state.sCount[startLine] = offset - initial;
      oldTShift = [state.tShift[startLine]];
      state.tShift[startLine] = pos - state.bMarks[startLine];
      terminatorRules = state.md.block.ruler.getRules("blockquote");
      oldParentType = state.parentType;
      state.parentType = "blockquote";
      for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {
        isOutdented = state.sCount[nextLine] < state.blkIndent;
        pos = state.bMarks[nextLine] + state.tShift[nextLine];
        max = state.eMarks[nextLine];
        if (pos >= max) {
          break;
        }
        if (state.src.charCodeAt(pos++) === 62 && !isOutdented) {
          initial = offset = state.sCount[nextLine] + 1;
          if (state.src.charCodeAt(pos) === 32) {
            pos++;
            initial++;
            offset++;
            adjustTab = false;
            spaceAfterMarker = true;
          } else if (state.src.charCodeAt(pos) === 9) {
            spaceAfterMarker = true;
            if ((state.bsCount[nextLine] + offset) % 4 === 3) {
              pos++;
              initial++;
              offset++;
              adjustTab = false;
            } else {
              adjustTab = true;
            }
          } else {
            spaceAfterMarker = false;
          }
          oldBMarks.push(state.bMarks[nextLine]);
          state.bMarks[nextLine] = pos;
          while (pos < max) {
            ch = state.src.charCodeAt(pos);
            if (isSpace(ch)) {
              if (ch === 9) {
                offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;
              } else {
                offset++;
              }
            } else {
              break;
            }
            pos++;
          }
          lastLineEmpty = pos >= max;
          oldBSCount.push(state.bsCount[nextLine]);
          state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);
          oldSCount.push(state.sCount[nextLine]);
          state.sCount[nextLine] = offset - initial;
          oldTShift.push(state.tShift[nextLine]);
          state.tShift[nextLine] = pos - state.bMarks[nextLine];
          continue;
        }
        if (lastLineEmpty) {
          break;
        }
        terminate = false;
        for (i10 = 0, l11 = terminatorRules.length; i10 < l11; i10++) {
          if (terminatorRules[i10](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          state.lineMax = nextLine;
          if (state.blkIndent !== 0) {
            oldBMarks.push(state.bMarks[nextLine]);
            oldBSCount.push(state.bsCount[nextLine]);
            oldTShift.push(state.tShift[nextLine]);
            oldSCount.push(state.sCount[nextLine]);
            state.sCount[nextLine] -= state.blkIndent;
          }
          break;
        }
        oldBMarks.push(state.bMarks[nextLine]);
        oldBSCount.push(state.bsCount[nextLine]);
        oldTShift.push(state.tShift[nextLine]);
        oldSCount.push(state.sCount[nextLine]);
        state.sCount[nextLine] = -1;
      }
      oldIndent = state.blkIndent;
      state.blkIndent = 0;
      token = state.push("blockquote_open", "blockquote", 1);
      token.markup = ">";
      token.map = lines = [startLine, 0];
      state.md.block.tokenize(state, startLine, nextLine);
      token = state.push("blockquote_close", "blockquote", -1);
      token.markup = ">";
      state.lineMax = oldLineMax;
      state.parentType = oldParentType;
      lines[1] = state.line;
      for (i10 = 0; i10 < oldTShift.length; i10++) {
        state.bMarks[i10 + startLine] = oldBMarks[i10];
        state.tShift[i10 + startLine] = oldTShift[i10];
        state.sCount[i10 + startLine] = oldSCount[i10];
        state.bsCount[i10 + startLine] = oldBSCount[i10];
      }
      state.blkIndent = oldIndent;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/hr.js
var require_hr = __commonJS({
  "node_modules/markdown-it/lib/rules_block/hr.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    module.exports = function hr2(state, startLine, endLine, silent) {
      var marker, cnt, ch, token, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      marker = state.src.charCodeAt(pos++);
      if (marker !== 42 && marker !== 45 && marker !== 95) {
        return false;
      }
      cnt = 1;
      while (pos < max) {
        ch = state.src.charCodeAt(pos++);
        if (ch !== marker && !isSpace(ch)) {
          return false;
        }
        if (ch === marker) {
          cnt++;
        }
      }
      if (cnt < 3) {
        return false;
      }
      if (silent) {
        return true;
      }
      state.line = startLine + 1;
      token = state.push("hr", "hr", 0);
      token.map = [startLine, state.line];
      token.markup = Array(cnt + 1).join(String.fromCharCode(marker));
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/list.js
var require_list = __commonJS({
  "node_modules/markdown-it/lib/rules_block/list.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    function skipBulletListMarker(state, startLine) {
      var marker, pos, max, ch;
      pos = state.bMarks[startLine] + state.tShift[startLine];
      max = state.eMarks[startLine];
      marker = state.src.charCodeAt(pos++);
      if (marker !== 42 && marker !== 45 && marker !== 43) {
        return -1;
      }
      if (pos < max) {
        ch = state.src.charCodeAt(pos);
        if (!isSpace(ch)) {
          return -1;
        }
      }
      return pos;
    }
    function skipOrderedListMarker(state, startLine) {
      var ch, start = state.bMarks[startLine] + state.tShift[startLine], pos = start, max = state.eMarks[startLine];
      if (pos + 1 >= max) {
        return -1;
      }
      ch = state.src.charCodeAt(pos++);
      if (ch < 48 || ch > 57) {
        return -1;
      }
      for (; ; ) {
        if (pos >= max) {
          return -1;
        }
        ch = state.src.charCodeAt(pos++);
        if (ch >= 48 && ch <= 57) {
          if (pos - start >= 10) {
            return -1;
          }
          continue;
        }
        if (ch === 41 || ch === 46) {
          break;
        }
        return -1;
      }
      if (pos < max) {
        ch = state.src.charCodeAt(pos);
        if (!isSpace(ch)) {
          return -1;
        }
      }
      return pos;
    }
    function markTightParagraphs(state, idx) {
      var i10, l11, level = state.level + 2;
      for (i10 = idx + 2, l11 = state.tokens.length - 2; i10 < l11; i10++) {
        if (state.tokens[i10].level === level && state.tokens[i10].type === "paragraph_open") {
          state.tokens[i10 + 2].hidden = true;
          state.tokens[i10].hidden = true;
          i10 += 2;
        }
      }
    }
    module.exports = function list(state, startLine, endLine, silent) {
      var ch, contentStart, i10, indent, indentAfterMarker, initial, isOrdered, itemLines, l11, listLines, listTokIdx, markerCharCode, markerValue, max, nextLine, offset, oldListIndent, oldParentType, oldSCount, oldTShift, oldTight, pos, posAfterMarker, prevEmptyEnd, start, terminate, terminatorRules, token, isTerminatingParagraph = false, tight = true;
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (state.listIndent >= 0 && state.sCount[startLine] - state.listIndent >= 4 && state.sCount[startLine] < state.blkIndent) {
        return false;
      }
      if (silent && state.parentType === "paragraph") {
        if (state.sCount[startLine] >= state.blkIndent) {
          isTerminatingParagraph = true;
        }
      }
      if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {
        isOrdered = true;
        start = state.bMarks[startLine] + state.tShift[startLine];
        markerValue = Number(state.src.slice(start, posAfterMarker - 1));
        if (isTerminatingParagraph && markerValue !== 1)
          return false;
      } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {
        isOrdered = false;
      } else {
        return false;
      }
      if (isTerminatingParagraph) {
        if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine])
          return false;
      }
      markerCharCode = state.src.charCodeAt(posAfterMarker - 1);
      if (silent) {
        return true;
      }
      listTokIdx = state.tokens.length;
      if (isOrdered) {
        token = state.push("ordered_list_open", "ol", 1);
        if (markerValue !== 1) {
          token.attrs = [["start", markerValue]];
        }
      } else {
        token = state.push("bullet_list_open", "ul", 1);
      }
      token.map = listLines = [startLine, 0];
      token.markup = String.fromCharCode(markerCharCode);
      nextLine = startLine;
      prevEmptyEnd = false;
      terminatorRules = state.md.block.ruler.getRules("list");
      oldParentType = state.parentType;
      state.parentType = "list";
      while (nextLine < endLine) {
        pos = posAfterMarker;
        max = state.eMarks[nextLine];
        initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);
        while (pos < max) {
          ch = state.src.charCodeAt(pos);
          if (ch === 9) {
            offset += 4 - (offset + state.bsCount[nextLine]) % 4;
          } else if (ch === 32) {
            offset++;
          } else {
            break;
          }
          pos++;
        }
        contentStart = pos;
        if (contentStart >= max) {
          indentAfterMarker = 1;
        } else {
          indentAfterMarker = offset - initial;
        }
        if (indentAfterMarker > 4) {
          indentAfterMarker = 1;
        }
        indent = initial + indentAfterMarker;
        token = state.push("list_item_open", "li", 1);
        token.markup = String.fromCharCode(markerCharCode);
        token.map = itemLines = [startLine, 0];
        if (isOrdered) {
          token.info = state.src.slice(start, posAfterMarker - 1);
        }
        oldTight = state.tight;
        oldTShift = state.tShift[startLine];
        oldSCount = state.sCount[startLine];
        oldListIndent = state.listIndent;
        state.listIndent = state.blkIndent;
        state.blkIndent = indent;
        state.tight = true;
        state.tShift[startLine] = contentStart - state.bMarks[startLine];
        state.sCount[startLine] = offset;
        if (contentStart >= max && state.isEmpty(startLine + 1)) {
          state.line = Math.min(state.line + 2, endLine);
        } else {
          state.md.block.tokenize(state, startLine, endLine, true);
        }
        if (!state.tight || prevEmptyEnd) {
          tight = false;
        }
        prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);
        state.blkIndent = state.listIndent;
        state.listIndent = oldListIndent;
        state.tShift[startLine] = oldTShift;
        state.sCount[startLine] = oldSCount;
        state.tight = oldTight;
        token = state.push("list_item_close", "li", -1);
        token.markup = String.fromCharCode(markerCharCode);
        nextLine = startLine = state.line;
        itemLines[1] = nextLine;
        contentStart = state.bMarks[startLine];
        if (nextLine >= endLine) {
          break;
        }
        if (state.sCount[nextLine] < state.blkIndent) {
          break;
        }
        if (state.sCount[startLine] - state.blkIndent >= 4) {
          break;
        }
        terminate = false;
        for (i10 = 0, l11 = terminatorRules.length; i10 < l11; i10++) {
          if (terminatorRules[i10](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
        if (isOrdered) {
          posAfterMarker = skipOrderedListMarker(state, nextLine);
          if (posAfterMarker < 0) {
            break;
          }
          start = state.bMarks[nextLine] + state.tShift[nextLine];
        } else {
          posAfterMarker = skipBulletListMarker(state, nextLine);
          if (posAfterMarker < 0) {
            break;
          }
        }
        if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {
          break;
        }
      }
      if (isOrdered) {
        token = state.push("ordered_list_close", "ol", -1);
      } else {
        token = state.push("bullet_list_close", "ul", -1);
      }
      token.markup = String.fromCharCode(markerCharCode);
      listLines[1] = nextLine;
      state.line = nextLine;
      state.parentType = oldParentType;
      if (tight) {
        markTightParagraphs(state, listTokIdx);
      }
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/reference.js
var require_reference = __commonJS({
  "node_modules/markdown-it/lib/rules_block/reference.js"(exports, module) {
    "use strict";
    var normalizeReference = require_utils().normalizeReference;
    var isSpace = require_utils().isSpace;
    module.exports = function reference(state, startLine, _endLine, silent) {
      var ch, destEndPos, destEndLineNo, endLine, href, i10, l11, label, labelEnd, oldParentType, res, start, str, terminate, terminatorRules, title, lines = 0, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine], nextLine = startLine + 1;
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (state.src.charCodeAt(pos) !== 91) {
        return false;
      }
      while (++pos < max) {
        if (state.src.charCodeAt(pos) === 93 && state.src.charCodeAt(pos - 1) !== 92) {
          if (pos + 1 === max) {
            return false;
          }
          if (state.src.charCodeAt(pos + 1) !== 58) {
            return false;
          }
          break;
        }
      }
      endLine = state.lineMax;
      terminatorRules = state.md.block.ruler.getRules("reference");
      oldParentType = state.parentType;
      state.parentType = "reference";
      for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
        if (state.sCount[nextLine] - state.blkIndent > 3) {
          continue;
        }
        if (state.sCount[nextLine] < 0) {
          continue;
        }
        terminate = false;
        for (i10 = 0, l11 = terminatorRules.length; i10 < l11; i10++) {
          if (terminatorRules[i10](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
      }
      str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
      max = str.length;
      for (pos = 1; pos < max; pos++) {
        ch = str.charCodeAt(pos);
        if (ch === 91) {
          return false;
        } else if (ch === 93) {
          labelEnd = pos;
          break;
        } else if (ch === 10) {
          lines++;
        } else if (ch === 92) {
          pos++;
          if (pos < max && str.charCodeAt(pos) === 10) {
            lines++;
          }
        }
      }
      if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 58) {
        return false;
      }
      for (pos = labelEnd + 2; pos < max; pos++) {
        ch = str.charCodeAt(pos);
        if (ch === 10) {
          lines++;
        } else if (isSpace(ch)) {
        } else {
          break;
        }
      }
      res = state.md.helpers.parseLinkDestination(str, pos, max);
      if (!res.ok) {
        return false;
      }
      href = state.md.normalizeLink(res.str);
      if (!state.md.validateLink(href)) {
        return false;
      }
      pos = res.pos;
      lines += res.lines;
      destEndPos = pos;
      destEndLineNo = lines;
      start = pos;
      for (; pos < max; pos++) {
        ch = str.charCodeAt(pos);
        if (ch === 10) {
          lines++;
        } else if (isSpace(ch)) {
        } else {
          break;
        }
      }
      res = state.md.helpers.parseLinkTitle(str, pos, max);
      if (pos < max && start !== pos && res.ok) {
        title = res.str;
        pos = res.pos;
        lines += res.lines;
      } else {
        title = "";
        pos = destEndPos;
        lines = destEndLineNo;
      }
      while (pos < max) {
        ch = str.charCodeAt(pos);
        if (!isSpace(ch)) {
          break;
        }
        pos++;
      }
      if (pos < max && str.charCodeAt(pos) !== 10) {
        if (title) {
          title = "";
          pos = destEndPos;
          lines = destEndLineNo;
          while (pos < max) {
            ch = str.charCodeAt(pos);
            if (!isSpace(ch)) {
              break;
            }
            pos++;
          }
        }
      }
      if (pos < max && str.charCodeAt(pos) !== 10) {
        return false;
      }
      label = normalizeReference(str.slice(1, labelEnd));
      if (!label) {
        return false;
      }
      if (silent) {
        return true;
      }
      if (typeof state.env.references === "undefined") {
        state.env.references = {};
      }
      if (typeof state.env.references[label] === "undefined") {
        state.env.references[label] = { title, href };
      }
      state.parentType = oldParentType;
      state.line = startLine + lines + 1;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/common/html_blocks.js
var require_html_blocks = __commonJS({
  "node_modules/markdown-it/lib/common/html_blocks.js"(exports, module) {
    "use strict";
    module.exports = [
      "address",
      "article",
      "aside",
      "base",
      "basefont",
      "blockquote",
      "body",
      "caption",
      "center",
      "col",
      "colgroup",
      "dd",
      "details",
      "dialog",
      "dir",
      "div",
      "dl",
      "dt",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "frame",
      "frameset",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "head",
      "header",
      "hr",
      "html",
      "iframe",
      "legend",
      "li",
      "link",
      "main",
      "menu",
      "menuitem",
      "nav",
      "noframes",
      "ol",
      "optgroup",
      "option",
      "p",
      "param",
      "section",
      "source",
      "summary",
      "table",
      "tbody",
      "td",
      "tfoot",
      "th",
      "thead",
      "title",
      "tr",
      "track",
      "ul"
    ];
  }
});

// node_modules/markdown-it/lib/common/html_re.js
var require_html_re = __commonJS({
  "node_modules/markdown-it/lib/common/html_re.js"(exports, module) {
    "use strict";
    var attr_name = "[a-zA-Z_:][a-zA-Z0-9:._-]*";
    var unquoted = "[^\"'=<>`\\x00-\\x20]+";
    var single_quoted = "'[^']*'";
    var double_quoted = '"[^"]*"';
    var attr_value = "(?:" + unquoted + "|" + single_quoted + "|" + double_quoted + ")";
    var attribute = "(?:\\s+" + attr_name + "(?:\\s*=\\s*" + attr_value + ")?)";
    var open_tag = "<[A-Za-z][A-Za-z0-9\\-]*" + attribute + "*\\s*\\/?>";
    var close_tag = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>";
    var comment = "<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->";
    var processing = "<[?][\\s\\S]*?[?]>";
    var declaration = "<![A-Z]+\\s+[^>]*>";
    var cdata = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>";
    var HTML_TAG_RE = new RegExp("^(?:" + open_tag + "|" + close_tag + "|" + comment + "|" + processing + "|" + declaration + "|" + cdata + ")");
    var HTML_OPEN_CLOSE_TAG_RE = new RegExp("^(?:" + open_tag + "|" + close_tag + ")");
    module.exports.HTML_TAG_RE = HTML_TAG_RE;
    module.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;
  }
});

// node_modules/markdown-it/lib/rules_block/html_block.js
var require_html_block = __commonJS({
  "node_modules/markdown-it/lib/rules_block/html_block.js"(exports, module) {
    "use strict";
    var block_names = require_html_blocks();
    var HTML_OPEN_CLOSE_TAG_RE = require_html_re().HTML_OPEN_CLOSE_TAG_RE;
    var HTML_SEQUENCES = [
      [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, true],
      [/^<!--/, /-->/, true],
      [/^<\?/, /\?>/, true],
      [/^<![A-Z]/, />/, true],
      [/^<!\[CDATA\[/, /\]\]>/, true],
      [new RegExp("^</?(" + block_names.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, true],
      [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + "\\s*$"), /^$/, false]
    ];
    module.exports = function html_block(state, startLine, endLine, silent) {
      var i10, nextLine, token, lineText, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (!state.md.options.html) {
        return false;
      }
      if (state.src.charCodeAt(pos) !== 60) {
        return false;
      }
      lineText = state.src.slice(pos, max);
      for (i10 = 0; i10 < HTML_SEQUENCES.length; i10++) {
        if (HTML_SEQUENCES[i10][0].test(lineText)) {
          break;
        }
      }
      if (i10 === HTML_SEQUENCES.length) {
        return false;
      }
      if (silent) {
        return HTML_SEQUENCES[i10][2];
      }
      nextLine = startLine + 1;
      if (!HTML_SEQUENCES[i10][1].test(lineText)) {
        for (; nextLine < endLine; nextLine++) {
          if (state.sCount[nextLine] < state.blkIndent) {
            break;
          }
          pos = state.bMarks[nextLine] + state.tShift[nextLine];
          max = state.eMarks[nextLine];
          lineText = state.src.slice(pos, max);
          if (HTML_SEQUENCES[i10][1].test(lineText)) {
            if (lineText.length !== 0) {
              nextLine++;
            }
            break;
          }
        }
      }
      state.line = nextLine;
      token = state.push("html_block", "", 0);
      token.map = [startLine, nextLine];
      token.content = state.getLines(startLine, nextLine, state.blkIndent, true);
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/heading.js
var require_heading = __commonJS({
  "node_modules/markdown-it/lib/rules_block/heading.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    module.exports = function heading(state, startLine, endLine, silent) {
      var ch, level, tmp, token, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      ch = state.src.charCodeAt(pos);
      if (ch !== 35 || pos >= max) {
        return false;
      }
      level = 1;
      ch = state.src.charCodeAt(++pos);
      while (ch === 35 && pos < max && level <= 6) {
        level++;
        ch = state.src.charCodeAt(++pos);
      }
      if (level > 6 || pos < max && !isSpace(ch)) {
        return false;
      }
      if (silent) {
        return true;
      }
      max = state.skipSpacesBack(max, pos);
      tmp = state.skipCharsBack(max, 35, pos);
      if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {
        max = tmp;
      }
      state.line = startLine + 1;
      token = state.push("heading_open", "h" + String(level), 1);
      token.markup = "########".slice(0, level);
      token.map = [startLine, state.line];
      token = state.push("inline", "", 0);
      token.content = state.src.slice(pos, max).trim();
      token.map = [startLine, state.line];
      token.children = [];
      token = state.push("heading_close", "h" + String(level), -1);
      token.markup = "########".slice(0, level);
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/lheading.js
var require_lheading = __commonJS({
  "node_modules/markdown-it/lib/rules_block/lheading.js"(exports, module) {
    "use strict";
    module.exports = function lheading(state, startLine, endLine) {
      var content, terminate, i10, l11, token, pos, max, level, marker, nextLine = startLine + 1, oldParentType, terminatorRules = state.md.block.ruler.getRules("paragraph");
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      oldParentType = state.parentType;
      state.parentType = "paragraph";
      for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
        if (state.sCount[nextLine] - state.blkIndent > 3) {
          continue;
        }
        if (state.sCount[nextLine] >= state.blkIndent) {
          pos = state.bMarks[nextLine] + state.tShift[nextLine];
          max = state.eMarks[nextLine];
          if (pos < max) {
            marker = state.src.charCodeAt(pos);
            if (marker === 45 || marker === 61) {
              pos = state.skipChars(pos, marker);
              pos = state.skipSpaces(pos);
              if (pos >= max) {
                level = marker === 61 ? 1 : 2;
                break;
              }
            }
          }
        }
        if (state.sCount[nextLine] < 0) {
          continue;
        }
        terminate = false;
        for (i10 = 0, l11 = terminatorRules.length; i10 < l11; i10++) {
          if (terminatorRules[i10](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
      }
      if (!level) {
        return false;
      }
      content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
      state.line = nextLine + 1;
      token = state.push("heading_open", "h" + String(level), 1);
      token.markup = String.fromCharCode(marker);
      token.map = [startLine, state.line];
      token = state.push("inline", "", 0);
      token.content = content;
      token.map = [startLine, state.line - 1];
      token.children = [];
      token = state.push("heading_close", "h" + String(level), -1);
      token.markup = String.fromCharCode(marker);
      state.parentType = oldParentType;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/paragraph.js
var require_paragraph = __commonJS({
  "node_modules/markdown-it/lib/rules_block/paragraph.js"(exports, module) {
    "use strict";
    module.exports = function paragraph(state, startLine) {
      var content, terminate, i10, l11, token, oldParentType, nextLine = startLine + 1, terminatorRules = state.md.block.ruler.getRules("paragraph"), endLine = state.lineMax;
      oldParentType = state.parentType;
      state.parentType = "paragraph";
      for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
        if (state.sCount[nextLine] - state.blkIndent > 3) {
          continue;
        }
        if (state.sCount[nextLine] < 0) {
          continue;
        }
        terminate = false;
        for (i10 = 0, l11 = terminatorRules.length; i10 < l11; i10++) {
          if (terminatorRules[i10](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
      }
      content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
      state.line = nextLine;
      token = state.push("paragraph_open", "p", 1);
      token.map = [startLine, state.line];
      token = state.push("inline", "", 0);
      token.content = content;
      token.map = [startLine, state.line];
      token.children = [];
      token = state.push("paragraph_close", "p", -1);
      state.parentType = oldParentType;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/state_block.js
var require_state_block = __commonJS({
  "node_modules/markdown-it/lib/rules_block/state_block.js"(exports, module) {
    "use strict";
    var Token = require_token();
    var isSpace = require_utils().isSpace;
    function StateBlock(src, md, env2, tokens) {
      var ch, s18, start, pos, len, indent, offset, indent_found;
      this.src = src;
      this.md = md;
      this.env = env2;
      this.tokens = tokens;
      this.bMarks = [];
      this.eMarks = [];
      this.tShift = [];
      this.sCount = [];
      this.bsCount = [];
      this.blkIndent = 0;
      this.line = 0;
      this.lineMax = 0;
      this.tight = false;
      this.ddIndent = -1;
      this.listIndent = -1;
      this.parentType = "root";
      this.level = 0;
      this.result = "";
      s18 = this.src;
      indent_found = false;
      for (start = pos = indent = offset = 0, len = s18.length; pos < len; pos++) {
        ch = s18.charCodeAt(pos);
        if (!indent_found) {
          if (isSpace(ch)) {
            indent++;
            if (ch === 9) {
              offset += 4 - offset % 4;
            } else {
              offset++;
            }
            continue;
          } else {
            indent_found = true;
          }
        }
        if (ch === 10 || pos === len - 1) {
          if (ch !== 10) {
            pos++;
          }
          this.bMarks.push(start);
          this.eMarks.push(pos);
          this.tShift.push(indent);
          this.sCount.push(offset);
          this.bsCount.push(0);
          indent_found = false;
          indent = 0;
          offset = 0;
          start = pos + 1;
        }
      }
      this.bMarks.push(s18.length);
      this.eMarks.push(s18.length);
      this.tShift.push(0);
      this.sCount.push(0);
      this.bsCount.push(0);
      this.lineMax = this.bMarks.length - 1;
    }
    StateBlock.prototype.push = function(type, tag, nesting) {
      var token = new Token(type, tag, nesting);
      token.block = true;
      if (nesting < 0)
        this.level--;
      token.level = this.level;
      if (nesting > 0)
        this.level++;
      this.tokens.push(token);
      return token;
    };
    StateBlock.prototype.isEmpty = function isEmpty(line) {
      return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];
    };
    StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {
      for (var max = this.lineMax; from < max; from++) {
        if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {
          break;
        }
      }
      return from;
    };
    StateBlock.prototype.skipSpaces = function skipSpaces(pos) {
      var ch;
      for (var max = this.src.length; pos < max; pos++) {
        ch = this.src.charCodeAt(pos);
        if (!isSpace(ch)) {
          break;
        }
      }
      return pos;
    };
    StateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {
      if (pos <= min) {
        return pos;
      }
      while (pos > min) {
        if (!isSpace(this.src.charCodeAt(--pos))) {
          return pos + 1;
        }
      }
      return pos;
    };
    StateBlock.prototype.skipChars = function skipChars(pos, code) {
      for (var max = this.src.length; pos < max; pos++) {
        if (this.src.charCodeAt(pos) !== code) {
          break;
        }
      }
      return pos;
    };
    StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {
      if (pos <= min) {
        return pos;
      }
      while (pos > min) {
        if (code !== this.src.charCodeAt(--pos)) {
          return pos + 1;
        }
      }
      return pos;
    };
    StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {
      var i10, lineIndent, ch, first, last, queue, lineStart, line = begin;
      if (begin >= end) {
        return "";
      }
      queue = new Array(end - begin);
      for (i10 = 0; line < end; line++, i10++) {
        lineIndent = 0;
        lineStart = first = this.bMarks[line];
        if (line + 1 < end || keepLastLF) {
          last = this.eMarks[line] + 1;
        } else {
          last = this.eMarks[line];
        }
        while (first < last && lineIndent < indent) {
          ch = this.src.charCodeAt(first);
          if (isSpace(ch)) {
            if (ch === 9) {
              lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;
            } else {
              lineIndent++;
            }
          } else if (first - lineStart < this.tShift[line]) {
            lineIndent++;
          } else {
            break;
          }
          first++;
        }
        if (lineIndent > indent) {
          queue[i10] = new Array(lineIndent - indent + 1).join(" ") + this.src.slice(first, last);
        } else {
          queue[i10] = this.src.slice(first, last);
        }
      }
      return queue.join("");
    };
    StateBlock.prototype.Token = Token;
    module.exports = StateBlock;
  }
});

// node_modules/markdown-it/lib/parser_block.js
var require_parser_block = __commonJS({
  "node_modules/markdown-it/lib/parser_block.js"(exports, module) {
    "use strict";
    var Ruler = require_ruler();
    var _rules = [
      // First 2 params - rule name & source. Secondary array - list of rules,
      // which can be terminated by this one.
      ["table", require_table(), ["paragraph", "reference"]],
      ["code", require_code()],
      ["fence", require_fence(), ["paragraph", "reference", "blockquote", "list"]],
      ["blockquote", require_blockquote(), ["paragraph", "reference", "blockquote", "list"]],
      ["hr", require_hr(), ["paragraph", "reference", "blockquote", "list"]],
      ["list", require_list(), ["paragraph", "reference", "blockquote"]],
      ["reference", require_reference()],
      ["html_block", require_html_block(), ["paragraph", "reference", "blockquote"]],
      ["heading", require_heading(), ["paragraph", "reference", "blockquote"]],
      ["lheading", require_lheading()],
      ["paragraph", require_paragraph()]
    ];
    function ParserBlock() {
      this.ruler = new Ruler();
      for (var i10 = 0; i10 < _rules.length; i10++) {
        this.ruler.push(_rules[i10][0], _rules[i10][1], { alt: (_rules[i10][2] || []).slice() });
      }
    }
    ParserBlock.prototype.tokenize = function(state, startLine, endLine) {
      var ok, i10, rules = this.ruler.getRules(""), len = rules.length, line = startLine, hasEmptyLines = false, maxNesting = state.md.options.maxNesting;
      while (line < endLine) {
        state.line = line = state.skipEmptyLines(line);
        if (line >= endLine) {
          break;
        }
        if (state.sCount[line] < state.blkIndent) {
          break;
        }
        if (state.level >= maxNesting) {
          state.line = endLine;
          break;
        }
        for (i10 = 0; i10 < len; i10++) {
          ok = rules[i10](state, line, endLine, false);
          if (ok) {
            break;
          }
        }
        state.tight = !hasEmptyLines;
        if (state.isEmpty(state.line - 1)) {
          hasEmptyLines = true;
        }
        line = state.line;
        if (line < endLine && state.isEmpty(line)) {
          hasEmptyLines = true;
          line++;
          state.line = line;
        }
      }
    };
    ParserBlock.prototype.parse = function(src, md, env2, outTokens) {
      var state;
      if (!src) {
        return;
      }
      state = new this.State(src, md, env2, outTokens);
      this.tokenize(state, state.line, state.lineMax);
    };
    ParserBlock.prototype.State = require_state_block();
    module.exports = ParserBlock;
  }
});

// node_modules/markdown-it/lib/rules_inline/text.js
var require_text = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/text.js"(exports, module) {
    "use strict";
    function isTerminatorChar(ch) {
      switch (ch) {
        case 10:
        case 33:
        case 35:
        case 36:
        case 37:
        case 38:
        case 42:
        case 43:
        case 45:
        case 58:
        case 60:
        case 61:
        case 62:
        case 64:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
        case 123:
        case 125:
        case 126:
          return true;
        default:
          return false;
      }
    }
    module.exports = function text(state, silent) {
      var pos = state.pos;
      while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {
        pos++;
      }
      if (pos === state.pos) {
        return false;
      }
      if (!silent) {
        state.pending += state.src.slice(state.pos, pos);
      }
      state.pos = pos;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/newline.js
var require_newline = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/newline.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    module.exports = function newline(state, silent) {
      var pmax, max, ws, pos = state.pos;
      if (state.src.charCodeAt(pos) !== 10) {
        return false;
      }
      pmax = state.pending.length - 1;
      max = state.posMax;
      if (!silent) {
        if (pmax >= 0 && state.pending.charCodeAt(pmax) === 32) {
          if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 32) {
            ws = pmax - 1;
            while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 32)
              ws--;
            state.pending = state.pending.slice(0, ws);
            state.push("hardbreak", "br", 0);
          } else {
            state.pending = state.pending.slice(0, -1);
            state.push("softbreak", "br", 0);
          }
        } else {
          state.push("softbreak", "br", 0);
        }
      }
      pos++;
      while (pos < max && isSpace(state.src.charCodeAt(pos))) {
        pos++;
      }
      state.pos = pos;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/escape.js
var require_escape = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/escape.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    var ESCAPED = [];
    for (i10 = 0; i10 < 256; i10++) {
      ESCAPED.push(0);
    }
    var i10;
    "\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(ch) {
      ESCAPED[ch.charCodeAt(0)] = 1;
    });
    module.exports = function escape(state, silent) {
      var ch, pos = state.pos, max = state.posMax;
      if (state.src.charCodeAt(pos) !== 92) {
        return false;
      }
      pos++;
      if (pos < max) {
        ch = state.src.charCodeAt(pos);
        if (ch < 256 && ESCAPED[ch] !== 0) {
          if (!silent) {
            state.pending += state.src[pos];
          }
          state.pos += 2;
          return true;
        }
        if (ch === 10) {
          if (!silent) {
            state.push("hardbreak", "br", 0);
          }
          pos++;
          while (pos < max) {
            ch = state.src.charCodeAt(pos);
            if (!isSpace(ch)) {
              break;
            }
            pos++;
          }
          state.pos = pos;
          return true;
        }
      }
      if (!silent) {
        state.pending += "\\";
      }
      state.pos++;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/backticks.js
var require_backticks = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/backticks.js"(exports, module) {
    "use strict";
    module.exports = function backtick(state, silent) {
      var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength, pos = state.pos, ch = state.src.charCodeAt(pos);
      if (ch !== 96) {
        return false;
      }
      start = pos;
      pos++;
      max = state.posMax;
      while (pos < max && state.src.charCodeAt(pos) === 96) {
        pos++;
      }
      marker = state.src.slice(start, pos);
      openerLength = marker.length;
      if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {
        if (!silent)
          state.pending += marker;
        state.pos += openerLength;
        return true;
      }
      matchStart = matchEnd = pos;
      while ((matchStart = state.src.indexOf("`", matchEnd)) !== -1) {
        matchEnd = matchStart + 1;
        while (matchEnd < max && state.src.charCodeAt(matchEnd) === 96) {
          matchEnd++;
        }
        closerLength = matchEnd - matchStart;
        if (closerLength === openerLength) {
          if (!silent) {
            token = state.push("code_inline", "code", 0);
            token.markup = marker;
            token.content = state.src.slice(pos, matchStart).replace(/\n/g, " ").replace(/^ (.+) $/, "$1");
          }
          state.pos = matchEnd;
          return true;
        }
        state.backticks[closerLength] = matchStart;
      }
      state.backticksScanned = true;
      if (!silent)
        state.pending += marker;
      state.pos += openerLength;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/strikethrough.js
var require_strikethrough = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/strikethrough.js"(exports, module) {
    "use strict";
    module.exports.tokenize = function strikethrough(state, silent) {
      var i10, scanned, token, len, ch, start = state.pos, marker = state.src.charCodeAt(start);
      if (silent) {
        return false;
      }
      if (marker !== 126) {
        return false;
      }
      scanned = state.scanDelims(state.pos, true);
      len = scanned.length;
      ch = String.fromCharCode(marker);
      if (len < 2) {
        return false;
      }
      if (len % 2) {
        token = state.push("text", "", 0);
        token.content = ch;
        len--;
      }
      for (i10 = 0; i10 < len; i10 += 2) {
        token = state.push("text", "", 0);
        token.content = ch + ch;
        state.delimiters.push({
          marker,
          length: 0,
          // disable "rule of 3" length checks meant for emphasis
          token: state.tokens.length - 1,
          end: -1,
          open: scanned.can_open,
          close: scanned.can_close
        });
      }
      state.pos += scanned.length;
      return true;
    };
    function postProcess(state, delimiters) {
      var i10, j7, startDelim, endDelim, token, loneMarkers = [], max = delimiters.length;
      for (i10 = 0; i10 < max; i10++) {
        startDelim = delimiters[i10];
        if (startDelim.marker !== 126) {
          continue;
        }
        if (startDelim.end === -1) {
          continue;
        }
        endDelim = delimiters[startDelim.end];
        token = state.tokens[startDelim.token];
        token.type = "s_open";
        token.tag = "s";
        token.nesting = 1;
        token.markup = "~~";
        token.content = "";
        token = state.tokens[endDelim.token];
        token.type = "s_close";
        token.tag = "s";
        token.nesting = -1;
        token.markup = "~~";
        token.content = "";
        if (state.tokens[endDelim.token - 1].type === "text" && state.tokens[endDelim.token - 1].content === "~") {
          loneMarkers.push(endDelim.token - 1);
        }
      }
      while (loneMarkers.length) {
        i10 = loneMarkers.pop();
        j7 = i10 + 1;
        while (j7 < state.tokens.length && state.tokens[j7].type === "s_close") {
          j7++;
        }
        j7--;
        if (i10 !== j7) {
          token = state.tokens[j7];
          state.tokens[j7] = state.tokens[i10];
          state.tokens[i10] = token;
        }
      }
    }
    module.exports.postProcess = function strikethrough(state) {
      var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
      postProcess(state, state.delimiters);
      for (curr = 0; curr < max; curr++) {
        if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
          postProcess(state, tokens_meta[curr].delimiters);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/emphasis.js
var require_emphasis = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/emphasis.js"(exports, module) {
    "use strict";
    module.exports.tokenize = function emphasis(state, silent) {
      var i10, scanned, token, start = state.pos, marker = state.src.charCodeAt(start);
      if (silent) {
        return false;
      }
      if (marker !== 95 && marker !== 42) {
        return false;
      }
      scanned = state.scanDelims(state.pos, marker === 42);
      for (i10 = 0; i10 < scanned.length; i10++) {
        token = state.push("text", "", 0);
        token.content = String.fromCharCode(marker);
        state.delimiters.push({
          // Char code of the starting marker (number).
          //
          marker,
          // Total length of these series of delimiters.
          //
          length: scanned.length,
          // A position of the token this delimiter corresponds to.
          //
          token: state.tokens.length - 1,
          // If this delimiter is matched as a valid opener, `end` will be
          // equal to its position, otherwise it's `-1`.
          //
          end: -1,
          // Boolean flags that determine if this delimiter could open or close
          // an emphasis.
          //
          open: scanned.can_open,
          close: scanned.can_close
        });
      }
      state.pos += scanned.length;
      return true;
    };
    function postProcess(state, delimiters) {
      var i10, startDelim, endDelim, token, ch, isStrong, max = delimiters.length;
      for (i10 = max - 1; i10 >= 0; i10--) {
        startDelim = delimiters[i10];
        if (startDelim.marker !== 95 && startDelim.marker !== 42) {
          continue;
        }
        if (startDelim.end === -1) {
          continue;
        }
        endDelim = delimiters[startDelim.end];
        isStrong = i10 > 0 && delimiters[i10 - 1].end === startDelim.end + 1 && // check that first two markers match and adjacent
        delimiters[i10 - 1].marker === startDelim.marker && delimiters[i10 - 1].token === startDelim.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
        delimiters[startDelim.end + 1].token === endDelim.token + 1;
        ch = String.fromCharCode(startDelim.marker);
        token = state.tokens[startDelim.token];
        token.type = isStrong ? "strong_open" : "em_open";
        token.tag = isStrong ? "strong" : "em";
        token.nesting = 1;
        token.markup = isStrong ? ch + ch : ch;
        token.content = "";
        token = state.tokens[endDelim.token];
        token.type = isStrong ? "strong_close" : "em_close";
        token.tag = isStrong ? "strong" : "em";
        token.nesting = -1;
        token.markup = isStrong ? ch + ch : ch;
        token.content = "";
        if (isStrong) {
          state.tokens[delimiters[i10 - 1].token].content = "";
          state.tokens[delimiters[startDelim.end + 1].token].content = "";
          i10--;
        }
      }
    }
    module.exports.postProcess = function emphasis(state) {
      var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
      postProcess(state, state.delimiters);
      for (curr = 0; curr < max; curr++) {
        if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
          postProcess(state, tokens_meta[curr].delimiters);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/link.js
var require_link = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/link.js"(exports, module) {
    "use strict";
    var normalizeReference = require_utils().normalizeReference;
    var isSpace = require_utils().isSpace;
    module.exports = function link(state, silent) {
      var attrs, code, label, labelEnd, labelStart, pos, res, ref, token, href = "", title = "", oldPos = state.pos, max = state.posMax, start = state.pos, parseReference = true;
      if (state.src.charCodeAt(state.pos) !== 91) {
        return false;
      }
      labelStart = state.pos + 1;
      labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);
      if (labelEnd < 0) {
        return false;
      }
      pos = labelEnd + 1;
      if (pos < max && state.src.charCodeAt(pos) === 40) {
        parseReference = false;
        pos++;
        for (; pos < max; pos++) {
          code = state.src.charCodeAt(pos);
          if (!isSpace(code) && code !== 10) {
            break;
          }
        }
        if (pos >= max) {
          return false;
        }
        start = pos;
        res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);
        if (res.ok) {
          href = state.md.normalizeLink(res.str);
          if (state.md.validateLink(href)) {
            pos = res.pos;
          } else {
            href = "";
          }
          start = pos;
          for (; pos < max; pos++) {
            code = state.src.charCodeAt(pos);
            if (!isSpace(code) && code !== 10) {
              break;
            }
          }
          res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);
          if (pos < max && start !== pos && res.ok) {
            title = res.str;
            pos = res.pos;
            for (; pos < max; pos++) {
              code = state.src.charCodeAt(pos);
              if (!isSpace(code) && code !== 10) {
                break;
              }
            }
          }
        }
        if (pos >= max || state.src.charCodeAt(pos) !== 41) {
          parseReference = true;
        }
        pos++;
      }
      if (parseReference) {
        if (typeof state.env.references === "undefined") {
          return false;
        }
        if (pos < max && state.src.charCodeAt(pos) === 91) {
          start = pos + 1;
          pos = state.md.helpers.parseLinkLabel(state, pos);
          if (pos >= 0) {
            label = state.src.slice(start, pos++);
          } else {
            pos = labelEnd + 1;
          }
        } else {
          pos = labelEnd + 1;
        }
        if (!label) {
          label = state.src.slice(labelStart, labelEnd);
        }
        ref = state.env.references[normalizeReference(label)];
        if (!ref) {
          state.pos = oldPos;
          return false;
        }
        href = ref.href;
        title = ref.title;
      }
      if (!silent) {
        state.pos = labelStart;
        state.posMax = labelEnd;
        token = state.push("link_open", "a", 1);
        token.attrs = attrs = [["href", href]];
        if (title) {
          attrs.push(["title", title]);
        }
        state.md.inline.tokenize(state);
        token = state.push("link_close", "a", -1);
      }
      state.pos = pos;
      state.posMax = max;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/image.js
var require_image = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/image.js"(exports, module) {
    "use strict";
    var normalizeReference = require_utils().normalizeReference;
    var isSpace = require_utils().isSpace;
    module.exports = function image(state, silent) {
      var attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title, token, tokens, start, href = "", oldPos = state.pos, max = state.posMax;
      if (state.src.charCodeAt(state.pos) !== 33) {
        return false;
      }
      if (state.src.charCodeAt(state.pos + 1) !== 91) {
        return false;
      }
      labelStart = state.pos + 2;
      labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);
      if (labelEnd < 0) {
        return false;
      }
      pos = labelEnd + 1;
      if (pos < max && state.src.charCodeAt(pos) === 40) {
        pos++;
        for (; pos < max; pos++) {
          code = state.src.charCodeAt(pos);
          if (!isSpace(code) && code !== 10) {
            break;
          }
        }
        if (pos >= max) {
          return false;
        }
        start = pos;
        res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);
        if (res.ok) {
          href = state.md.normalizeLink(res.str);
          if (state.md.validateLink(href)) {
            pos = res.pos;
          } else {
            href = "";
          }
        }
        start = pos;
        for (; pos < max; pos++) {
          code = state.src.charCodeAt(pos);
          if (!isSpace(code) && code !== 10) {
            break;
          }
        }
        res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);
        if (pos < max && start !== pos && res.ok) {
          title = res.str;
          pos = res.pos;
          for (; pos < max; pos++) {
            code = state.src.charCodeAt(pos);
            if (!isSpace(code) && code !== 10) {
              break;
            }
          }
        } else {
          title = "";
        }
        if (pos >= max || state.src.charCodeAt(pos) !== 41) {
          state.pos = oldPos;
          return false;
        }
        pos++;
      } else {
        if (typeof state.env.references === "undefined") {
          return false;
        }
        if (pos < max && state.src.charCodeAt(pos) === 91) {
          start = pos + 1;
          pos = state.md.helpers.parseLinkLabel(state, pos);
          if (pos >= 0) {
            label = state.src.slice(start, pos++);
          } else {
            pos = labelEnd + 1;
          }
        } else {
          pos = labelEnd + 1;
        }
        if (!label) {
          label = state.src.slice(labelStart, labelEnd);
        }
        ref = state.env.references[normalizeReference(label)];
        if (!ref) {
          state.pos = oldPos;
          return false;
        }
        href = ref.href;
        title = ref.title;
      }
      if (!silent) {
        content = state.src.slice(labelStart, labelEnd);
        state.md.inline.parse(
          content,
          state.md,
          state.env,
          tokens = []
        );
        token = state.push("image", "img", 0);
        token.attrs = attrs = [["src", href], ["alt", ""]];
        token.children = tokens;
        token.content = content;
        if (title) {
          attrs.push(["title", title]);
        }
      }
      state.pos = pos;
      state.posMax = max;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/autolink.js
var require_autolink = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/autolink.js"(exports, module) {
    "use strict";
    var EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;
    var AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/;
    module.exports = function autolink(state, silent) {
      var url, fullUrl, token, ch, start, max, pos = state.pos;
      if (state.src.charCodeAt(pos) !== 60) {
        return false;
      }
      start = state.pos;
      max = state.posMax;
      for (; ; ) {
        if (++pos >= max)
          return false;
        ch = state.src.charCodeAt(pos);
        if (ch === 60)
          return false;
        if (ch === 62)
          break;
      }
      url = state.src.slice(start + 1, pos);
      if (AUTOLINK_RE.test(url)) {
        fullUrl = state.md.normalizeLink(url);
        if (!state.md.validateLink(fullUrl)) {
          return false;
        }
        if (!silent) {
          token = state.push("link_open", "a", 1);
          token.attrs = [["href", fullUrl]];
          token.markup = "autolink";
          token.info = "auto";
          token = state.push("text", "", 0);
          token.content = state.md.normalizeLinkText(url);
          token = state.push("link_close", "a", -1);
          token.markup = "autolink";
          token.info = "auto";
        }
        state.pos += url.length + 2;
        return true;
      }
      if (EMAIL_RE.test(url)) {
        fullUrl = state.md.normalizeLink("mailto:" + url);
        if (!state.md.validateLink(fullUrl)) {
          return false;
        }
        if (!silent) {
          token = state.push("link_open", "a", 1);
          token.attrs = [["href", fullUrl]];
          token.markup = "autolink";
          token.info = "auto";
          token = state.push("text", "", 0);
          token.content = state.md.normalizeLinkText(url);
          token = state.push("link_close", "a", -1);
          token.markup = "autolink";
          token.info = "auto";
        }
        state.pos += url.length + 2;
        return true;
      }
      return false;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/html_inline.js
var require_html_inline = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/html_inline.js"(exports, module) {
    "use strict";
    var HTML_TAG_RE = require_html_re().HTML_TAG_RE;
    function isLetter(ch) {
      var lc = ch | 32;
      return lc >= 97 && lc <= 122;
    }
    module.exports = function html_inline(state, silent) {
      var ch, match, max, token, pos = state.pos;
      if (!state.md.options.html) {
        return false;
      }
      max = state.posMax;
      if (state.src.charCodeAt(pos) !== 60 || pos + 2 >= max) {
        return false;
      }
      ch = state.src.charCodeAt(pos + 1);
      if (ch !== 33 && ch !== 63 && ch !== 47 && !isLetter(ch)) {
        return false;
      }
      match = state.src.slice(pos).match(HTML_TAG_RE);
      if (!match) {
        return false;
      }
      if (!silent) {
        token = state.push("html_inline", "", 0);
        token.content = state.src.slice(pos, pos + match[0].length);
      }
      state.pos += match[0].length;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/entity.js
var require_entity = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/entity.js"(exports, module) {
    "use strict";
    var entities = require_entities2();
    var has = require_utils().has;
    var isValidEntityCode = require_utils().isValidEntityCode;
    var fromCodePoint = require_utils().fromCodePoint;
    var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;
    var NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;
    module.exports = function entity(state, silent) {
      var ch, code, match, pos = state.pos, max = state.posMax;
      if (state.src.charCodeAt(pos) !== 38) {
        return false;
      }
      if (pos + 1 < max) {
        ch = state.src.charCodeAt(pos + 1);
        if (ch === 35) {
          match = state.src.slice(pos).match(DIGITAL_RE);
          if (match) {
            if (!silent) {
              code = match[1][0].toLowerCase() === "x" ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);
              state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(65533);
            }
            state.pos += match[0].length;
            return true;
          }
        } else {
          match = state.src.slice(pos).match(NAMED_RE);
          if (match) {
            if (has(entities, match[1])) {
              if (!silent) {
                state.pending += entities[match[1]];
              }
              state.pos += match[0].length;
              return true;
            }
          }
        }
      }
      if (!silent) {
        state.pending += "&";
      }
      state.pos++;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/balance_pairs.js
var require_balance_pairs = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/balance_pairs.js"(exports, module) {
    "use strict";
    function processDelimiters(state, delimiters) {
      var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx, isOddMatch, lastJump, openersBottom = {}, max = delimiters.length;
      if (!max)
        return;
      var headerIdx = 0;
      var lastTokenIdx = -2;
      var jumps = [];
      for (closerIdx = 0; closerIdx < max; closerIdx++) {
        closer = delimiters[closerIdx];
        jumps.push(0);
        if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {
          headerIdx = closerIdx;
        }
        lastTokenIdx = closer.token;
        closer.length = closer.length || 0;
        if (!closer.close)
          continue;
        if (!openersBottom.hasOwnProperty(closer.marker)) {
          openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1];
        }
        minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3];
        openerIdx = headerIdx - jumps[headerIdx] - 1;
        newMinOpenerIdx = openerIdx;
        for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {
          opener = delimiters[openerIdx];
          if (opener.marker !== closer.marker)
            continue;
          if (opener.open && opener.end < 0) {
            isOddMatch = false;
            if (opener.close || closer.open) {
              if ((opener.length + closer.length) % 3 === 0) {
                if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {
                  isOddMatch = true;
                }
              }
            }
            if (!isOddMatch) {
              lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0;
              jumps[closerIdx] = closerIdx - openerIdx + lastJump;
              jumps[openerIdx] = lastJump;
              closer.open = false;
              opener.end = closerIdx;
              opener.close = false;
              newMinOpenerIdx = -1;
              lastTokenIdx = -2;
              break;
            }
          }
        }
        if (newMinOpenerIdx !== -1) {
          openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx;
        }
      }
    }
    module.exports = function link_pairs(state) {
      var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
      processDelimiters(state, state.delimiters);
      for (curr = 0; curr < max; curr++) {
        if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
          processDelimiters(state, tokens_meta[curr].delimiters);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/text_collapse.js
var require_text_collapse = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/text_collapse.js"(exports, module) {
    "use strict";
    module.exports = function text_collapse(state) {
      var curr, last, level = 0, tokens = state.tokens, max = state.tokens.length;
      for (curr = last = 0; curr < max; curr++) {
        if (tokens[curr].nesting < 0)
          level--;
        tokens[curr].level = level;
        if (tokens[curr].nesting > 0)
          level++;
        if (tokens[curr].type === "text" && curr + 1 < max && tokens[curr + 1].type === "text") {
          tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;
        } else {
          if (curr !== last) {
            tokens[last] = tokens[curr];
          }
          last++;
        }
      }
      if (curr !== last) {
        tokens.length = last;
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/state_inline.js
var require_state_inline = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/state_inline.js"(exports, module) {
    "use strict";
    var Token = require_token();
    var isWhiteSpace = require_utils().isWhiteSpace;
    var isPunctChar = require_utils().isPunctChar;
    var isMdAsciiPunct = require_utils().isMdAsciiPunct;
    function StateInline(src, md, env2, outTokens) {
      this.src = src;
      this.env = env2;
      this.md = md;
      this.tokens = outTokens;
      this.tokens_meta = Array(outTokens.length);
      this.pos = 0;
      this.posMax = this.src.length;
      this.level = 0;
      this.pending = "";
      this.pendingLevel = 0;
      this.cache = {};
      this.delimiters = [];
      this._prev_delimiters = [];
      this.backticks = {};
      this.backticksScanned = false;
    }
    StateInline.prototype.pushPending = function() {
      var token = new Token("text", "", 0);
      token.content = this.pending;
      token.level = this.pendingLevel;
      this.tokens.push(token);
      this.pending = "";
      return token;
    };
    StateInline.prototype.push = function(type, tag, nesting) {
      if (this.pending) {
        this.pushPending();
      }
      var token = new Token(type, tag, nesting);
      var token_meta = null;
      if (nesting < 0) {
        this.level--;
        this.delimiters = this._prev_delimiters.pop();
      }
      token.level = this.level;
      if (nesting > 0) {
        this.level++;
        this._prev_delimiters.push(this.delimiters);
        this.delimiters = [];
        token_meta = { delimiters: this.delimiters };
      }
      this.pendingLevel = this.level;
      this.tokens.push(token);
      this.tokens_meta.push(token_meta);
      return token;
    };
    StateInline.prototype.scanDelims = function(start, canSplitWord) {
      var pos = start, lastChar, nextChar, count, can_open, can_close, isLastWhiteSpace, isLastPunctChar, isNextWhiteSpace, isNextPunctChar, left_flanking = true, right_flanking = true, max = this.posMax, marker = this.src.charCodeAt(start);
      lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 32;
      while (pos < max && this.src.charCodeAt(pos) === marker) {
        pos++;
      }
      count = pos - start;
      nextChar = pos < max ? this.src.charCodeAt(pos) : 32;
      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));
      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));
      isLastWhiteSpace = isWhiteSpace(lastChar);
      isNextWhiteSpace = isWhiteSpace(nextChar);
      if (isNextWhiteSpace) {
        left_flanking = false;
      } else if (isNextPunctChar) {
        if (!(isLastWhiteSpace || isLastPunctChar)) {
          left_flanking = false;
        }
      }
      if (isLastWhiteSpace) {
        right_flanking = false;
      } else if (isLastPunctChar) {
        if (!(isNextWhiteSpace || isNextPunctChar)) {
          right_flanking = false;
        }
      }
      if (!canSplitWord) {
        can_open = left_flanking && (!right_flanking || isLastPunctChar);
        can_close = right_flanking && (!left_flanking || isNextPunctChar);
      } else {
        can_open = left_flanking;
        can_close = right_flanking;
      }
      return {
        can_open,
        can_close,
        length: count
      };
    };
    StateInline.prototype.Token = Token;
    module.exports = StateInline;
  }
});

// node_modules/markdown-it/lib/parser_inline.js
var require_parser_inline = __commonJS({
  "node_modules/markdown-it/lib/parser_inline.js"(exports, module) {
    "use strict";
    var Ruler = require_ruler();
    var _rules = [
      ["text", require_text()],
      ["newline", require_newline()],
      ["escape", require_escape()],
      ["backticks", require_backticks()],
      ["strikethrough", require_strikethrough().tokenize],
      ["emphasis", require_emphasis().tokenize],
      ["link", require_link()],
      ["image", require_image()],
      ["autolink", require_autolink()],
      ["html_inline", require_html_inline()],
      ["entity", require_entity()]
    ];
    var _rules2 = [
      ["balance_pairs", require_balance_pairs()],
      ["strikethrough", require_strikethrough().postProcess],
      ["emphasis", require_emphasis().postProcess],
      ["text_collapse", require_text_collapse()]
    ];
    function ParserInline() {
      var i10;
      this.ruler = new Ruler();
      for (i10 = 0; i10 < _rules.length; i10++) {
        this.ruler.push(_rules[i10][0], _rules[i10][1]);
      }
      this.ruler2 = new Ruler();
      for (i10 = 0; i10 < _rules2.length; i10++) {
        this.ruler2.push(_rules2[i10][0], _rules2[i10][1]);
      }
    }
    ParserInline.prototype.skipToken = function(state) {
      var ok, i10, pos = state.pos, rules = this.ruler.getRules(""), len = rules.length, maxNesting = state.md.options.maxNesting, cache = state.cache;
      if (typeof cache[pos] !== "undefined") {
        state.pos = cache[pos];
        return;
      }
      if (state.level < maxNesting) {
        for (i10 = 0; i10 < len; i10++) {
          state.level++;
          ok = rules[i10](state, true);
          state.level--;
          if (ok) {
            break;
          }
        }
      } else {
        state.pos = state.posMax;
      }
      if (!ok) {
        state.pos++;
      }
      cache[pos] = state.pos;
    };
    ParserInline.prototype.tokenize = function(state) {
      var ok, i10, rules = this.ruler.getRules(""), len = rules.length, end = state.posMax, maxNesting = state.md.options.maxNesting;
      while (state.pos < end) {
        if (state.level < maxNesting) {
          for (i10 = 0; i10 < len; i10++) {
            ok = rules[i10](state, false);
            if (ok) {
              break;
            }
          }
        }
        if (ok) {
          if (state.pos >= end) {
            break;
          }
          continue;
        }
        state.pending += state.src[state.pos++];
      }
      if (state.pending) {
        state.pushPending();
      }
    };
    ParserInline.prototype.parse = function(str, md, env2, outTokens) {
      var i10, rules, len;
      var state = new this.State(str, md, env2, outTokens);
      this.tokenize(state);
      rules = this.ruler2.getRules("");
      len = rules.length;
      for (i10 = 0; i10 < len; i10++) {
        rules[i10](state);
      }
    };
    ParserInline.prototype.State = require_state_inline();
    module.exports = ParserInline;
  }
});

// node_modules/linkify-it/lib/re.js
var require_re = __commonJS({
  "node_modules/linkify-it/lib/re.js"(exports, module) {
    "use strict";
    module.exports = function(opts) {
      var re7 = {};
      re7.src_Any = require_regex2().source;
      re7.src_Cc = require_regex3().source;
      re7.src_Z = require_regex5().source;
      re7.src_P = require_regex().source;
      re7.src_ZPCc = [re7.src_Z, re7.src_P, re7.src_Cc].join("|");
      re7.src_ZCc = [re7.src_Z, re7.src_Cc].join("|");
      var text_separators = "[><｜]";
      re7.src_pseudo_letter = "(?:(?!" + text_separators + "|" + re7.src_ZPCc + ")" + re7.src_Any + ")";
      re7.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)";
      re7.src_auth = "(?:(?:(?!" + re7.src_ZCc + "|[@/\\[\\]()]).)+@)?";
      re7.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?";
      re7.src_host_terminator = "(?=$|" + text_separators + "|" + re7.src_ZPCc + ")(?!-|_|:\\d|\\.-|\\.(?!$|" + re7.src_ZPCc + "))";
      re7.src_path = "(?:[/?#](?:(?!" + re7.src_ZCc + "|" + text_separators + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + re7.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + re7.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + re7.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + re7.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + re7.src_ZCc + "|[']).)+\\'|\\'(?=" + re7.src_pseudo_letter + "|[-]).|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + re7.src_ZCc + "|[.]).|" + (opts && opts["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + re7.src_ZCc + ").|;(?!" + re7.src_ZCc + ").|\\!+(?!" + re7.src_ZCc + "|[!]).|\\?(?!" + re7.src_ZCc + "|[?]).)+|\\/)?";
      re7.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*';
      re7.src_xn = "xn--[a-z0-9\\-]{1,59}";
      re7.src_domain_root = // Allow letters & digits (http://test1)
      "(?:" + re7.src_xn + "|" + re7.src_pseudo_letter + "{1,63})";
      re7.src_domain = "(?:" + re7.src_xn + "|(?:" + re7.src_pseudo_letter + ")|(?:" + re7.src_pseudo_letter + "(?:-|" + re7.src_pseudo_letter + "){0,61}" + re7.src_pseudo_letter + "))";
      re7.src_host = "(?:(?:(?:(?:" + re7.src_domain + ")\\.)*" + re7.src_domain + "))";
      re7.tpl_host_fuzzy = "(?:" + re7.src_ip4 + "|(?:(?:(?:" + re7.src_domain + ")\\.)+(?:%TLDS%)))";
      re7.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + re7.src_domain + ")\\.)+(?:%TLDS%))";
      re7.src_host_strict = re7.src_host + re7.src_host_terminator;
      re7.tpl_host_fuzzy_strict = re7.tpl_host_fuzzy + re7.src_host_terminator;
      re7.src_host_port_strict = re7.src_host + re7.src_port + re7.src_host_terminator;
      re7.tpl_host_port_fuzzy_strict = re7.tpl_host_fuzzy + re7.src_port + re7.src_host_terminator;
      re7.tpl_host_port_no_ip_fuzzy_strict = re7.tpl_host_no_ip_fuzzy + re7.src_port + re7.src_host_terminator;
      re7.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + re7.src_ZPCc + "|>|$))";
      re7.tpl_email_fuzzy = "(^|" + text_separators + '|"|\\(|' + re7.src_ZCc + ")(" + re7.src_email_name + "@" + re7.tpl_host_fuzzy_strict + ")";
      re7.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
      // but can start with > (markdown blockquote)
      "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + re7.src_ZPCc + "))((?![$+<=>^`|｜])" + re7.tpl_host_port_fuzzy_strict + re7.src_path + ")";
      re7.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
      // but can start with > (markdown blockquote)
      "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + re7.src_ZPCc + "))((?![$+<=>^`|｜])" + re7.tpl_host_port_no_ip_fuzzy_strict + re7.src_path + ")";
      return re7;
    };
  }
});

// node_modules/linkify-it/index.js
var require_linkify_it = __commonJS({
  "node_modules/linkify-it/index.js"(exports, module) {
    "use strict";
    function assign(obj) {
      var sources = Array.prototype.slice.call(arguments, 1);
      sources.forEach(function(source) {
        if (!source) {
          return;
        }
        Object.keys(source).forEach(function(key) {
          obj[key] = source[key];
        });
      });
      return obj;
    }
    function _class(obj) {
      return Object.prototype.toString.call(obj);
    }
    function isString3(obj) {
      return _class(obj) === "[object String]";
    }
    function isObject(obj) {
      return _class(obj) === "[object Object]";
    }
    function isRegExp(obj) {
      return _class(obj) === "[object RegExp]";
    }
    function isFunction2(obj) {
      return _class(obj) === "[object Function]";
    }
    function escapeRE(str) {
      return str.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
    }
    var defaultOptions = {
      fuzzyLink: true,
      fuzzyEmail: true,
      fuzzyIP: false
    };
    function isOptionsObj(obj) {
      return Object.keys(obj || {}).reduce(function(acc, k2) {
        return acc || defaultOptions.hasOwnProperty(k2);
      }, false);
    }
    var defaultSchemas = {
      "http:": {
        validate: function(text, pos, self) {
          var tail = text.slice(pos);
          if (!self.re.http) {
            self.re.http = new RegExp(
              "^\\/\\/" + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path,
              "i"
            );
          }
          if (self.re.http.test(tail)) {
            return tail.match(self.re.http)[0].length;
          }
          return 0;
        }
      },
      "https:": "http:",
      "ftp:": "http:",
      "//": {
        validate: function(text, pos, self) {
          var tail = text.slice(pos);
          if (!self.re.no_http) {
            self.re.no_http = new RegExp(
              "^" + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
              // with code comments
              "(?:localhost|(?:(?:" + self.re.src_domain + ")\\.)+" + self.re.src_domain_root + ")" + self.re.src_port + self.re.src_host_terminator + self.re.src_path,
              "i"
            );
          }
          if (self.re.no_http.test(tail)) {
            if (pos >= 3 && text[pos - 3] === ":") {
              return 0;
            }
            if (pos >= 3 && text[pos - 3] === "/") {
              return 0;
            }
            return tail.match(self.re.no_http)[0].length;
          }
          return 0;
        }
      },
      "mailto:": {
        validate: function(text, pos, self) {
          var tail = text.slice(pos);
          if (!self.re.mailto) {
            self.re.mailto = new RegExp(
              "^" + self.re.src_email_name + "@" + self.re.src_host_strict,
              "i"
            );
          }
          if (self.re.mailto.test(tail)) {
            return tail.match(self.re.mailto)[0].length;
          }
          return 0;
        }
      }
    };
    var tlds_2ch_src_re = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]";
    var tlds_default = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
    function resetScanCache(self) {
      self.__index__ = -1;
      self.__text_cache__ = "";
    }
    function createValidator(re7) {
      return function(text, pos) {
        var tail = text.slice(pos);
        if (re7.test(tail)) {
          return tail.match(re7)[0].length;
        }
        return 0;
      };
    }
    function createNormalizer() {
      return function(match, self) {
        self.normalize(match);
      };
    }
    function compile(self) {
      var re7 = self.re = require_re()(self.__opts__);
      var tlds = self.__tlds__.slice();
      self.onCompile();
      if (!self.__tlds_replaced__) {
        tlds.push(tlds_2ch_src_re);
      }
      tlds.push(re7.src_xn);
      re7.src_tlds = tlds.join("|");
      function untpl(tpl) {
        return tpl.replace("%TLDS%", re7.src_tlds);
      }
      re7.email_fuzzy = RegExp(untpl(re7.tpl_email_fuzzy), "i");
      re7.link_fuzzy = RegExp(untpl(re7.tpl_link_fuzzy), "i");
      re7.link_no_ip_fuzzy = RegExp(untpl(re7.tpl_link_no_ip_fuzzy), "i");
      re7.host_fuzzy_test = RegExp(untpl(re7.tpl_host_fuzzy_test), "i");
      var aliases = [];
      self.__compiled__ = {};
      function schemaError(name, val) {
        throw new Error('(LinkifyIt) Invalid schema "' + name + '": ' + val);
      }
      Object.keys(self.__schemas__).forEach(function(name) {
        var val = self.__schemas__[name];
        if (val === null) {
          return;
        }
        var compiled = { validate: null, link: null };
        self.__compiled__[name] = compiled;
        if (isObject(val)) {
          if (isRegExp(val.validate)) {
            compiled.validate = createValidator(val.validate);
          } else if (isFunction2(val.validate)) {
            compiled.validate = val.validate;
          } else {
            schemaError(name, val);
          }
          if (isFunction2(val.normalize)) {
            compiled.normalize = val.normalize;
          } else if (!val.normalize) {
            compiled.normalize = createNormalizer();
          } else {
            schemaError(name, val);
          }
          return;
        }
        if (isString3(val)) {
          aliases.push(name);
          return;
        }
        schemaError(name, val);
      });
      aliases.forEach(function(alias) {
        if (!self.__compiled__[self.__schemas__[alias]]) {
          return;
        }
        self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;
        self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;
      });
      self.__compiled__[""] = { validate: null, normalize: createNormalizer() };
      var slist = Object.keys(self.__compiled__).filter(function(name) {
        return name.length > 0 && self.__compiled__[name];
      }).map(escapeRE).join("|");
      self.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + re7.src_ZPCc + "))(" + slist + ")", "i");
      self.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + re7.src_ZPCc + "))(" + slist + ")", "ig");
      self.re.pretest = RegExp(
        "(" + self.re.schema_test.source + ")|(" + self.re.host_fuzzy_test.source + ")|@",
        "i"
      );
      resetScanCache(self);
    }
    function Match(self, shift) {
      var start = self.__index__, end = self.__last_index__, text = self.__text_cache__.slice(start, end);
      this.schema = self.__schema__.toLowerCase();
      this.index = start + shift;
      this.lastIndex = end + shift;
      this.raw = text;
      this.text = text;
      this.url = text;
    }
    function createMatch(self, shift) {
      var match = new Match(self, shift);
      self.__compiled__[match.schema].normalize(match, self);
      return match;
    }
    function LinkifyIt(schemas, options) {
      if (!(this instanceof LinkifyIt)) {
        return new LinkifyIt(schemas, options);
      }
      if (!options) {
        if (isOptionsObj(schemas)) {
          options = schemas;
          schemas = {};
        }
      }
      this.__opts__ = assign({}, defaultOptions, options);
      this.__index__ = -1;
      this.__last_index__ = -1;
      this.__schema__ = "";
      this.__text_cache__ = "";
      this.__schemas__ = assign({}, defaultSchemas, schemas);
      this.__compiled__ = {};
      this.__tlds__ = tlds_default;
      this.__tlds_replaced__ = false;
      this.re = {};
      compile(this);
    }
    LinkifyIt.prototype.add = function add(schema, definition) {
      this.__schemas__[schema] = definition;
      compile(this);
      return this;
    };
    LinkifyIt.prototype.set = function set(options) {
      this.__opts__ = assign(this.__opts__, options);
      return this;
    };
    LinkifyIt.prototype.test = function test2(text) {
      this.__text_cache__ = text;
      this.__index__ = -1;
      if (!text.length) {
        return false;
      }
      var m12, ml, me5, len, shift, next, re7, tld_pos, at_pos;
      if (this.re.schema_test.test(text)) {
        re7 = this.re.schema_search;
        re7.lastIndex = 0;
        while ((m12 = re7.exec(text)) !== null) {
          len = this.testSchemaAt(text, m12[2], re7.lastIndex);
          if (len) {
            this.__schema__ = m12[2];
            this.__index__ = m12.index + m12[1].length;
            this.__last_index__ = m12.index + m12[0].length + len;
            break;
          }
        }
      }
      if (this.__opts__.fuzzyLink && this.__compiled__["http:"]) {
        tld_pos = text.search(this.re.host_fuzzy_test);
        if (tld_pos >= 0) {
          if (this.__index__ < 0 || tld_pos < this.__index__) {
            if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {
              shift = ml.index + ml[1].length;
              if (this.__index__ < 0 || shift < this.__index__) {
                this.__schema__ = "";
                this.__index__ = shift;
                this.__last_index__ = ml.index + ml[0].length;
              }
            }
          }
        }
      }
      if (this.__opts__.fuzzyEmail && this.__compiled__["mailto:"]) {
        at_pos = text.indexOf("@");
        if (at_pos >= 0) {
          if ((me5 = text.match(this.re.email_fuzzy)) !== null) {
            shift = me5.index + me5[1].length;
            next = me5.index + me5[0].length;
            if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {
              this.__schema__ = "mailto:";
              this.__index__ = shift;
              this.__last_index__ = next;
            }
          }
        }
      }
      return this.__index__ >= 0;
    };
    LinkifyIt.prototype.pretest = function pretest(text) {
      return this.re.pretest.test(text);
    };
    LinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {
      if (!this.__compiled__[schema.toLowerCase()]) {
        return 0;
      }
      return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);
    };
    LinkifyIt.prototype.match = function match(text) {
      var shift = 0, result = [];
      if (this.__index__ >= 0 && this.__text_cache__ === text) {
        result.push(createMatch(this, shift));
        shift = this.__last_index__;
      }
      var tail = shift ? text.slice(shift) : text;
      while (this.test(tail)) {
        result.push(createMatch(this, shift));
        tail = tail.slice(this.__last_index__);
        shift += this.__last_index__;
      }
      if (result.length) {
        return result;
      }
      return null;
    };
    LinkifyIt.prototype.tlds = function tlds(list, keepOld) {
      list = Array.isArray(list) ? list : [list];
      if (!keepOld) {
        this.__tlds__ = list.slice();
        this.__tlds_replaced__ = true;
        compile(this);
        return this;
      }
      this.__tlds__ = this.__tlds__.concat(list).sort().filter(function(el2, idx, arr) {
        return el2 !== arr[idx - 1];
      }).reverse();
      compile(this);
      return this;
    };
    LinkifyIt.prototype.normalize = function normalize(match) {
      if (!match.schema) {
        match.url = "http://" + match.url;
      }
      if (match.schema === "mailto:" && !/^mailto:/i.test(match.url)) {
        match.url = "mailto:" + match.url;
      }
    };
    LinkifyIt.prototype.onCompile = function onCompile() {
    };
    module.exports = LinkifyIt;
  }
});

// node_modules/punycode/punycode.es6.js
var punycode_es6_exports = {};
__export(punycode_es6_exports, {
  decode: () => decode,
  default: () => punycode_es6_default,
  encode: () => encode,
  toASCII: () => toASCII,
  toUnicode: () => toUnicode,
  ucs2decode: () => ucs2decode,
  ucs2encode: () => ucs2encode
});
function error(type) {
  throw new RangeError(errors[type]);
}
function map(array, callback) {
  const result = [];
  let length2 = array.length;
  while (length2--) {
    result[length2] = callback(array[length2]);
  }
  return result;
}
function mapDomain(domain, callback) {
  const parts = domain.split("@");
  let result = "";
  if (parts.length > 1) {
    result = parts[0] + "@";
    domain = parts[1];
  }
  domain = domain.replace(regexSeparators, ".");
  const labels = domain.split(".");
  const encoded = map(labels, callback).join(".");
  return result + encoded;
}
function ucs2decode(string) {
  const output = [];
  let counter2 = 0;
  const length2 = string.length;
  while (counter2 < length2) {
    const value = string.charCodeAt(counter2++);
    if (value >= 55296 && value <= 56319 && counter2 < length2) {
      const extra = string.charCodeAt(counter2++);
      if ((extra & 64512) == 56320) {
        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
      } else {
        output.push(value);
        counter2--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
}
var maxInt, base, tMin, tMax, skew, damp, initialBias, initialN, delimiter, regexPunycode, regexNonASCII, regexSeparators, errors, baseMinusTMin, floor, stringFromCharCode, ucs2encode, basicToDigit, digitToBasic, adapt, decode, encode, toUnicode, toASCII, punycode, punycode_es6_default;
var init_punycode_es6 = __esm({
  "node_modules/punycode/punycode.es6.js"() {
    "use strict";
    maxInt = 2147483647;
    base = 36;
    tMin = 1;
    tMax = 26;
    skew = 38;
    damp = 700;
    initialBias = 72;
    initialN = 128;
    delimiter = "-";
    regexPunycode = /^xn--/;
    regexNonASCII = /[^\0-\x7F]/;
    regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g;
    errors = {
      "overflow": "Overflow: input needs wider integers to process",
      "not-basic": "Illegal input >= 0x80 (not a basic code point)",
      "invalid-input": "Invalid input"
    };
    baseMinusTMin = base - tMin;
    floor = Math.floor;
    stringFromCharCode = String.fromCharCode;
    ucs2encode = (codePoints) => String.fromCodePoint(...codePoints);
    basicToDigit = function(codePoint) {
      if (codePoint >= 48 && codePoint < 58) {
        return 26 + (codePoint - 48);
      }
      if (codePoint >= 65 && codePoint < 91) {
        return codePoint - 65;
      }
      if (codePoint >= 97 && codePoint < 123) {
        return codePoint - 97;
      }
      return base;
    };
    digitToBasic = function(digit, flag) {
      return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
    };
    adapt = function(delta, numPoints, firstTime) {
      let k2 = 0;
      delta = firstTime ? floor(delta / damp) : delta >> 1;
      delta += floor(delta / numPoints);
      for (; delta > baseMinusTMin * tMax >> 1; k2 += base) {
        delta = floor(delta / baseMinusTMin);
      }
      return floor(k2 + (baseMinusTMin + 1) * delta / (delta + skew));
    };
    decode = function(input) {
      const output = [];
      const inputLength = input.length;
      let i10 = 0;
      let n7 = initialN;
      let bias = initialBias;
      let basic = input.lastIndexOf(delimiter);
      if (basic < 0) {
        basic = 0;
      }
      for (let j7 = 0; j7 < basic; ++j7) {
        if (input.charCodeAt(j7) >= 128) {
          error("not-basic");
        }
        output.push(input.charCodeAt(j7));
      }
      for (let index2 = basic > 0 ? basic + 1 : 0; index2 < inputLength; ) {
        const oldi = i10;
        for (let w6 = 1, k2 = base; ; k2 += base) {
          if (index2 >= inputLength) {
            error("invalid-input");
          }
          const digit = basicToDigit(input.charCodeAt(index2++));
          if (digit >= base) {
            error("invalid-input");
          }
          if (digit > floor((maxInt - i10) / w6)) {
            error("overflow");
          }
          i10 += digit * w6;
          const t15 = k2 <= bias ? tMin : k2 >= bias + tMax ? tMax : k2 - bias;
          if (digit < t15) {
            break;
          }
          const baseMinusT = base - t15;
          if (w6 > floor(maxInt / baseMinusT)) {
            error("overflow");
          }
          w6 *= baseMinusT;
        }
        const out = output.length + 1;
        bias = adapt(i10 - oldi, out, oldi == 0);
        if (floor(i10 / out) > maxInt - n7) {
          error("overflow");
        }
        n7 += floor(i10 / out);
        i10 %= out;
        output.splice(i10++, 0, n7);
      }
      return String.fromCodePoint(...output);
    };
    encode = function(input) {
      const output = [];
      input = ucs2decode(input);
      const inputLength = input.length;
      let n7 = initialN;
      let delta = 0;
      let bias = initialBias;
      for (const currentValue of input) {
        if (currentValue < 128) {
          output.push(stringFromCharCode(currentValue));
        }
      }
      const basicLength = output.length;
      let handledCPCount = basicLength;
      if (basicLength) {
        output.push(delimiter);
      }
      while (handledCPCount < inputLength) {
        let m12 = maxInt;
        for (const currentValue of input) {
          if (currentValue >= n7 && currentValue < m12) {
            m12 = currentValue;
          }
        }
        const handledCPCountPlusOne = handledCPCount + 1;
        if (m12 - n7 > floor((maxInt - delta) / handledCPCountPlusOne)) {
          error("overflow");
        }
        delta += (m12 - n7) * handledCPCountPlusOne;
        n7 = m12;
        for (const currentValue of input) {
          if (currentValue < n7 && ++delta > maxInt) {
            error("overflow");
          }
          if (currentValue === n7) {
            let q7 = delta;
            for (let k2 = base; ; k2 += base) {
              const t15 = k2 <= bias ? tMin : k2 >= bias + tMax ? tMax : k2 - bias;
              if (q7 < t15) {
                break;
              }
              const qMinusT = q7 - t15;
              const baseMinusT = base - t15;
              output.push(
                stringFromCharCode(digitToBasic(t15 + qMinusT % baseMinusT, 0))
              );
              q7 = floor(qMinusT / baseMinusT);
            }
            output.push(stringFromCharCode(digitToBasic(q7, 0)));
            bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);
            delta = 0;
            ++handledCPCount;
          }
        }
        ++delta;
        ++n7;
      }
      return output.join("");
    };
    toUnicode = function(input) {
      return mapDomain(input, function(string) {
        return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
      });
    };
    toASCII = function(input) {
      return mapDomain(input, function(string) {
        return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
      });
    };
    punycode = {
      /**
       * A string representing the current Punycode.js version number.
       * @memberOf punycode
       * @type String
       */
      "version": "2.1.0",
      /**
       * An object of methods to convert from JavaScript's internal character
       * representation (UCS-2) to Unicode code points, and back.
       * @see <https://mathiasbynens.be/notes/javascript-encoding>
       * @memberOf punycode
       * @type Object
       */
      "ucs2": {
        "decode": ucs2decode,
        "encode": ucs2encode
      },
      "decode": decode,
      "encode": encode,
      "toASCII": toASCII,
      "toUnicode": toUnicode
    };
    punycode_es6_default = punycode;
  }
});

// node_modules/markdown-it/lib/presets/default.js
var require_default = __commonJS({
  "node_modules/markdown-it/lib/presets/default.js"(exports, module) {
    "use strict";
    module.exports = {
      options: {
        html: false,
        // Enable HTML tags in source
        xhtmlOut: false,
        // Use '/' to close single tags (<br />)
        breaks: false,
        // Convert '\n' in paragraphs into <br>
        langPrefix: "language-",
        // CSS language prefix for fenced blocks
        linkify: false,
        // autoconvert URL-like texts to links
        // Enable some language-neutral replacements + quotes beautification
        typographer: false,
        // Double + single quotes replacement pairs, when typographer enabled,
        // and smartquotes on. Could be either a String or an Array.
        //
        // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
        // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
        quotes: "“”‘’",
        /* “”‘’ */
        // Highlighter function. Should return escaped HTML,
        // or '' if the source string is not changed and should be escaped externaly.
        // If result starts with <pre... internal wrapper is skipped.
        //
        // function (/*str, lang*/) { return ''; }
        //
        highlight: null,
        maxNesting: 100
        // Internal protection, recursion limit
      },
      components: {
        core: {},
        block: {},
        inline: {}
      }
    };
  }
});

// node_modules/markdown-it/lib/presets/zero.js
var require_zero = __commonJS({
  "node_modules/markdown-it/lib/presets/zero.js"(exports, module) {
    "use strict";
    module.exports = {
      options: {
        html: false,
        // Enable HTML tags in source
        xhtmlOut: false,
        // Use '/' to close single tags (<br />)
        breaks: false,
        // Convert '\n' in paragraphs into <br>
        langPrefix: "language-",
        // CSS language prefix for fenced blocks
        linkify: false,
        // autoconvert URL-like texts to links
        // Enable some language-neutral replacements + quotes beautification
        typographer: false,
        // Double + single quotes replacement pairs, when typographer enabled,
        // and smartquotes on. Could be either a String or an Array.
        //
        // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
        // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
        quotes: "“”‘’",
        /* “”‘’ */
        // Highlighter function. Should return escaped HTML,
        // or '' if the source string is not changed and should be escaped externaly.
        // If result starts with <pre... internal wrapper is skipped.
        //
        // function (/*str, lang*/) { return ''; }
        //
        highlight: null,
        maxNesting: 20
        // Internal protection, recursion limit
      },
      components: {
        core: {
          rules: [
            "normalize",
            "block",
            "inline"
          ]
        },
        block: {
          rules: [
            "paragraph"
          ]
        },
        inline: {
          rules: [
            "text"
          ],
          rules2: [
            "balance_pairs",
            "text_collapse"
          ]
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/presets/commonmark.js
var require_commonmark = __commonJS({
  "node_modules/markdown-it/lib/presets/commonmark.js"(exports, module) {
    "use strict";
    module.exports = {
      options: {
        html: true,
        // Enable HTML tags in source
        xhtmlOut: true,
        // Use '/' to close single tags (<br />)
        breaks: false,
        // Convert '\n' in paragraphs into <br>
        langPrefix: "language-",
        // CSS language prefix for fenced blocks
        linkify: false,
        // autoconvert URL-like texts to links
        // Enable some language-neutral replacements + quotes beautification
        typographer: false,
        // Double + single quotes replacement pairs, when typographer enabled,
        // and smartquotes on. Could be either a String or an Array.
        //
        // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
        // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
        quotes: "“”‘’",
        /* “”‘’ */
        // Highlighter function. Should return escaped HTML,
        // or '' if the source string is not changed and should be escaped externaly.
        // If result starts with <pre... internal wrapper is skipped.
        //
        // function (/*str, lang*/) { return ''; }
        //
        highlight: null,
        maxNesting: 20
        // Internal protection, recursion limit
      },
      components: {
        core: {
          rules: [
            "normalize",
            "block",
            "inline"
          ]
        },
        block: {
          rules: [
            "blockquote",
            "code",
            "fence",
            "heading",
            "hr",
            "html_block",
            "lheading",
            "list",
            "reference",
            "paragraph"
          ]
        },
        inline: {
          rules: [
            "autolink",
            "backticks",
            "emphasis",
            "entity",
            "escape",
            "html_inline",
            "image",
            "link",
            "newline",
            "text"
          ],
          rules2: [
            "balance_pairs",
            "emphasis",
            "text_collapse"
          ]
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/index.js
var require_lib = __commonJS({
  "node_modules/markdown-it/lib/index.js"(exports, module) {
    "use strict";
    var utils = require_utils();
    var helpers = require_helpers();
    var Renderer = require_renderer();
    var ParserCore = require_parser_core();
    var ParserBlock = require_parser_block();
    var ParserInline = require_parser_inline();
    var LinkifyIt = require_linkify_it();
    var mdurl = require_mdurl();
    var punycode2 = (init_punycode_es6(), __toCommonJS(punycode_es6_exports));
    var config = {
      default: require_default(),
      zero: require_zero(),
      commonmark: require_commonmark()
    };
    var BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;
    var GOOD_DATA_RE = /^data:image\/(gif|png|jpeg|webp);/;
    function validateLink(url) {
      var str = url.trim().toLowerCase();
      return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;
    }
    var RECODE_HOSTNAME_FOR = ["http:", "https:", "mailto:"];
    function normalizeLink(url) {
      var parsed = mdurl.parse(url, true);
      if (parsed.hostname) {
        if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
          try {
            parsed.hostname = punycode2.toASCII(parsed.hostname);
          } catch (er2) {
          }
        }
      }
      return mdurl.encode(mdurl.format(parsed));
    }
    function normalizeLinkText(url) {
      var parsed = mdurl.parse(url, true);
      if (parsed.hostname) {
        if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
          try {
            parsed.hostname = punycode2.toUnicode(parsed.hostname);
          } catch (er2) {
          }
        }
      }
      return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + "%");
    }
    function MarkdownIt(presetName, options) {
      if (!(this instanceof MarkdownIt)) {
        return new MarkdownIt(presetName, options);
      }
      if (!options) {
        if (!utils.isString(presetName)) {
          options = presetName || {};
          presetName = "default";
        }
      }
      this.inline = new ParserInline();
      this.block = new ParserBlock();
      this.core = new ParserCore();
      this.renderer = new Renderer();
      this.linkify = new LinkifyIt();
      this.validateLink = validateLink;
      this.normalizeLink = normalizeLink;
      this.normalizeLinkText = normalizeLinkText;
      this.utils = utils;
      this.helpers = utils.assign({}, helpers);
      this.options = {};
      this.configure(presetName);
      if (options) {
        this.set(options);
      }
    }
    MarkdownIt.prototype.set = function(options) {
      utils.assign(this.options, options);
      return this;
    };
    MarkdownIt.prototype.configure = function(presets) {
      var self = this, presetName;
      if (utils.isString(presets)) {
        presetName = presets;
        presets = config[presetName];
        if (!presets) {
          throw new Error('Wrong `markdown-it` preset "' + presetName + '", check name');
        }
      }
      if (!presets) {
        throw new Error("Wrong `markdown-it` preset, can't be empty");
      }
      if (presets.options) {
        self.set(presets.options);
      }
      if (presets.components) {
        Object.keys(presets.components).forEach(function(name) {
          if (presets.components[name].rules) {
            self[name].ruler.enableOnly(presets.components[name].rules);
          }
          if (presets.components[name].rules2) {
            self[name].ruler2.enableOnly(presets.components[name].rules2);
          }
        });
      }
      return this;
    };
    MarkdownIt.prototype.enable = function(list, ignoreInvalid) {
      var result = [];
      if (!Array.isArray(list)) {
        list = [list];
      }
      ["core", "block", "inline"].forEach(function(chain) {
        result = result.concat(this[chain].ruler.enable(list, true));
      }, this);
      result = result.concat(this.inline.ruler2.enable(list, true));
      var missed = list.filter(function(name) {
        return result.indexOf(name) < 0;
      });
      if (missed.length && !ignoreInvalid) {
        throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + missed);
      }
      return this;
    };
    MarkdownIt.prototype.disable = function(list, ignoreInvalid) {
      var result = [];
      if (!Array.isArray(list)) {
        list = [list];
      }
      ["core", "block", "inline"].forEach(function(chain) {
        result = result.concat(this[chain].ruler.disable(list, true));
      }, this);
      result = result.concat(this.inline.ruler2.disable(list, true));
      var missed = list.filter(function(name) {
        return result.indexOf(name) < 0;
      });
      if (missed.length && !ignoreInvalid) {
        throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + missed);
      }
      return this;
    };
    MarkdownIt.prototype.use = function(plugin) {
      var args = [this].concat(Array.prototype.slice.call(arguments, 1));
      plugin.apply(plugin, args);
      return this;
    };
    MarkdownIt.prototype.parse = function(src, env2) {
      if (typeof src !== "string") {
        throw new Error("Input data should be a String");
      }
      var state = new this.core.State(src, this, env2);
      this.core.process(state);
      return state.tokens;
    };
    MarkdownIt.prototype.render = function(src, env2) {
      env2 = env2 || {};
      return this.renderer.render(this.parse(src, env2), this.options, env2);
    };
    MarkdownIt.prototype.parseInline = function(src, env2) {
      var state = new this.core.State(src, this, env2);
      state.inlineMode = true;
      this.core.process(state);
      return state.tokens;
    };
    MarkdownIt.prototype.renderInline = function(src, env2) {
      env2 = env2 || {};
      return this.renderer.render(this.parseInline(src, env2), this.options, env2);
    };
    module.exports = MarkdownIt;
  }
});

// node_modules/markdown-it/index.js
var require_markdown_it = __commonJS({
  "node_modules/markdown-it/index.js"(exports, module) {
    "use strict";
    module.exports = require_lib();
  }
});

// node_modules/@emotion/memoize/dist/memoize.browser.esm.js
function memoize(fn) {
  var cache = {};
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var memoize_browser_esm_default;
var init_memoize_browser_esm = __esm({
  "node_modules/@emotion/memoize/dist/memoize.browser.esm.js"() {
    memoize_browser_esm_default = memoize;
  }
});

// node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js
var is_prop_valid_browser_esm_exports = {};
__export(is_prop_valid_browser_esm_exports, {
  default: () => is_prop_valid_browser_esm_default
});
var reactPropsRegex, index, is_prop_valid_browser_esm_default;
var init_is_prop_valid_browser_esm = __esm({
  "node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js"() {
    init_memoize_browser_esm();
    reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
    index = memoize_browser_esm_default(
      function(prop) {
        return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      }
      /* Z+1 */
    );
    is_prop_valid_browser_esm_default = index;
  }
});

// node_modules/@graphiql/react/dist/index.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var a14 = __toESM(require_react(), 1);
var import_react97 = __toESM(require_react(), 1);
var import_set_value = __toESM(require_set_value(), 1);
var import_copy_to_clipboard = __toESM(require_copy_to_clipboard(), 1);

// node_modules/@radix-ui/react-dialog/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var $5d3850c4d0b4e6c7$var$DIALOG_NAME = "Dialog";
var [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($5d3850c4d0b4e6c7$var$DIALOG_NAME);
var [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);
var $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = (props) => {
  const { __scopeDialog, children, open: openProp, defaultOpen, onOpenChange, modal = true } = props;
  const triggerRef = (0, import_react.useRef)(null);
  const contentRef = (0, import_react.useRef)(null);
  const [open = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogProvider, {
    scope: __scopeDialog,
    triggerRef,
    contentRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    titleId: $1746a345f3d73bb7$export$f680877a34711e37(),
    descriptionId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, children);
};
Object.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {
  displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME
});
var $5d3850c4d0b4e6c7$var$TRIGGER_NAME = "DialogTrigger";
var $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...triggerProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);
  const composedTriggerRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.triggerRef);
  return (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    "aria-haspopup": "dialog",
    "aria-expanded": context.open,
    "aria-controls": context.contentId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, triggerProps, {
    ref: composedTriggerRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {
  displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME
});
var $5d3850c4d0b4e6c7$var$PORTAL_NAME = "DialogPortal";
var [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {
  forceMount: void 0
});
var $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = (props) => {
  const { __scopeDialog, forceMount, children, container } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);
  return (0, import_react.createElement)($5d3850c4d0b4e6c7$var$PortalProvider, {
    scope: __scopeDialog,
    forceMount
  }, import_react.Children.map(
    children,
    (child) => (0, import_react.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
      present: forceMount || context.open
    }, (0, import_react.createElement)($f1701beae083dbae$export$602eac185826482c, {
      asChild: true,
      container
    }, child))
  ));
};
Object.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {
  displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME
});
var $5d3850c4d0b4e6c7$var$OVERLAY_NAME = "DialogOverlay";
var $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = (0, import_react.forwardRef)((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  return context.modal ? (0, import_react.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogOverlayImpl, _extends({}, overlayProps, {
    ref: forwardedRef
  }))) : null;
});
Object.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {
  displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME
});
var $5d3850c4d0b4e6c7$var$DialogOverlayImpl = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);
  return (
    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
    // ie. when `Overlay` and `Content` are siblings
    (0, import_react.createElement)(Combination_default, {
      as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
      allowPinchZoom: true,
      shards: [
        context.contentRef
      ]
    }, (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
      "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
    }, overlayProps, {
      ref: forwardedRef,
      style: {
        pointerEvents: "auto",
        ...overlayProps.style
      }
    })))
  );
});
var $5d3850c4d0b4e6c7$var$CONTENT_NAME = "DialogContent";
var $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = (0, import_react.forwardRef)((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  return (0, import_react.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.modal ? (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogContentModal, _extends({}, contentProps, {
    ref: forwardedRef
  })) : (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogContentNonModal, _extends({}, contentProps, {
    ref: forwardedRef
  })));
});
Object.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {
  displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME
});
var $5d3850c4d0b4e6c7$var$DialogContentModal = (0, import_react.forwardRef)((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const contentRef = (0, import_react.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.contentRef, contentRef);
  (0, import_react.useEffect)(() => {
    const content = contentRef.current;
    if (content)
      return hideOthers(content);
  }, []);
  return (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: true,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      event.preventDefault();
      (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownOutside, (event) => {
      const originalEvent = event.detail.originalEvent;
      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      if (isRightClick)
        event.preventDefault();
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault()
    )
  }));
});
var $5d3850c4d0b4e6c7$var$DialogContentNonModal = (0, import_react.forwardRef)((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const hasInteractedOutsideRef = (0, import_react.useRef)(false);
  const hasPointerDownOutsideRef = (0, import_react.useRef)(false);
  return (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends({}, props, {
    ref: forwardedRef,
    trapFocus: false,
    disableOutsidePointerEvents: false,
    onCloseAutoFocus: (event) => {
      var _props$onCloseAutoFoc;
      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);
      if (!event.defaultPrevented) {
        var _context$triggerRef$c2;
        if (!hasInteractedOutsideRef.current)
          (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus();
        event.preventDefault();
      }
      hasInteractedOutsideRef.current = false;
      hasPointerDownOutsideRef.current = false;
    },
    onInteractOutside: (event) => {
      var _props$onInteractOuts, _context$triggerRef$c3;
      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);
      if (!event.defaultPrevented) {
        hasInteractedOutsideRef.current = true;
        if (event.detail.originalEvent.type === "pointerdown")
          hasPointerDownOutsideRef.current = true;
      }
      const target = event.target;
      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);
      if (targetIsTrigger)
        event.preventDefault();
      if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current)
        event.preventDefault();
    }
  }));
});
var $5d3850c4d0b4e6c7$var$DialogContentImpl = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);
  const contentRef = (0, import_react.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef);
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  return (0, import_react.createElement)(import_react.Fragment, null, (0, import_react.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: true,
    loop: true,
    trapped: trapFocus,
    onMountAutoFocus: onOpenAutoFocus,
    onUnmountAutoFocus: onCloseAutoFocus
  }, (0, import_react.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, _extends({
    role: "dialog",
    id: context.contentId,
    "aria-describedby": context.descriptionId,
    "aria-labelledby": context.titleId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, contentProps, {
    ref: composedRefs,
    onDismiss: () => context.onOpenChange(false)
  }))), false);
});
var $5d3850c4d0b4e6c7$var$TITLE_NAME = "DialogTitle";
var $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...titleProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);
  return (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.h2, _extends({
    id: context.titleId
  }, titleProps, {
    ref: forwardedRef
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {
  displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME
});
var $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = "DialogDescription";
var $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...descriptionProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);
  return (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.p, _extends({
    id: context.descriptionId
  }, descriptionProps, {
    ref: forwardedRef
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {
  displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME
});
var $5d3850c4d0b4e6c7$var$CLOSE_NAME = "DialogClose";
var $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...closeProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);
  return (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onClick,
      () => context.onOpenChange(false)
    )
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {
  displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME
});
function $5d3850c4d0b4e6c7$var$getState(open) {
  return open ? "open" : "closed";
}
var $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = "DialogTitleWarning";
var [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $c512c27ab02ef895$export$fd42f52fd3ae1109($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {
  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,
  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,
  docsSlug: "dialog"
});
var $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;
var $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;
var $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;
var $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;
var $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;
var $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;
var $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;
var $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;

// node_modules/@radix-ui/react-visually-hidden/dist/index.mjs
var import_react2 = __toESM(require_react(), 1);
var $ea1ef594cf570d83$var$NAME = "VisuallyHidden";
var $ea1ef594cf570d83$export$439d29a4e110a164 = (0, import_react2.forwardRef)((props, forwardedRef) => {
  return (0, import_react2.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, props, {
    ref: forwardedRef,
    style: {
      // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
      position: "absolute",
      border: 0,
      width: 1,
      height: 1,
      padding: 0,
      margin: -1,
      overflow: "hidden",
      clip: "rect(0, 0, 0, 0)",
      whiteSpace: "nowrap",
      wordWrap: "normal",
      ...props.style
    }
  }));
});
Object.assign($ea1ef594cf570d83$export$439d29a4e110a164, {
  displayName: $ea1ef594cf570d83$var$NAME
});
var $ea1ef594cf570d83$export$be92b6f5f03c0fe9 = $ea1ef594cf570d83$export$439d29a4e110a164;

// node_modules/@graphiql/react/dist/index.mjs
var import_markdown_it = __toESM(require_markdown_it(), 1);

// node_modules/framer-motion/dist/es/motion/index.mjs
var React2 = __toESM(require_react(), 1);
var import_react18 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/motion/features/use-features.mjs
var React = __toESM(require_react(), 1);
var import_react4 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/process.mjs
var defaultEnvironment = "production";
var env = typeof process === "undefined" || process.env === void 0 ? defaultEnvironment : "development";

// node_modules/framer-motion/dist/es/motion/features/definitions.mjs
var createDefinition = function(propNames) {
  return {
    isEnabled: function(props) {
      return propNames.some(function(name) {
        return !!props[name];
      });
    }
  };
};
var featureDefinitions = {
  measureLayout: createDefinition(["layout", "layoutId", "drag"]),
  animation: createDefinition([
    "animate",
    "exit",
    "variants",
    "whileHover",
    "whileTap",
    "whileFocus",
    "whileDrag",
    "whileInView"
  ]),
  exit: createDefinition(["exit"]),
  drag: createDefinition(["drag", "dragControls"]),
  focus: createDefinition(["whileFocus"]),
  hover: createDefinition(["whileHover", "onHoverStart", "onHoverEnd"]),
  tap: createDefinition(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
  pan: createDefinition([
    "onPan",
    "onPanStart",
    "onPanSessionStart",
    "onPanEnd"
  ]),
  inView: createDefinition([
    "whileInView",
    "onViewportEnter",
    "onViewportLeave"
  ])
};
function loadFeatures(features) {
  for (var key in features) {
    if (features[key] === null)
      continue;
    if (key === "projectionNodeConstructor") {
      featureDefinitions.projectionNodeConstructor = features[key];
    } else {
      featureDefinitions[key].Component = features[key];
    }
  }
}

// node_modules/hey-listen/dist/hey-listen.es.js
var warning = function() {
};
var invariant = function() {
};
if (true) {
  warning = function(check, message) {
    if (!check && typeof console !== "undefined") {
      console.warn(message);
    }
  };
  invariant = function(check, message) {
    if (!check) {
      throw new Error(message);
    }
  };
}

// node_modules/framer-motion/dist/es/context/LazyContext.mjs
var import_react3 = __toESM(require_react(), 1);
var LazyContext = (0, import_react3.createContext)({ strict: false });

// node_modules/framer-motion/dist/es/motion/features/use-features.mjs
var featureNames = Object.keys(featureDefinitions);
var numFeatures = featureNames.length;
function useFeatures(props, visualElement2, preloadedFeatures) {
  var features = [];
  var lazyContext = (0, import_react4.useContext)(LazyContext);
  if (!visualElement2)
    return null;
  if (env !== "production" && preloadedFeatures && lazyContext.strict) {
    invariant(false, "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.");
  }
  for (var i10 = 0; i10 < numFeatures; i10++) {
    var name_1 = featureNames[i10];
    var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;
    if (isEnabled(props) && Component) {
      features.push(React.createElement(Component, __assign({ key: name_1 }, props, { visualElement: visualElement2 })));
    }
  }
  return features;
}

// node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react5 = __toESM(require_react(), 1);
var MotionConfigContext = (0, import_react5.createContext)({
  transformPagePoint: function(p10) {
    return p10;
  },
  isStatic: false,
  reducedMotion: "never"
});

// node_modules/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react6 = __toESM(require_react(), 1);
var MotionContext = (0, import_react6.createContext)({});
function useVisualElementContext() {
  return (0, import_react6.useContext)(MotionContext).visualElement;
}

// node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
var import_react10 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/context/PresenceContext.mjs
var import_react7 = __toESM(require_react(), 1);
var PresenceContext = (0, import_react7.createContext)(null);

// node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react8 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser = typeof document !== "undefined";

// node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var useIsomorphicLayoutEffect = isBrowser ? import_react8.useLayoutEffect : import_react8.useEffect;

// node_modules/framer-motion/dist/es/utils/use-reduced-motion.mjs
var import_react9 = __toESM(require_react(), 1);
var prefersReducedMotion = { current: null };
var hasDetected = false;
function initPrefersReducedMotion() {
  hasDetected = true;
  if (!isBrowser)
    return;
  if (window.matchMedia) {
    var motionMediaQuery_1 = window.matchMedia("(prefers-reduced-motion)");
    var setReducedMotionPreferences = function() {
      return prefersReducedMotion.current = motionMediaQuery_1.matches;
    };
    motionMediaQuery_1.addListener(setReducedMotionPreferences);
    setReducedMotionPreferences();
  } else {
    prefersReducedMotion.current = false;
  }
}
function useReducedMotion() {
  !hasDetected && initPrefersReducedMotion();
  var _a = __read((0, import_react9.useState)(prefersReducedMotion.current), 1), shouldReduceMotion = _a[0];
  return shouldReduceMotion;
}
function useReducedMotionConfig() {
  var reducedMotionPreference = useReducedMotion();
  var reducedMotion = (0, import_react9.useContext)(MotionConfigContext).reducedMotion;
  if (reducedMotion === "never") {
    return false;
  } else if (reducedMotion === "always") {
    return true;
  } else {
    return reducedMotionPreference;
  }
}

// node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement(Component, visualState, props, createVisualElement) {
  var lazyContext = (0, import_react10.useContext)(LazyContext);
  var parent = useVisualElementContext();
  var presenceContext = (0, import_react10.useContext)(PresenceContext);
  var shouldReduceMotion = useReducedMotionConfig();
  var visualElementRef = (0, import_react10.useRef)(void 0);
  if (!createVisualElement)
    createVisualElement = lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component, {
      visualState,
      parent,
      props,
      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,
      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,
      shouldReduceMotion
    });
  }
  var visualElement2 = visualElementRef.current;
  useIsomorphicLayoutEffect(function() {
    visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
  });
  (0, import_react10.useEffect)(function() {
    var _a;
    (_a = visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();
  });
  useIsomorphicLayoutEffect(function() {
    return function() {
      return visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.notifyUnmount();
    };
  }, []);
  return visualElement2;
}

// node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
var import_react11 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject(ref) {
  return typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}

// node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef(visualState, visualElement2, externalRef) {
  return (0, import_react11.useCallback)(
    function(instance) {
      var _a;
      instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));
      if (visualElement2) {
        instance ? visualElement2.mount(instance) : visualElement2.unmount();
      }
      if (externalRef) {
        if (typeof externalRef === "function") {
          externalRef(instance);
        } else if (isRefObject(externalRef)) {
          externalRef.current = instance;
        }
      }
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement2]
  );
}

// node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
var import_react12 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/render/utils/variants.mjs
function isVariantLabels(v5) {
  return Array.isArray(v5);
}
function isVariantLabel(v5) {
  return typeof v5 === "string" || isVariantLabels(v5);
}
function getCurrent(visualElement2) {
  var current = {};
  visualElement2.forEachValue(function(value, key) {
    return current[key] = value.get();
  });
  return current;
}
function getVelocity(visualElement2) {
  var velocity = {};
  visualElement2.forEachValue(function(value, key) {
    return velocity[key] = value.getVelocity();
  });
  return velocity;
}
function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {
  var _a;
  if (currentValues === void 0) {
    currentValues = {};
  }
  if (currentVelocity === void 0) {
    currentVelocity = {};
  }
  if (typeof definition === "function") {
    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
  }
  if (typeof definition === "string") {
    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];
  }
  if (typeof definition === "function") {
    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
  }
  return definition;
}
function resolveVariant(visualElement2, definition, custom) {
  var props = visualElement2.getProps();
  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement2), getVelocity(visualElement2));
}
function checkIfControllingVariants(props) {
  var _a;
  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === "function" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);
}
function checkIfVariantNode(props) {
  return Boolean(checkIfControllingVariants(props) || props.variants);
}

// node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants(props, context) {
  if (checkIfControllingVariants(props)) {
    var initial = props.initial, animate4 = props.animate;
    return {
      initial: initial === false || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate4) ? animate4 : void 0
    };
  }
  return props.inherit !== false ? context : {};
}

// node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext(props) {
  var _a = getCurrentTreeVariants(props, (0, import_react12.useContext)(MotionContext)), initial = _a.initial, animate4 = _a.animate;
  return (0, import_react12.useMemo)(function() {
    return { initial, animate: animate4 };
  }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate4)]);
}
function variantLabelsAsDependency(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}

// node_modules/framer-motion/dist/es/utils/use-constant.mjs
var import_react13 = __toESM(require_react(), 1);
function useConstant(init) {
  var ref = (0, import_react13.useRef)(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}

// node_modules/framer-motion/dist/es/projection/node/state.mjs
var globalProjectionState = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: true,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: false
};

// node_modules/framer-motion/dist/es/projection/node/id.mjs
var id = 1;
function useProjectionId() {
  return useConstant(function() {
    if (globalProjectionState.hasEverUpdated) {
      return id++;
    }
  });
}

// node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react14 = __toESM(require_react(), 1);
var LayoutGroupContext = (0, import_react14.createContext)({});

// node_modules/framer-motion/dist/es/motion/features/use-projection.mjs
var import_react16 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react15 = __toESM(require_react(), 1);
var SwitchLayoutGroupContext = (0, import_react15.createContext)({});

// node_modules/framer-motion/dist/es/motion/features/use-projection.mjs
function useProjection(projectionId, _a, visualElement2, ProjectionNodeConstructor) {
  var _b;
  var layoutId = _a.layoutId, layout = _a.layout, drag2 = _a.drag, dragConstraints = _a.dragConstraints, layoutScroll = _a.layoutScroll;
  var initialPromotionConfig = (0, import_react16.useContext)(SwitchLayoutGroupContext);
  if (!ProjectionNodeConstructor || !visualElement2 || (visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.projection)) {
    return;
  }
  visualElement2.projection = new ProjectionNodeConstructor(projectionId, visualElement2.getLatestValues(), (_b = visualElement2.parent) === null || _b === void 0 ? void 0 : _b.projection);
  visualElement2.projection.setOptions({
    layoutId,
    layout,
    alwaysMeasureLayout: Boolean(drag2) || dragConstraints && isRefObject(dragConstraints),
    visualElement: visualElement2,
    scheduleRender: function() {
      return visualElement2.scheduleRender();
    },
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof layout === "string" ? layout : "both",
    initialPromotionConfig,
    layoutScroll
  });
}

// node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs
var import_react17 = __toESM(require_react(), 1);
var VisualElementHandler = (
  /** @class */
  function(_super) {
    __extends(VisualElementHandler2, _super);
    function VisualElementHandler2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    VisualElementHandler2.prototype.getSnapshotBeforeUpdate = function() {
      this.updateProps();
      return null;
    };
    VisualElementHandler2.prototype.componentDidUpdate = function() {
    };
    VisualElementHandler2.prototype.updateProps = function() {
      var _a = this.props, visualElement2 = _a.visualElement, props = _a.props;
      if (visualElement2)
        visualElement2.setProps(props);
    };
    VisualElementHandler2.prototype.render = function() {
      return this.props.children;
    };
    return VisualElementHandler2;
  }(import_react17.default.Component)
);

// node_modules/framer-motion/dist/es/motion/index.mjs
function createMotionComponent(_a) {
  var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, projectionNodeConstructor = _a.projectionNodeConstructor, useRender = _a.useRender, useVisualState2 = _a.useVisualState, Component = _a.Component;
  preloadedFeatures && loadFeatures(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    var layoutId = useLayoutId(props);
    props = __assign(__assign({}, props), { layoutId });
    var config = (0, import_react18.useContext)(MotionConfigContext);
    var features = null;
    var context = useCreateMotionContext(props);
    var projectionId = config.isStatic ? void 0 : useProjectionId();
    var visualState = useVisualState2(props, config.isStatic);
    if (!config.isStatic && isBrowser) {
      context.visualElement = useVisualElement(Component, visualState, __assign(__assign({}, config), props), createVisualElement);
      useProjection(projectionId, props, context.visualElement, projectionNodeConstructor || featureDefinitions.projectionNodeConstructor);
      features = useFeatures(props, context.visualElement, preloadedFeatures);
    }
    return React2.createElement(
      VisualElementHandler,
      { visualElement: context.visualElement, props: __assign(__assign({}, config), props) },
      features,
      React2.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))
    );
  }
  return (0, import_react18.forwardRef)(MotionComponent);
}
function useLayoutId(_a) {
  var _b;
  var layoutId = _a.layoutId;
  var layoutGroupId = (_b = (0, import_react18.useContext)(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}

// node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs
function createMotionProxy(createConfig) {
  function custom(Component, customMotionComponentConfig) {
    if (customMotionComponentConfig === void 0) {
      customMotionComponentConfig = {};
    }
    return createMotionComponent(createConfig(Component, customMotionComponentConfig));
  }
  if (typeof Proxy === "undefined") {
    return custom;
  }
  var componentCache = /* @__PURE__ */ new Map();
  return new Proxy(custom, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: function(_target, key) {
      if (!componentCache.has(key)) {
        componentCache.set(key, custom(key));
      }
      return componentCache.get(key);
    }
  });
}

// node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "svg",
  "switch",
  "symbol",
  "text",
  "tspan",
  "use",
  "view"
];

// node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent(Component) {
  if (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component !== "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component.includes("-")
  ) {
    return false;
  } else if (
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    lowercaseSVGElements.indexOf(Component) > -1 || /**
     * If it contains a capital letter, it's an SVG component
     */
    /[A-Z]/.test(Component)
  ) {
    return true;
  }
  return false;
}

// node_modules/framer-motion/dist/es/render/dom/use-render.mjs
var import_react21 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/render/html/use-props.mjs
var import_react19 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs
var scaleCorrectors = {};
function addScaleCorrector(correctors) {
  Object.assign(scaleCorrectors, correctors);
}

// node_modules/framer-motion/dist/es/render/html/utils/transform.mjs
var transformAxes = ["", "X", "Y", "Z"];
var order = ["translate", "scale", "rotate", "skew"];
var transformProps = ["transformPerspective", "x", "y", "z"];
order.forEach(function(operationKey) {
  return transformAxes.forEach(function(axesKey) {
    return transformProps.push(operationKey + axesKey);
  });
});
function sortTransformProps(a15, b7) {
  return transformProps.indexOf(a15) - transformProps.indexOf(b7);
}
var transformPropSet = new Set(transformProps);
function isTransformProp(key) {
  return transformPropSet.has(key);
}
var transformOriginProps = /* @__PURE__ */ new Set(["originX", "originY", "originZ"]);
function isTransformOriginProp(key) {
  return transformOriginProps.has(key);
}

// node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue(key, _a) {
  var layout = _a.layout, layoutId = _a.layoutId;
  return isTransformProp(key) || isTransformOriginProp(key) || (layout || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}

// node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue = function(value) {
  return Boolean(value !== null && typeof value === "object" && value.getVelocity);
};

// node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs
var translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
};
function buildTransform(_a, _b, transformIsDefault, transformTemplate) {
  var transform2 = _a.transform, transformKeys2 = _a.transformKeys;
  var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;
  var transformString = "";
  transformKeys2.sort(sortTransformProps);
  var transformHasZ = false;
  var numTransformKeys = transformKeys2.length;
  for (var i10 = 0; i10 < numTransformKeys; i10++) {
    var key = transformKeys2[i10];
    transformString += "".concat(translateAlias[key] || key, "(").concat(transform2[key], ") ");
    if (key === "z")
      transformHasZ = true;
  }
  if (!transformHasZ && enableHardwareAcceleration) {
    transformString += "translateZ(0)";
  } else {
    transformString = transformString.trim();
  }
  if (transformTemplate) {
    transformString = transformTemplate(transform2, transformIsDefault ? "" : transformString);
  } else if (allowTransformNone && transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}
function buildTransformOrigin(_a) {
  var _b = _a.originX, originX = _b === void 0 ? "50%" : _b, _c = _a.originY, originY = _c === void 0 ? "50%" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;
  return "".concat(originX, " ").concat(originY, " ").concat(originZ);
}

// node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs
function isCSSVariable(key) {
  return key.startsWith("--");
}

// node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs
var getValueAsType = function(value, type) {
  return type && typeof value === "number" ? type.transform(value) : value;
};

// node_modules/style-value-types/dist/es/utils.mjs
var clamp = (min, max) => (v5) => Math.max(Math.min(v5, max), min);
var sanitize = (v5) => v5 % 1 ? Number(v5.toFixed(5)) : v5;
var floatRegex = /(-)?([\d]*\.?[\d])+/g;
var colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi;
var singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
function isString(v5) {
  return typeof v5 === "string";
}

// node_modules/style-value-types/dist/es/numbers/index.mjs
var number = {
  test: (v5) => typeof v5 === "number",
  parse: parseFloat,
  transform: (v5) => v5
};
var alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });
var scale = Object.assign(Object.assign({}, number), { default: 1 });

// node_modules/style-value-types/dist/es/numbers/units.mjs
var createUnitType = (unit) => ({
  test: (v5) => isString(v5) && v5.endsWith(unit) && v5.split(" ").length === 1,
  parse: parseFloat,
  transform: (v5) => `${v5}${unit}`
});
var degrees = createUnitType("deg");
var percent = createUnitType("%");
var px = createUnitType("px");
var vh = createUnitType("vh");
var vw = createUnitType("vw");
var progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v5) => percent.parse(v5) / 100, transform: (v5) => percent.transform(v5 * 100) });

// node_modules/style-value-types/dist/es/color/utils.mjs
var isColorString = (type, testProp) => (v5) => {
  return Boolean(isString(v5) && singleColorRegex.test(v5) && v5.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v5, testProp));
};
var splitColor = (aName, bName, cName) => (v5) => {
  if (!isString(v5))
    return v5;
  const [a15, b7, c16, alpha2] = v5.match(floatRegex);
  return {
    [aName]: parseFloat(a15),
    [bName]: parseFloat(b7),
    [cName]: parseFloat(c16),
    alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
  };
};

// node_modules/style-value-types/dist/es/color/hsla.mjs
var hsla = {
  test: isColorString("hsl", "hue"),
  parse: splitColor("hue", "saturation", "lightness"),
  transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
    return "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")";
  }
};

// node_modules/style-value-types/dist/es/color/rgba.mjs
var clampRgbUnit = clamp(0, 255);
var rgbUnit = Object.assign(Object.assign({}, number), { transform: (v5) => Math.round(clampRgbUnit(v5)) });
var rgba = {
  test: isColorString("rgb", "red"),
  parse: splitColor("red", "green", "blue"),
  transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// node_modules/style-value-types/dist/es/color/hex.mjs
function parseHex(v5) {
  let r10 = "";
  let g5 = "";
  let b7 = "";
  let a15 = "";
  if (v5.length > 5) {
    r10 = v5.substr(1, 2);
    g5 = v5.substr(3, 2);
    b7 = v5.substr(5, 2);
    a15 = v5.substr(7, 2);
  } else {
    r10 = v5.substr(1, 1);
    g5 = v5.substr(2, 1);
    b7 = v5.substr(3, 1);
    a15 = v5.substr(4, 1);
    r10 += r10;
    g5 += g5;
    b7 += b7;
    a15 += a15;
  }
  return {
    red: parseInt(r10, 16),
    green: parseInt(g5, 16),
    blue: parseInt(b7, 16),
    alpha: a15 ? parseInt(a15, 16) / 255 : 1
  };
}
var hex = {
  test: isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};

// node_modules/style-value-types/dist/es/color/index.mjs
var color = {
  test: (v5) => rgba.test(v5) || hex.test(v5) || hsla.test(v5),
  parse: (v5) => {
    if (rgba.test(v5)) {
      return rgba.parse(v5);
    } else if (hsla.test(v5)) {
      return hsla.parse(v5);
    } else {
      return hex.parse(v5);
    }
  },
  transform: (v5) => {
    return isString(v5) ? v5 : v5.hasOwnProperty("red") ? rgba.transform(v5) : hsla.transform(v5);
  }
};

// node_modules/style-value-types/dist/es/complex/index.mjs
var colorToken = "${c}";
var numberToken = "${n}";
function test(v5) {
  var _a, _b, _c, _d;
  return isNaN(v5) && isString(v5) && ((_b = (_a = v5.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v5.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;
}
function analyse(v5) {
  if (typeof v5 === "number")
    v5 = `${v5}`;
  const values = [];
  let numColors = 0;
  const colors = v5.match(colorRegex);
  if (colors) {
    numColors = colors.length;
    v5 = v5.replace(colorRegex, colorToken);
    values.push(...colors.map(color.parse));
  }
  const numbers = v5.match(floatRegex);
  if (numbers) {
    v5 = v5.replace(floatRegex, numberToken);
    values.push(...numbers.map(number.parse));
  }
  return { values, numColors, tokenised: v5 };
}
function parse2(v5) {
  return analyse(v5).values;
}
function createTransformer(v5) {
  const { values, numColors, tokenised } = analyse(v5);
  const numValues = values.length;
  return (v6) => {
    let output = tokenised;
    for (let i10 = 0; i10 < numValues; i10++) {
      output = output.replace(i10 < numColors ? colorToken : numberToken, i10 < numColors ? color.transform(v6[i10]) : sanitize(v6[i10]));
    }
    return output;
  };
}
var convertNumbersToZero = (v5) => typeof v5 === "number" ? 0 : v5;
function getAnimatableNone(v5) {
  const parsed = parse2(v5);
  const transformer = createTransformer(v5);
  return transformer(parsed.map(convertNumbersToZero));
}
var complex = { test, parse: parse2, createTransformer, getAnimatableNone };

// node_modules/style-value-types/dist/es/complex/filter.mjs
var maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v5) {
  let [name, value] = v5.slice(0, -1).split("(");
  if (name === "drop-shadow")
    return v5;
  const [number2] = value.match(floatRegex) || [];
  if (!number2)
    return v5;
  const unit = value.replace(number2, "");
  let defaultValue = maxDefaults.has(name) ? 1 : 0;
  if (number2 !== value)
    defaultValue *= 100;
  return name + "(" + defaultValue + unit + ")";
}
var functionRegex = /([a-z-]*)\(.*?\)/g;
var filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v5) => {
  const functions = v5.match(functionRegex);
  return functions ? functions.map(applyDefaultFilter).join(" ") : v5;
} });

// node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs
var int = __assign(__assign({}, number), { transform: Math.round });

// node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs
var numberValueTypes = {
  // Border props
  borderWidth: px,
  borderTopWidth: px,
  borderRightWidth: px,
  borderBottomWidth: px,
  borderLeftWidth: px,
  borderRadius: px,
  radius: px,
  borderTopLeftRadius: px,
  borderTopRightRadius: px,
  borderBottomRightRadius: px,
  borderBottomLeftRadius: px,
  // Positioning props
  width: px,
  maxWidth: px,
  height: px,
  maxHeight: px,
  size: px,
  top: px,
  right: px,
  bottom: px,
  left: px,
  // Spacing props
  padding: px,
  paddingTop: px,
  paddingRight: px,
  paddingBottom: px,
  paddingLeft: px,
  margin: px,
  marginTop: px,
  marginRight: px,
  marginBottom: px,
  marginLeft: px,
  // Transform props
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px,
  translateX: px,
  translateY: px,
  translateZ: px,
  x: px,
  y: px,
  z: px,
  perspective: px,
  transformPerspective: px,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px,
  // Misc
  zIndex: int,
  // SVG
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int
};

// node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles(state, latestValues, options, transformTemplate) {
  var _a;
  var style2 = state.style, vars = state.vars, transform2 = state.transform, transformKeys2 = state.transformKeys, transformOrigin = state.transformOrigin;
  transformKeys2.length = 0;
  var hasTransform2 = false;
  var hasTransformOrigin = false;
  var transformIsNone = true;
  for (var key in latestValues) {
    var value = latestValues[key];
    if (isCSSVariable(key)) {
      vars[key] = value;
      continue;
    }
    var valueType = numberValueTypes[key];
    var valueAsType = getValueAsType(value, valueType);
    if (isTransformProp(key)) {
      hasTransform2 = true;
      transform2[key] = valueAsType;
      transformKeys2.push(key);
      if (!transformIsNone)
        continue;
      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))
        transformIsNone = false;
    } else if (isTransformOriginProp(key)) {
      transformOrigin[key] = valueAsType;
      hasTransformOrigin = true;
    } else {
      style2[key] = valueAsType;
    }
  }
  if (hasTransform2) {
    style2.transform = buildTransform(state, options, transformIsNone, transformTemplate);
  } else if (transformTemplate) {
    style2.transform = transformTemplate({}, "");
  } else if (!latestValues.transform && style2.transform) {
    style2.transform = "none";
  }
  if (hasTransformOrigin) {
    style2.transformOrigin = buildTransformOrigin(transformOrigin);
  }
}

// node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState = function() {
  return {
    style: {},
    transform: {},
    transformKeys: [],
    transformOrigin: {},
    vars: {}
  };
};

// node_modules/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly(target, source, props) {
  for (var key in source) {
    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues(_a, visualState, isStatic) {
  var transformTemplate = _a.transformTemplate;
  return (0, import_react19.useMemo)(function() {
    var state = createHtmlRenderState();
    buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);
    var vars = state.vars, style2 = state.style;
    return __assign(__assign({}, vars), style2);
  }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
  var styleProp = props.style || {};
  var style2 = {};
  copyRawValuesOnly(style2, styleProp, props);
  Object.assign(style2, useInitialMotionValues(props, visualState, isStatic));
  if (props.transformValues) {
    style2 = props.transformValues(style2);
  }
  return style2;
}
function useHTMLProps(props, visualState, isStatic) {
  var htmlProps = {};
  var style2 = useStyle(props, visualState, isStatic);
  if (Boolean(props.drag) && props.dragListener !== false) {
    htmlProps.draggable = false;
    style2.userSelect = style2.WebkitUserSelect = style2.WebkitTouchCallout = "none";
    style2.touchAction = props.drag === true ? "none" : "pan-".concat(props.drag === "x" ? "y" : "x");
  }
  htmlProps.style = style2;
  return htmlProps;
}

// node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs
var validMotionProps = /* @__PURE__ */ new Set([
  "initial",
  "animate",
  "exit",
  "style",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "layout",
  "layoutId",
  "layoutDependency",
  "onLayoutAnimationStart",
  "onLayoutAnimationComplete",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "drag",
  "dragControls",
  "dragListener",
  "dragConstraints",
  "dragDirectionLock",
  "dragSnapToOrigin",
  "_dragX",
  "_dragY",
  "dragElastic",
  "dragMomentum",
  "dragPropagation",
  "dragTransition",
  "whileDrag",
  "onPan",
  "onPanStart",
  "onPanEnd",
  "onPanSessionStart",
  "onTap",
  "onTapStart",
  "onTapCancel",
  "onHoverStart",
  "onHoverEnd",
  "whileFocus",
  "whileTap",
  "whileHover",
  "whileInView",
  "onViewportEnter",
  "onViewportLeave",
  "viewport",
  "layoutScroll"
]);
function isValidMotionProp(key) {
  return validMotionProps.has(key);
}

// node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs
var shouldForward = function(key) {
  return !isValidMotionProp(key);
};
function loadExternalIsValidProp(isValidProp) {
  if (!isValidProp)
    return;
  shouldForward = function(key) {
    return key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
  };
}
try {
  loadExternalIsValidProp((init_is_prop_valid_browser_esm(), __toCommonJS(is_prop_valid_browser_esm_exports)).default);
} catch (_a) {
}
function filterProps(props, isDom, forwardMotionProps) {
  var filteredProps = {};
  for (var key in props) {
    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
    props["draggable"] && key.startsWith("onDrag")) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}

// node_modules/framer-motion/dist/es/render/svg/use-props.mjs
var import_react20 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs
function calcOrigin(origin, offset, size) {
  return typeof origin === "string" ? origin : px.transform(offset + size * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  var pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);
  var pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
  return "".concat(pxOriginX, " ").concat(pxOriginY);
}

// node_modules/framer-motion/dist/es/render/svg/utils/path.mjs
var dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
};
var camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, length2, spacing, offset, useDashCase) {
  if (spacing === void 0) {
    spacing = 1;
  }
  if (offset === void 0) {
    offset = 0;
  }
  if (useDashCase === void 0) {
    useDashCase = true;
  }
  attrs.pathLength = 1;
  var keys = useDashCase ? dashKeys : camelKeys;
  attrs[keys.offset] = px.transform(-offset);
  var pathLength = px.transform(length2);
  var pathSpacing = px.transform(spacing);
  attrs[keys.array] = "".concat(pathLength, " ").concat(pathSpacing);
}

// node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs(state, _a, options, transformTemplate) {
  var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, latest = __rest(_a, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
  buildHTMLStyles(state, latest, options, transformTemplate);
  state.attrs = state.style;
  state.style = {};
  var attrs = state.attrs, style2 = state.style, dimensions = state.dimensions;
  if (attrs.transform) {
    if (dimensions)
      style2.transform = attrs.transform;
    delete attrs.transform;
  }
  if (dimensions && (originX !== void 0 || originY !== void 0 || style2.transform)) {
    style2.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (pathLength !== void 0) {
    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
  }
}

// node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState = function() {
  return __assign(__assign({}, createHtmlRenderState()), { attrs: {} });
};

// node_modules/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps(props, visualState) {
  var visualProps = (0, import_react20.useMemo)(function() {
    var state = createSvgRenderState();
    buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);
    return __assign(__assign({}, state.attrs), { style: __assign({}, state.style) });
  }, [visualState]);
  if (props.style) {
    var rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props);
    visualProps.style = __assign(__assign({}, rawStyles), visualProps.style);
  }
  return visualProps;
}

// node_modules/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender(forwardMotionProps) {
  if (forwardMotionProps === void 0) {
    forwardMotionProps = false;
  }
  var useRender = function(Component, props, projectionId, ref, _a, isStatic) {
    var latestValues = _a.latestValues;
    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;
    var visualProps = useVisualProps(props, latestValues, isStatic);
    var filteredProps = filterProps(props, typeof Component === "string", forwardMotionProps);
    var elementProps = __assign(__assign(__assign({}, filteredProps), visualProps), { ref });
    if (projectionId) {
      elementProps["data-projection-id"] = projectionId;
    }
    return (0, import_react21.createElement)(Component, elementProps);
  };
  return useRender;
}

// node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;
var REPLACE_TEMPLATE = "$1-$2";
var camelToDash = function(str) {
  return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
};

// node_modules/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML(element, _a, styleProp, projection) {
  var style2 = _a.style, vars = _a.vars;
  Object.assign(element.style, style2, projection && projection.getProjectionStyles(styleProp));
  for (var key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}

// node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength"
]);

// node_modules/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (var key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
  }
}

// node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps(props) {
  var style2 = props.style;
  var newValues = {};
  for (var key in style2) {
    if (isMotionValue(style2[key]) || isForcedMotionValue(key, props)) {
      newValues[key] = style2[key];
    }
  }
  return newValues;
}

// node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps2(props) {
  var newValues = scrapeMotionValuesFromProps(props);
  for (var key in props) {
    if (isMotionValue(props[key])) {
      var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}

// node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
var import_react22 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls(v5) {
  return typeof v5 === "object" && typeof v5.start === "function";
}

// node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget = function(v5) {
  return Array.isArray(v5);
};

// node_modules/framer-motion/dist/es/utils/resolve-value.mjs
var isCustomValue = function(v5) {
  return Boolean(v5 && typeof v5 === "object" && v5.mix && v5.toValue);
};
var resolveFinalValueInKeyframes = function(v5) {
  return isKeyframesTarget(v5) ? v5[v5.length - 1] || 0 : v5;
};

// node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue(value) {
  var unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}

// node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState(_a, props, context, presenceContext) {
  var scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;
  var state = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps3),
    renderState: createRenderState()
  };
  if (onMount) {
    state.mount = function(instance) {
      return onMount(props, instance, state);
    };
  }
  return state;
}
var makeUseVisualState = function(config) {
  return function(props, isStatic) {
    var context = (0, import_react22.useContext)(MotionContext);
    var presenceContext = (0, import_react22.useContext)(PresenceContext);
    return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function() {
      return makeState(config, props, context, presenceContext);
    });
  };
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  var values = {};
  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;
  var motionValues = scrapeMotionValues(props);
  for (var key in motionValues) {
    values[key] = resolveMotionValue(motionValues[key]);
  }
  var initial = props.initial, animate4 = props.animate;
  var isControllingVariants = checkIfControllingVariants(props);
  var isVariantNode = checkIfVariantNode(props);
  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {
    initial !== null && initial !== void 0 ? initial : initial = context.initial;
    animate4 !== null && animate4 !== void 0 ? animate4 : animate4 = context.animate;
  }
  var initialAnimationIsBlocked = blockInitialAnimation || initial === false;
  var variantToSet = initialAnimationIsBlocked ? animate4 : initial;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls(variantToSet)) {
    var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
    list.forEach(function(definition) {
      var resolved = resolveVariantFromProps(props, definition);
      if (!resolved)
        return;
      var transitionEnd = resolved.transitionEnd;
      resolved.transition;
      var target = __rest(resolved, ["transitionEnd", "transition"]);
      for (var key2 in target) {
        var valueTarget = target[key2];
        if (Array.isArray(valueTarget)) {
          var index2 = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;
          valueTarget = valueTarget[index2];
        }
        if (valueTarget !== null) {
          values[key2] = valueTarget;
        }
      }
      for (var key2 in transitionEnd)
        values[key2] = transitionEnd[key2];
    });
  }
  return values;
}

// node_modules/framer-motion/dist/es/render/svg/config-motion.mjs
var svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,
    createRenderState: createSvgRenderState,
    onMount: function(props, instance, _a) {
      var renderState = _a.renderState, latestValues = _a.latestValues;
      try {
        renderState.dimensions = typeof instance.getBBox === "function" ? instance.getBBox() : instance.getBoundingClientRect();
      } catch (e6) {
        renderState.dimensions = {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        };
      }
      buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);
      renderSVG(instance, renderState);
    }
  })
};

// node_modules/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createHtmlRenderState
  })
};

// node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs
function createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement, projectionNodeConstructor) {
  var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;
  var baseConfig = isSVGComponent(Component) ? svgMotionConfig : htmlMotionConfig;
  return __assign(__assign({}, baseConfig), { preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement, projectionNodeConstructor, Component });
}

// node_modules/framer-motion/dist/es/render/utils/types.mjs
var AnimationType;
(function(AnimationType2) {
  AnimationType2["Animate"] = "animate";
  AnimationType2["Hover"] = "whileHover";
  AnimationType2["Tap"] = "whileTap";
  AnimationType2["Drag"] = "whileDrag";
  AnimationType2["Focus"] = "whileFocus";
  AnimationType2["InView"] = "whileInView";
  AnimationType2["Exit"] = "exit";
})(AnimationType || (AnimationType = {}));

// node_modules/framer-motion/dist/es/events/use-dom-event.mjs
var import_react23 = __toESM(require_react(), 1);
function addDomEvent(target, eventName, handler, options) {
  if (options === void 0) {
    options = { passive: true };
  }
  target.addEventListener(eventName, handler, options);
  return function() {
    return target.removeEventListener(eventName, handler);
  };
}
function useDomEvent(ref, eventName, handler, options) {
  (0, import_react23.useEffect)(function() {
    var element = ref.current;
    if (handler && element) {
      return addDomEvent(element, eventName, handler, options);
    }
  }, [ref, eventName, handler, options]);
}

// node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs
function useFocusGesture(_a) {
  var whileFocus = _a.whileFocus, visualElement2 = _a.visualElement;
  var onFocus = function() {
    var _a2;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, true);
  };
  var onBlur = function() {
    var _a2;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, false);
  };
  useDomEvent(visualElement2, "focus", whileFocus ? onFocus : void 0);
  useDomEvent(visualElement2, "blur", whileFocus ? onBlur : void 0);
}

// node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs
function isMouseEvent(event) {
  if (typeof PointerEvent !== "undefined" && event instanceof PointerEvent) {
    return !!(event.pointerType === "mouse");
  }
  return event instanceof MouseEvent;
}
function isTouchEvent(event) {
  var hasTouches = !!event.touches;
  return hasTouches;
}

// node_modules/framer-motion/dist/es/events/event-info.mjs
function filterPrimaryPointer(eventHandler) {
  return function(event) {
    var isMouseEvent2 = event instanceof MouseEvent;
    var isPrimaryPointer = !isMouseEvent2 || isMouseEvent2 && event.button === 0;
    if (isPrimaryPointer) {
      eventHandler(event);
    }
  };
}
var defaultPagePoint = { pageX: 0, pageY: 0 };
function pointFromTouch(e6, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  var primaryTouch = e6.touches[0] || e6.changedTouches[0];
  var point = primaryTouch || defaultPagePoint;
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function pointFromMouse(point, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function extractEventInfo(event, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)
  };
}
var wrapHandler = function(handler, shouldFilterPrimaryPointer) {
  if (shouldFilterPrimaryPointer === void 0) {
    shouldFilterPrimaryPointer = false;
  }
  var listener = function(event) {
    return handler(event, extractEventInfo(event));
  };
  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;
};

// node_modules/framer-motion/dist/es/events/utils.mjs
var supportsPointerEvents = function() {
  return isBrowser && window.onpointerdown === null;
};
var supportsTouchEvents = function() {
  return isBrowser && window.ontouchstart === null;
};
var supportsMouseEvents = function() {
  return isBrowser && window.onmousedown === null;
};

// node_modules/framer-motion/dist/es/events/use-pointer-event.mjs
var mouseEventNames = {
  pointerdown: "mousedown",
  pointermove: "mousemove",
  pointerup: "mouseup",
  pointercancel: "mousecancel",
  pointerover: "mouseover",
  pointerout: "mouseout",
  pointerenter: "mouseenter",
  pointerleave: "mouseleave"
};
var touchEventNames = {
  pointerdown: "touchstart",
  pointermove: "touchmove",
  pointerup: "touchend",
  pointercancel: "touchcancel"
};
function getPointerEventName(name) {
  if (supportsPointerEvents()) {
    return name;
  } else if (supportsTouchEvents()) {
    return touchEventNames[name];
  } else if (supportsMouseEvents()) {
    return mouseEventNames[name];
  }
  return name;
}
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === "pointerdown"), options);
}
function usePointerEvent(ref, eventName, handler, options) {
  return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === "pointerdown"), options);
}

// node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs
function createLock(name) {
  var lock = null;
  return function() {
    var openLock = function() {
      lock = null;
    };
    if (lock === null) {
      lock = name;
      return openLock;
    }
    return false;
  };
}
var globalHorizontalLock = createLock("dragHorizontal");
var globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag2) {
  var lock = false;
  if (drag2 === "y") {
    lock = globalVerticalLock();
  } else if (drag2 === "x") {
    lock = globalHorizontalLock();
  } else {
    var openHorizontal_1 = globalHorizontalLock();
    var openVertical_1 = globalVerticalLock();
    if (openHorizontal_1 && openVertical_1) {
      lock = function() {
        openHorizontal_1();
        openVertical_1();
      };
    } else {
      if (openHorizontal_1)
        openHorizontal_1();
      if (openVertical_1)
        openVertical_1();
    }
  }
  return lock;
}
function isDragActive() {
  var openGestureLock = getGlobalLock(true);
  if (!openGestureLock)
    return true;
  openGestureLock();
  return false;
}

// node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs
function createHoverEvent(visualElement2, isActive, callback) {
  return function(event, info) {
    var _a;
    if (!isMouseEvent(event) || isDragActive())
      return;
    (_a = visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);
    callback === null || callback === void 0 ? void 0 : callback(event, info);
  };
}
function useHoverGesture(_a) {
  var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement2 = _a.visualElement;
  usePointerEvent(visualElement2, "pointerenter", onHoverStart || whileHover ? createHoverEvent(visualElement2, true, onHoverStart) : void 0, { passive: !onHoverStart });
  usePointerEvent(visualElement2, "pointerleave", onHoverEnd || whileHover ? createHoverEvent(visualElement2, false, onHoverEnd) : void 0, { passive: !onHoverEnd });
}

// node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs
var import_react25 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild = function(parent, child) {
  if (!child) {
    return false;
  } else if (parent === child) {
    return true;
  } else {
    return isNodeOrChild(parent, child.parentElement);
  }
};

// node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs
var import_react24 = __toESM(require_react(), 1);
function useUnmountEffect(callback) {
  return (0, import_react24.useEffect)(function() {
    return function() {
      return callback();
    };
  }, []);
}

// node_modules/popmotion/dist/es/utils/clamp.mjs
var clamp2 = (min, max, v5) => Math.min(Math.max(v5, min), max);

// node_modules/popmotion/dist/es/animations/utils/find-spring.mjs
var safeMin = 1e-3;
var minDuration = 0.01;
var maxDuration = 10;
var minDamping = 0.05;
var maxDamping = 1;
function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
  let envelope;
  let derivative;
  warning(duration <= maxDuration * 1e3, "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp2(minDamping, maxDamping, dampingRatio);
  duration = clamp2(minDuration, maxDuration, duration / 1e3);
  if (dampingRatio < 1) {
    envelope = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const a15 = exponentialDecay - velocity;
      const b7 = calcAngularFreq(undampedFreq2, dampingRatio);
      const c16 = Math.exp(-delta);
      return safeMin - a15 / b7 * c16;
    };
    derivative = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const d14 = delta * velocity + velocity;
      const e6 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      const f13 = Math.exp(-delta);
      const g5 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
      const factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
      return factor * ((d14 - e6) * f13) / g5;
    };
  } else {
    envelope = (undampedFreq2) => {
      const a15 = Math.exp(-undampedFreq2 * duration);
      const b7 = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin + a15 * b7;
    };
    derivative = (undampedFreq2) => {
      const a15 = Math.exp(-undampedFreq2 * duration);
      const b7 = (velocity - undampedFreq2) * (duration * duration);
      return a15 * b7;
    };
  }
  const initialGuess = 5 / duration;
  const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  duration = duration * 1e3;
  if (isNaN(undampedFreq)) {
    return {
      stiffness: 100,
      damping: 10,
      duration
    };
  } else {
    const stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i10 = 1; i10 < rootIterations; i10++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

// node_modules/popmotion/dist/es/animations/generators/spring.mjs
var durationKeys = ["duration", "bounce"];
var physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys) {
  return keys.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = Object.assign({ velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: false }, options);
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    const derived = findSpring(options);
    springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0, mass: 1 });
    springOptions.isResolvedFromDuration = true;
  }
  return springOptions;
}
function spring(_a) {
  var { from = 0, to: to3 = 1, restSpeed = 2, restDelta } = _a, options = __rest(_a, ["from", "to", "restSpeed", "restDelta"]);
  const state = { done: false, value: from };
  let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration } = getSpringOptions(options);
  let resolveSpring = zero;
  let resolveVelocity = zero;
  function createSpring() {
    const initialVelocity = velocity ? -(velocity / 1e3) : 0;
    const initialDelta = to3 - from;
    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
    if (restDelta === void 0) {
      restDelta = Math.min(Math.abs(to3 - from) / 100, 0.4);
    }
    if (dampingRatio < 1) {
      const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
      resolveSpring = (t15) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t15);
        return to3 - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t15) + initialDelta * Math.cos(angularFreq * t15));
      };
      resolveVelocity = (t15) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t15);
        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq * t15) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq + initialDelta * Math.cos(angularFreq * t15)) - envelope * (Math.cos(angularFreq * t15) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq * initialDelta * Math.sin(angularFreq * t15));
      };
    } else if (dampingRatio === 1) {
      resolveSpring = (t15) => to3 - Math.exp(-undampedAngularFreq * t15) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t15);
    } else {
      const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
      resolveSpring = (t15) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t15);
        const freqForT = Math.min(dampedAngularFreq * t15, 300);
        return to3 - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
      };
    }
  }
  createSpring();
  return {
    next: (t15) => {
      const current = resolveSpring(t15);
      if (!isResolvedFromDuration) {
        const currentVelocity = resolveVelocity(t15) * 1e3;
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(to3 - current) <= restDelta;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state.done = t15 >= duration;
      }
      state.value = state.done ? to3 : current;
      return state;
    },
    flipTarget: () => {
      velocity = -velocity;
      [from, to3] = [to3, from];
      createSpring();
    }
  };
}
spring.needsInterpolation = (a15, b7) => typeof a15 === "string" || typeof b7 === "string";
var zero = (_t3) => 0;

// node_modules/popmotion/dist/es/utils/progress.mjs
var progress = (from, to3, value) => {
  const toFromDifference = to3 - from;
  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};

// node_modules/popmotion/dist/es/utils/mix.mjs
var mix = (from, to3, progress3) => -progress3 * from + progress3 * to3 + from;

// node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs
function hueToRgb(p10, q7, t15) {
  if (t15 < 0)
    t15 += 1;
  if (t15 > 1)
    t15 -= 1;
  if (t15 < 1 / 6)
    return p10 + (q7 - p10) * 6 * t15;
  if (t15 < 1 / 2)
    return q7;
  if (t15 < 2 / 3)
    return p10 + (q7 - p10) * (2 / 3 - t15) * 6;
  return p10;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha2 }) {
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  let red = 0;
  let green = 0;
  let blue = 0;
  if (!saturation) {
    red = green = blue = lightness;
  } else {
    const q7 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    const p10 = 2 * lightness - q7;
    red = hueToRgb(p10, q7, hue + 1 / 3);
    green = hueToRgb(p10, q7, hue);
    blue = hueToRgb(p10, q7, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha2
  };
}

// node_modules/popmotion/dist/es/utils/mix-color.mjs
var mixLinearColor = (from, to3, v5) => {
  const fromExpo = from * from;
  const toExpo = to3 * to3;
  return Math.sqrt(Math.max(0, v5 * (toExpo - fromExpo) + fromExpo));
};
var colorTypes = [hex, rgba, hsla];
var getColorType = (v5) => colorTypes.find((type) => type.test(v5));
var notAnimatable = (color2) => `'${color2}' is not an animatable color. Use the equivalent color code instead.`;
var mixColor = (from, to3) => {
  let fromColorType = getColorType(from);
  let toColorType = getColorType(to3);
  invariant(!!fromColorType, notAnimatable(from));
  invariant(!!toColorType, notAnimatable(to3));
  let fromColor = fromColorType.parse(from);
  let toColor = toColorType.parse(to3);
  if (fromColorType === hsla) {
    fromColor = hslaToRgba(fromColor);
    fromColorType = rgba;
  }
  if (toColorType === hsla) {
    toColor = hslaToRgba(toColor);
    toColorType = rgba;
  }
  const blended = Object.assign({}, fromColor);
  return (v5) => {
    for (const key in blended) {
      if (key !== "alpha") {
        blended[key] = mixLinearColor(fromColor[key], toColor[key], v5);
      }
    }
    blended.alpha = mix(fromColor.alpha, toColor.alpha, v5);
    return fromColorType.transform(blended);
  };
};

// node_modules/popmotion/dist/es/utils/inc.mjs
var isNum = (v5) => typeof v5 === "number";

// node_modules/popmotion/dist/es/utils/pipe.mjs
var combineFunctions = (a15, b7) => (v5) => b7(a15(v5));
var pipe = (...transformers) => transformers.reduce(combineFunctions);

// node_modules/popmotion/dist/es/utils/mix-complex.mjs
function getMixer(origin, target) {
  if (isNum(origin)) {
    return (v5) => mix(origin, target, v5);
  } else if (color.test(origin)) {
    return mixColor(origin, target);
  } else {
    return mixComplex(origin, target);
  }
}
var mixArray = (from, to3) => {
  const output = [...from];
  const numValues = output.length;
  const blendValue = from.map((fromThis, i10) => getMixer(fromThis, to3[i10]));
  return (v5) => {
    for (let i10 = 0; i10 < numValues; i10++) {
      output[i10] = blendValue[i10](v5);
    }
    return output;
  };
};
var mixObject = (origin, target) => {
  const output = Object.assign(Object.assign({}, origin), target);
  const blendValue = {};
  for (const key in output) {
    if (origin[key] !== void 0 && target[key] !== void 0) {
      blendValue[key] = getMixer(origin[key], target[key]);
    }
  }
  return (v5) => {
    for (const key in blendValue) {
      output[key] = blendValue[key](v5);
    }
    return output;
  };
};
function analyse2(value) {
  const parsed = complex.parse(value);
  const numValues = parsed.length;
  let numNumbers = 0;
  let numRGB = 0;
  let numHSL = 0;
  for (let i10 = 0; i10 < numValues; i10++) {
    if (numNumbers || typeof parsed[i10] === "number") {
      numNumbers++;
    } else {
      if (parsed[i10].hue !== void 0) {
        numHSL++;
      } else {
        numRGB++;
      }
    }
  }
  return { parsed, numNumbers, numRGB, numHSL };
}
var mixComplex = (origin, target) => {
  const template = complex.createTransformer(target);
  const originStats = analyse2(origin);
  const targetStats = analyse2(target);
  const canInterpolate = originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers;
  if (canInterpolate) {
    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);
  } else {
    warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);
    return (p10) => `${p10 > 0 ? target : origin}`;
  }
};

// node_modules/popmotion/dist/es/utils/interpolate.mjs
var mixNumber = (from, to3) => (p10) => mix(from, to3, p10);
function detectMixerFactory(v5) {
  if (typeof v5 === "number") {
    return mixNumber;
  } else if (typeof v5 === "string") {
    if (color.test(v5)) {
      return mixColor;
    } else {
      return mixComplex;
    }
  } else if (Array.isArray(v5)) {
    return mixArray;
  } else if (typeof v5 === "object") {
    return mixObject;
  }
}
function createMixers(output, ease, customMixer) {
  const mixers = [];
  const mixerFactory = customMixer || detectMixerFactory(output[0]);
  const numMixers = output.length - 1;
  for (let i10 = 0; i10 < numMixers; i10++) {
    let mixer = mixerFactory(output[i10], output[i10 + 1]);
    if (ease) {
      const easingFunction = Array.isArray(ease) ? ease[i10] : ease;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function fastInterpolate([from, to3], [mixer]) {
  return (v5) => mixer(progress(from, to3, v5));
}
function slowInterpolate(input, mixers) {
  const inputLength = input.length;
  const lastInputIndex = inputLength - 1;
  return (v5) => {
    let mixerIndex = 0;
    let foundMixerIndex = false;
    if (v5 <= input[0]) {
      foundMixerIndex = true;
    } else if (v5 >= input[lastInputIndex]) {
      mixerIndex = lastInputIndex - 1;
      foundMixerIndex = true;
    }
    if (!foundMixerIndex) {
      let i10 = 1;
      for (; i10 < inputLength; i10++) {
        if (input[i10] > v5 || i10 === lastInputIndex) {
          break;
        }
      }
      mixerIndex = i10 - 1;
    }
    const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v5);
    return mixers[mixerIndex](progressInRange);
  };
}
function interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {
  const inputLength = input.length;
  invariant(inputLength === output.length, "Both input and output ranges must be the same length");
  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, "Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.");
  if (input[0] > input[inputLength - 1]) {
    input = [].concat(input);
    output = [].concat(output);
    input.reverse();
    output.reverse();
  }
  const mixers = createMixers(output, ease, mixer);
  const interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);
  return isClamp ? (v5) => interpolator(clamp2(input[0], input[inputLength - 1], v5)) : interpolator;
}

// node_modules/popmotion/dist/es/easing/utils.mjs
var reverseEasing = (easing) => (p10) => 1 - easing(1 - p10);
var mirrorEasing = (easing) => (p10) => p10 <= 0.5 ? easing(2 * p10) / 2 : (2 - easing(2 * (1 - p10))) / 2;
var createExpoIn = (power) => (p10) => Math.pow(p10, power);
var createBackIn = (power) => (p10) => p10 * p10 * ((power + 1) * p10 - power);
var createAnticipate = (power) => {
  const backEasing = createBackIn(power);
  return (p10) => (p10 *= 2) < 1 ? 0.5 * backEasing(p10) : 0.5 * (2 - Math.pow(2, -10 * (p10 - 1)));
};

// node_modules/popmotion/dist/es/easing/index.mjs
var DEFAULT_OVERSHOOT_STRENGTH = 1.525;
var BOUNCE_FIRST_THRESHOLD = 4 / 11;
var BOUNCE_SECOND_THRESHOLD = 8 / 11;
var BOUNCE_THIRD_THRESHOLD = 9 / 10;
var linear = (p10) => p10;
var easeIn = createExpoIn(2);
var easeOut = reverseEasing(easeIn);
var easeInOut = mirrorEasing(easeIn);
var circIn = (p10) => 1 - Math.sin(Math.acos(p10));
var circOut = reverseEasing(circIn);
var circInOut = mirrorEasing(circOut);
var backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);
var backOut = reverseEasing(backIn);
var backInOut = mirrorEasing(backIn);
var anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);
var ca = 4356 / 361;
var cb = 35442 / 1805;
var cc = 16061 / 1805;
var bounceOut = (p10) => {
  if (p10 === 1 || p10 === 0)
    return p10;
  const p22 = p10 * p10;
  return p10 < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p22 : p10 < BOUNCE_SECOND_THRESHOLD ? 9.075 * p22 - 9.9 * p10 + 3.4 : p10 < BOUNCE_THIRD_THRESHOLD ? ca * p22 - cb * p10 + cc : 10.8 * p10 * p10 - 20.52 * p10 + 10.72;
};
var bounceIn = reverseEasing(bounceOut);
var bounceInOut = (p10) => p10 < 0.5 ? 0.5 * (1 - bounceOut(1 - p10 * 2)) : 0.5 * bounceOut(p10 * 2 - 1) + 0.5;

// node_modules/popmotion/dist/es/animations/generators/keyframes.mjs
function defaultEasing(values, easing) {
  return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function defaultOffset(values) {
  const numValues = values.length;
  return values.map((_value, i10) => i10 !== 0 ? i10 / (numValues - 1) : 0);
}
function convertOffsetToTimes(offset, duration) {
  return offset.map((o13) => o13 * duration);
}
function keyframes({ from = 0, to: to3 = 1, ease, offset, duration = 300 }) {
  const state = { done: false, value: from };
  const values = Array.isArray(to3) ? to3 : [from, to3];
  const times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset(values), duration);
  function createInterpolator() {
    return interpolate(times, values, {
      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)
    });
  }
  let interpolator = createInterpolator();
  return {
    next: (t15) => {
      state.value = interpolator(t15);
      state.done = t15 >= duration;
      return state;
    },
    flipTarget: () => {
      values.reverse();
      interpolator = createInterpolator();
    }
  };
}

// node_modules/popmotion/dist/es/animations/generators/decay.mjs
function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget }) {
  const state = { done: false, value: from };
  let amplitude = power * velocity;
  const ideal = from + amplitude;
  const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - from;
  return {
    next: (t15) => {
      const delta = -amplitude * Math.exp(-t15 / timeConstant);
      state.done = !(delta > restDelta || delta < -restDelta);
      state.value = state.done ? target : target + delta;
      return state;
    },
    flipTarget: () => {
    }
  };
}

// node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.mjs
var types = { keyframes, spring, decay };
function detectAnimationFromOptions(config) {
  if (Array.isArray(config.to)) {
    return keyframes;
  } else if (types[config.type]) {
    return types[config.type];
  }
  const keys = new Set(Object.keys(config));
  if (keys.has("ease") || keys.has("duration") && !keys.has("dampingRatio")) {
    return keyframes;
  } else if (keys.has("dampingRatio") || keys.has("stiffness") || keys.has("mass") || keys.has("damping") || keys.has("restSpeed") || keys.has("restDelta")) {
    return spring;
  }
  return keyframes;
}

// node_modules/framesync/dist/es/on-next-frame.mjs
var defaultTimestep = 1 / 60 * 1e3;
var getCurrentTime = typeof performance !== "undefined" ? () => performance.now() : () => Date.now();
var onNextFrame = typeof window !== "undefined" ? (callback) => window.requestAnimationFrame(callback) : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);

// node_modules/framesync/dist/es/create-render-step.mjs
function createRenderStep(runNextFrame2) {
  let toRun = [];
  let toRunNextFrame = [];
  let numToRun = 0;
  let isProcessing2 = false;
  let flushNextFrame = false;
  const toKeepAlive = /* @__PURE__ */ new WeakSet();
  const step = {
    schedule: (callback, keepAlive = false, immediate = false) => {
      const addToCurrentFrame = immediate && isProcessing2;
      const buffer = addToCurrentFrame ? toRun : toRunNextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (buffer.indexOf(callback) === -1) {
        buffer.push(callback);
        if (addToCurrentFrame && isProcessing2)
          numToRun = toRun.length;
      }
      return callback;
    },
    cancel: (callback) => {
      const index2 = toRunNextFrame.indexOf(callback);
      if (index2 !== -1)
        toRunNextFrame.splice(index2, 1);
      toKeepAlive.delete(callback);
    },
    process: (frameData) => {
      if (isProcessing2) {
        flushNextFrame = true;
        return;
      }
      isProcessing2 = true;
      [toRun, toRunNextFrame] = [toRunNextFrame, toRun];
      toRunNextFrame.length = 0;
      numToRun = toRun.length;
      if (numToRun) {
        for (let i10 = 0; i10 < numToRun; i10++) {
          const callback = toRun[i10];
          callback(frameData);
          if (toKeepAlive.has(callback)) {
            step.schedule(callback);
            runNextFrame2();
          }
        }
      }
      isProcessing2 = false;
      if (flushNextFrame) {
        flushNextFrame = false;
        step.process(frameData);
      }
    }
  };
  return step;
}

// node_modules/framesync/dist/es/index.mjs
var maxElapsed = 40;
var useDefaultElapsed = true;
var runNextFrame = false;
var isProcessing = false;
var frame = {
  delta: 0,
  timestamp: 0
};
var stepsOrder = [
  "read",
  "update",
  "preRender",
  "render",
  "postRender"
];
var steps = stepsOrder.reduce((acc, key) => {
  acc[key] = createRenderStep(() => runNextFrame = true);
  return acc;
}, {});
var sync = stepsOrder.reduce((acc, key) => {
  const step = steps[key];
  acc[key] = (process2, keepAlive = false, immediate = false) => {
    if (!runNextFrame)
      startLoop();
    return step.schedule(process2, keepAlive, immediate);
  };
  return acc;
}, {});
var cancelSync = stepsOrder.reduce((acc, key) => {
  acc[key] = steps[key].cancel;
  return acc;
}, {});
var flushSync = stepsOrder.reduce((acc, key) => {
  acc[key] = () => steps[key].process(frame);
  return acc;
}, {});
var processStep = (stepId) => steps[stepId].process(frame);
var processFrame = (timestamp) => {
  runNextFrame = false;
  frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);
  frame.timestamp = timestamp;
  isProcessing = true;
  stepsOrder.forEach(processStep);
  isProcessing = false;
  if (runNextFrame) {
    useDefaultElapsed = false;
    onNextFrame(processFrame);
  }
};
var startLoop = () => {
  runNextFrame = true;
  useDefaultElapsed = true;
  if (!isProcessing)
    onNextFrame(processFrame);
};
var getFrameData = () => frame;
var es_default = sync;

// node_modules/popmotion/dist/es/animations/utils/elapsed.mjs
function loopElapsed(elapsed, duration, delay = 0) {
  return elapsed - duration - delay;
}
function reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {
  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;
}
function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
}

// node_modules/popmotion/dist/es/animations/index.mjs
var framesync = (update) => {
  const passTimestamp = ({ delta }) => update(delta);
  return {
    start: () => es_default.update(passTimestamp, true),
    stop: () => cancelSync.update(passTimestamp)
  };
};
function animate(_a) {
  var _b, _c;
  var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = "loop", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
  let { to: to3 } = options;
  let driverControls;
  let repeatCount = 0;
  let computedDuration = options.duration;
  let latest;
  let isComplete = false;
  let isForwardPlayback = true;
  let interpolateFromNumber;
  const animator = detectAnimationFromOptions(options);
  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to3)) {
    interpolateFromNumber = interpolate([0, 100], [from, to3], {
      clamp: false
    });
    from = 0;
    to3 = 100;
  }
  const animation = animator(Object.assign(Object.assign({}, options), { from, to: to3 }));
  function repeat() {
    repeatCount++;
    if (repeatType === "reverse") {
      isForwardPlayback = repeatCount % 2 === 0;
      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);
    } else {
      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);
      if (repeatType === "mirror")
        animation.flipTarget();
    }
    isComplete = false;
    onRepeat && onRepeat();
  }
  function complete() {
    driverControls.stop();
    onComplete && onComplete();
  }
  function update(delta) {
    if (!isForwardPlayback)
      delta = -delta;
    elapsed += delta;
    if (!isComplete) {
      const state = animation.next(Math.max(0, elapsed));
      latest = state.value;
      if (interpolateFromNumber)
        latest = interpolateFromNumber(latest);
      isComplete = isForwardPlayback ? state.done : elapsed <= 0;
    }
    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);
    if (isComplete) {
      if (repeatCount === 0)
        computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;
      if (repeatCount < repeatMax) {
        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();
      } else {
        complete();
      }
    }
  }
  function play() {
    onPlay === null || onPlay === void 0 ? void 0 : onPlay();
    driverControls = driver(update);
    driverControls.start();
  }
  autoplay && play();
  return {
    stop: () => {
      onStop === null || onStop === void 0 ? void 0 : onStop();
      driverControls.stop();
    }
  };
}

// node_modules/popmotion/dist/es/utils/velocity-per-second.mjs
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// node_modules/popmotion/dist/es/animations/inertia.mjs
function inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop }) {
  let currentAnimation;
  function isOutOfBounds(v5) {
    return min !== void 0 && v5 < min || max !== void 0 && v5 > max;
  }
  function boundaryNearest(v5) {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v5) < Math.abs(max - v5) ? min : max;
  }
  function startAnimation2(options) {
    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
    currentAnimation = animate(Object.assign(Object.assign({}, options), {
      driver,
      onUpdate: (v5) => {
        var _a;
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v5);
        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v5);
      },
      onComplete,
      onStop
    }));
  }
  function startSpring(options) {
    startAnimation2(Object.assign({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));
  }
  if (isOutOfBounds(from)) {
    startSpring({ from, velocity, to: boundaryNearest(from) });
  } else {
    let target = power * velocity + from;
    if (typeof modifyTarget !== "undefined")
      target = modifyTarget(target);
    const boundary = boundaryNearest(target);
    const heading = boundary === min ? -1 : 1;
    let prev;
    let current;
    const checkBoundary = (v5) => {
      prev = current;
      current = v5;
      velocity = velocityPerSecond(v5 - prev, getFrameData().delta);
      if (heading === 1 && v5 > boundary || heading === -1 && v5 < boundary) {
        startSpring({ from: v5, to: boundary, velocity });
      }
    };
    startAnimation2({
      type: "decay",
      from,
      velocity,
      timeConstant,
      power,
      restDelta,
      modifyTarget,
      onUpdate: isOutOfBounds(target) ? checkBoundary : void 0
    });
  }
  return {
    stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop()
  };
}

// node_modules/popmotion/dist/es/utils/attract.mjs
var identity = (v5) => v5;
var createAttractor = (alterDisplacement = identity) => (constant, origin, v5) => {
  const displacement = origin - v5;
  const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));
  return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;
};
var attract = createAttractor();
var attractExpo = createAttractor(Math.sqrt);

// node_modules/popmotion/dist/es/utils/is-point.mjs
var isPoint = (point) => point.hasOwnProperty("x") && point.hasOwnProperty("y");

// node_modules/popmotion/dist/es/utils/is-point-3d.mjs
var isPoint3D = (point) => isPoint(point) && point.hasOwnProperty("z");

// node_modules/popmotion/dist/es/utils/distance.mjs
var distance1D = (a15, b7) => Math.abs(a15 - b7);
function distance(a15, b7) {
  if (isNum(a15) && isNum(b7)) {
    return distance1D(a15, b7);
  } else if (isPoint(a15) && isPoint(b7)) {
    const xDelta = distance1D(a15.x, b7.x);
    const yDelta = distance1D(a15.y, b7.y);
    const zDelta = isPoint3D(a15) && isPoint3D(b7) ? distance1D(a15.z, b7.z) : 0;
    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
  }
}

// node_modules/popmotion/dist/es/easing/cubic-bezier.mjs
var a = (a1, a22) => 1 - 3 * a22 + 3 * a1;
var b = (a1, a22) => 3 * a22 - 6 * a1;
var c = (a1) => 3 * a1;
var calcBezier = (t15, a1, a22) => ((a(a1, a22) * t15 + b(a1, a22)) * t15 + c(a1)) * t15;
var getSlope = (t15, a1, a22) => 3 * a(a1, a22) * t15 * t15 + 2 * b(a1, a22) * t15 + c(a1);
var subdivisionPrecision = 1e-7;
var subdivisionMaxIterations = 10;
function binarySubdivide(aX, aA, aB, mX1, mX2) {
  let currentX;
  let currentT;
  let i10 = 0;
  do {
    currentT = aA + (aB - aA) / 2;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision && ++i10 < subdivisionMaxIterations);
  return currentT;
}
var newtonIterations = 8;
var newtonMinSlope = 1e-3;
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (let i10 = 0; i10 < newtonIterations; ++i10) {
    const currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0) {
      return aGuessT;
    }
    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}
var kSplineTableSize = 11;
var kSampleStepSize = 1 / (kSplineTableSize - 1);
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return linear;
  const sampleValues = new Float32Array(kSplineTableSize);
  for (let i10 = 0; i10 < kSplineTableSize; ++i10) {
    sampleValues[i10] = calcBezier(i10 * kSampleStepSize, mX1, mX2);
  }
  function getTForX(aX) {
    let intervalStart = 0;
    let currentSample = 1;
    const lastSample = kSplineTableSize - 1;
    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;
    const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    const guessForT = intervalStart + dist * kSampleStepSize;
    const initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= newtonMinSlope) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }
  return (t15) => t15 === 0 || t15 === 1 ? t15 : calcBezier(getTForX(t15), mY1, mY2);
}

// node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs
function useTapGesture(_a) {
  var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement2 = _a.visualElement;
  var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;
  var isPressing = (0, import_react25.useRef)(false);
  var cancelPointerEndListeners = (0, import_react25.useRef)(null);
  var eventOptions = {
    passive: !(onTapStart || onTap || onTapCancel || onPointerDown)
  };
  function removePointerEndListener() {
    var _a2;
    (_a2 = cancelPointerEndListeners.current) === null || _a2 === void 0 ? void 0 : _a2.call(cancelPointerEndListeners);
    cancelPointerEndListeners.current = null;
  }
  function checkPointerEnd() {
    var _a2;
    removePointerEndListener();
    isPressing.current = false;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, false);
    return !isDragActive();
  }
  function onPointerUp(event, info) {
    if (!checkPointerEnd())
      return;
    !isNodeOrChild(visualElement2.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);
  }
  function onPointerCancel(event, info) {
    if (!checkPointerEnd())
      return;
    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);
  }
  function onPointerDown(event, info) {
    var _a2;
    removePointerEndListener();
    if (isPressing.current)
      return;
    isPressing.current = true;
    cancelPointerEndListeners.current = pipe(addPointerEvent(window, "pointerup", onPointerUp, eventOptions), addPointerEvent(window, "pointercancel", onPointerCancel, eventOptions));
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, true);
    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);
  }
  usePointerEvent(visualElement2, "pointerdown", hasPressListeners ? onPointerDown : void 0, eventOptions);
  useUnmountEffect(removePointerEndListener);
}

// node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs
var import_react26 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/warn-once.mjs
var warned = /* @__PURE__ */ new Set();
function warnOnce(condition, message, element) {
  if (condition || warned.has(message))
    return;
  console.warn(message);
  if (element)
    console.warn(element);
  warned.add(message);
}

// node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs
var observerCallbacks = /* @__PURE__ */ new WeakMap();
var observers = /* @__PURE__ */ new WeakMap();
var fireObserverCallback = function(entry) {
  var _a;
  (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);
};
var fireAllObserverCallbacks = function(entries) {
  entries.forEach(fireObserverCallback);
};
function initIntersectionObserver(_a) {
  var root = _a.root, options = __rest(_a, ["root"]);
  var lookupRoot = root || document;
  if (!observers.has(lookupRoot)) {
    observers.set(lookupRoot, {});
  }
  var rootObservers = observers.get(lookupRoot);
  var key = JSON.stringify(options);
  if (!rootObservers[key]) {
    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, __assign({ root }, options));
  }
  return rootObservers[key];
}
function observeIntersection(element, options, callback) {
  var rootInteresectionObserver = initIntersectionObserver(options);
  observerCallbacks.set(element, callback);
  rootInteresectionObserver.observe(element);
  return function() {
    observerCallbacks.delete(element);
    rootInteresectionObserver.unobserve(element);
  };
}

// node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs
function useViewport(_a) {
  var visualElement2 = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport = _b === void 0 ? {} : _b;
  var state = (0, import_react26.useRef)({
    hasEnteredView: false,
    isInView: false
  });
  var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);
  if (viewport.once && state.current.hasEnteredView)
    shouldObserve = false;
  var useObserver = typeof IntersectionObserver === "undefined" ? useMissingIntersectionObserver : useIntersectionObserver;
  useObserver(shouldObserve, state.current, visualElement2, viewport);
}
var thresholdNames = {
  some: 0,
  all: 1
};
function useIntersectionObserver(shouldObserve, state, visualElement2, _a) {
  var root = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? "some" : _b, once = _a.once;
  (0, import_react26.useEffect)(function() {
    if (!shouldObserve)
      return;
    var options = {
      root: root === null || root === void 0 ? void 0 : root.current,
      rootMargin,
      threshold: typeof amount === "number" ? amount : thresholdNames[amount]
    };
    var intersectionCallback = function(entry) {
      var _a2;
      var isIntersecting = entry.isIntersecting;
      if (state.isInView === isIntersecting)
        return;
      state.isInView = isIntersecting;
      if (once && !isIntersecting && state.hasEnteredView) {
        return;
      } else if (isIntersecting) {
        state.hasEnteredView = true;
      }
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.InView, isIntersecting);
      var props = visualElement2.getProps();
      var callback = isIntersecting ? props.onViewportEnter : props.onViewportLeave;
      callback === null || callback === void 0 ? void 0 : callback(entry);
    };
    return observeIntersection(visualElement2.getInstance(), options, intersectionCallback);
  }, [shouldObserve, root, rootMargin, amount]);
}
function useMissingIntersectionObserver(shouldObserve, state, visualElement2, _a) {
  var _b = _a.fallback, fallback = _b === void 0 ? true : _b;
  (0, import_react26.useEffect)(function() {
    if (!shouldObserve || !fallback)
      return;
    if (env !== "production") {
      warnOnce(false, "IntersectionObserver not available on this device. whileInView animations will trigger on mount.");
    }
    requestAnimationFrame(function() {
      var _a2;
      state.hasEnteredView = true;
      var onViewportEnter = visualElement2.getProps().onViewportEnter;
      onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.InView, true);
    });
  }, [shouldObserve]);
}

// node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs
var makeRenderlessComponent = function(hook) {
  return function(props) {
    hook(props);
    return null;
  };
};

// node_modules/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations = {
  inView: makeRenderlessComponent(useViewport),
  tap: makeRenderlessComponent(useTapGesture),
  focus: makeRenderlessComponent(useFocusGesture),
  hover: makeRenderlessComponent(useHoverGesture)
};

// node_modules/framer-motion/dist/es/motion/features/animations.mjs
var import_react28 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
var import_react27 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-id.mjs
var counter = 0;
var incrementId = function() {
  return counter++;
};
var useId = function() {
  return useConstant(incrementId);
};

// node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
function usePresence() {
  var context = (0, import_react27.useContext)(PresenceContext);
  if (context === null)
    return [true, null];
  var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;
  var id2 = useId();
  (0, import_react27.useEffect)(function() {
    return register(id2);
  }, []);
  var safeToRemove = function() {
    return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id2);
  };
  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
}

// node_modules/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare(next, prev) {
  if (!Array.isArray(prev))
    return false;
  var prevLength = prev.length;
  if (prevLength !== next.length)
    return false;
  for (var i10 = 0; i10 < prevLength; i10++) {
    if (prev[i10] !== next[i10])
      return false;
  }
  return true;
}

// node_modules/framer-motion/dist/es/utils/time-conversion.mjs
var secondsToMilliseconds = function(seconds) {
  return seconds * 1e3;
};

// node_modules/framer-motion/dist/es/animation/utils/easing.mjs
var easingLookup = {
  linear,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate,
  bounceIn,
  bounceInOut,
  bounceOut
};
var easingDefinitionToFunction = function(definition) {
  if (Array.isArray(definition)) {
    invariant(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
    var _a = __read(definition, 4), x1 = _a[0], y1 = _a[1], x22 = _a[2], y22 = _a[3];
    return cubicBezier(x1, y1, x22, y22);
  } else if (typeof definition === "string") {
    invariant(easingLookup[definition] !== void 0, "Invalid easing type '".concat(definition, "'"));
    return easingLookup[definition];
  }
  return definition;
};
var isEasingArray = function(ease) {
  return Array.isArray(ease) && typeof ease[0] !== "number";
};

// node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs
var isAnimatable = function(key, value) {
  if (key === "zIndex")
    return false;
  if (typeof value === "number" || Array.isArray(value))
    return true;
  if (typeof value === "string" && // It's animatable if we have a string
  complex.test(value) && // And it contains numbers and/or colors
  !value.startsWith("url(")) {
    return true;
  }
  return false;
};

// node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring = function() {
  return {
    type: "spring",
    stiffness: 500,
    damping: 25,
    restSpeed: 10
  };
};
var criticallyDampedSpring = function(to3) {
  return {
    type: "spring",
    stiffness: 550,
    damping: to3 === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10
  };
};
var linearTween = function() {
  return {
    type: "keyframes",
    ease: "linear",
    duration: 0.3
  };
};
var keyframes2 = function(values) {
  return {
    type: "keyframes",
    duration: 0.8,
    values
  };
};
var defaultTransitions = {
  x: underDampedSpring,
  y: underDampedSpring,
  z: underDampedSpring,
  rotate: underDampedSpring,
  rotateX: underDampedSpring,
  rotateY: underDampedSpring,
  rotateZ: underDampedSpring,
  scaleX: criticallyDampedSpring,
  scaleY: criticallyDampedSpring,
  scale: criticallyDampedSpring,
  opacity: linearTween,
  backgroundColor: linearTween,
  color: linearTween,
  default: criticallyDampedSpring
};
var getDefaultTransition = function(valueKey, to3) {
  var transitionFactory;
  if (isKeyframesTarget(to3)) {
    transitionFactory = keyframes2;
  } else {
    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;
  }
  return __assign({ to: to3 }, transitionFactory(to3));
};

// node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs
var defaultValueTypes = __assign(__assign({}, numberValueTypes), {
  // Color props
  color,
  backgroundColor: color,
  outlineColor: color,
  fill: color,
  stroke: color,
  // Border props
  borderColor: color,
  borderTopColor: color,
  borderRightColor: color,
  borderBottomColor: color,
  borderLeftColor: color,
  filter,
  WebkitFilter: filter
});
var getDefaultValueType = function(key) {
  return defaultValueTypes[key];
};

// node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs
function getAnimatableNone2(key, value) {
  var _a;
  var defaultValueType = getDefaultValueType(key);
  if (defaultValueType !== filter)
    defaultValueType = complex;
  return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);
}

// node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs
var instantAnimationState = {
  current: false
};

// node_modules/framer-motion/dist/es/animation/utils/transitions.mjs
function isTransitionDefined(_a) {
  _a.when;
  _a.delay;
  _a.delayChildren;
  _a.staggerChildren;
  _a.staggerDirection;
  _a.repeat;
  _a.repeatType;
  _a.repeatDelay;
  _a.from;
  var transition = __rest(_a, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
  return !!Object.keys(transition).length;
}
var legacyRepeatWarning = false;
function convertTransitionToAnimationOptions(_a) {
  var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = __rest(_a, ["ease", "times", "yoyo", "flip", "loop"]);
  var options = __assign({}, transition);
  if (times)
    options["offset"] = times;
  if (transition.duration)
    options["duration"] = secondsToMilliseconds(transition.duration);
  if (transition.repeatDelay)
    options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);
  if (ease) {
    options["ease"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);
  }
  if (transition.type === "tween")
    options.type = "keyframes";
  if (yoyo || loop || flip) {
    warning(!legacyRepeatWarning, "yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.");
    legacyRepeatWarning = true;
    if (yoyo) {
      options.repeatType = "reverse";
    } else if (loop) {
      options.repeatType = "loop";
    } else if (flip) {
      options.repeatType = "mirror";
    }
    options.repeat = loop || yoyo || flip || transition.repeat;
  }
  if (transition.type !== "spring")
    options.type = "keyframes";
  return options;
}
function getDelayFromTransition(transition, key) {
  var _a, _b;
  var valueTransition = getValueTransition(transition, key) || {};
  return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;
}
function hydrateKeyframes(options) {
  if (Array.isArray(options.to) && options.to[0] === null) {
    options.to = __spreadArray([], __read(options.to), false);
    options.to[0] = options.from;
  }
  return options;
}
function getPopmotionAnimationOptions(transition, options, key) {
  var _a;
  if (Array.isArray(options.to)) {
    (_a = transition.duration) !== null && _a !== void 0 ? _a : transition.duration = 0.8;
  }
  hydrateKeyframes(options);
  if (!isTransitionDefined(transition)) {
    transition = __assign(__assign({}, transition), getDefaultTransition(key, options.to));
  }
  return __assign(__assign({}, options), convertTransitionToAnimationOptions(transition));
}
function getAnimation(key, value, target, transition, onComplete) {
  var _a;
  var valueTransition = getValueTransition(transition, key);
  var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();
  var isTargetAnimatable = isAnimatable(key, target);
  if (origin === "none" && isTargetAnimatable && typeof target === "string") {
    origin = getAnimatableNone2(key, target);
  } else if (isZero(origin) && typeof target === "string") {
    origin = getZeroUnit(target);
  } else if (!Array.isArray(target) && isZero(target) && typeof origin === "string") {
    target = getZeroUnit(origin);
  }
  var isOriginAnimatable = isAnimatable(key, origin);
  warning(isOriginAnimatable === isTargetAnimatable, "You are trying to animate ".concat(key, ' from "').concat(origin, '" to "').concat(target, '". ').concat(origin, " is not an animatable value - to enable this animation set ").concat(origin, " to a value animatable to ").concat(target, " via the `style` property."));
  function start() {
    var options = {
      from: origin,
      to: target,
      velocity: value.getVelocity(),
      onComplete,
      onUpdate: function(v5) {
        return value.set(v5);
      }
    };
    return valueTransition.type === "inertia" || valueTransition.type === "decay" ? inertia(__assign(__assign({}, options), valueTransition)) : animate(__assign(__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function(v5) {
      var _a2;
      options.onUpdate(v5);
      (_a2 = valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, v5);
    }, onComplete: function() {
      var _a2;
      options.onComplete();
      (_a2 = valueTransition.onComplete) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition);
    } }));
  }
  function set() {
    var _a2, _b;
    var finalTarget = resolveFinalValueInKeyframes(target);
    value.set(finalTarget);
    onComplete();
    (_a2 = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, finalTarget);
    (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);
    return { stop: function() {
    } };
  }
  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;
}
function isZero(value) {
  return value === 0 || typeof value === "string" && parseFloat(value) === 0 && value.indexOf(" ") === -1;
}
function getZeroUnit(potentialUnitType) {
  return typeof potentialUnitType === "number" ? 0 : getAnimatableNone2("", potentialUnitType);
}
function getValueTransition(transition, key) {
  return transition[key] || transition["default"] || transition;
}
function startAnimation(key, value, target, transition) {
  if (transition === void 0) {
    transition = {};
  }
  if (instantAnimationState.current) {
    transition = { type: false };
  }
  return value.start(function(onComplete) {
    var delayTimer;
    var controls;
    var animation = getAnimation(key, value, target, transition, onComplete);
    var delay = getDelayFromTransition(transition, key);
    var start = function() {
      return controls = animation();
    };
    if (delay) {
      delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));
    } else {
      start();
    }
    return function() {
      clearTimeout(delayTimer);
      controls === null || controls === void 0 ? void 0 : controls.stop();
    };
  });
}

// node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs
var isNumericalString = function(v5) {
  return /^\-?\d*\.?\d+$/.test(v5);
};

// node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs
var isZeroValueString = function(v5) {
  return /^0[^.\s]+$/.test(v5);
};

// node_modules/framer-motion/dist/es/utils/array.mjs
function addUniqueItem(arr, item) {
  arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem(arr, item) {
  var index2 = arr.indexOf(item);
  index2 > -1 && arr.splice(index2, 1);
}
function moveItem(_a, fromIndex, toIndex) {
  var _b = __read(_a), arr = _b.slice(0);
  var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
  if (startIndex >= 0 && startIndex < arr.length) {
    var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;
    var _c = __read(arr.splice(fromIndex, 1), 1), item = _c[0];
    arr.splice(endIndex, 0, item);
  }
  return arr;
}

// node_modules/framer-motion/dist/es/utils/subscription-manager.mjs
var SubscriptionManager = (
  /** @class */
  function() {
    function SubscriptionManager2() {
      this.subscriptions = [];
    }
    SubscriptionManager2.prototype.add = function(handler) {
      var _this = this;
      addUniqueItem(this.subscriptions, handler);
      return function() {
        return removeItem(_this.subscriptions, handler);
      };
    };
    SubscriptionManager2.prototype.notify = function(a15, b7, c16) {
      var numSubscriptions = this.subscriptions.length;
      if (!numSubscriptions)
        return;
      if (numSubscriptions === 1) {
        this.subscriptions[0](a15, b7, c16);
      } else {
        for (var i10 = 0; i10 < numSubscriptions; i10++) {
          var handler = this.subscriptions[i10];
          handler && handler(a15, b7, c16);
        }
      }
    };
    SubscriptionManager2.prototype.getSize = function() {
      return this.subscriptions.length;
    };
    SubscriptionManager2.prototype.clear = function() {
      this.subscriptions.length = 0;
    };
    return SubscriptionManager2;
  }()
);

// node_modules/framer-motion/dist/es/value/index.mjs
var isFloat = function(value) {
  return !isNaN(parseFloat(value));
};
var MotionValue = (
  /** @class */
  function() {
    function MotionValue3(init) {
      var _this = this;
      this.version = "6.5.1";
      this.timeDelta = 0;
      this.lastUpdated = 0;
      this.updateSubscribers = new SubscriptionManager();
      this.velocityUpdateSubscribers = new SubscriptionManager();
      this.renderSubscribers = new SubscriptionManager();
      this.canTrackVelocity = false;
      this.updateAndNotify = function(v5, render) {
        if (render === void 0) {
          render = true;
        }
        _this.prev = _this.current;
        _this.current = v5;
        var _a = getFrameData(), delta = _a.delta, timestamp = _a.timestamp;
        if (_this.lastUpdated !== timestamp) {
          _this.timeDelta = delta;
          _this.lastUpdated = timestamp;
          es_default.postRender(_this.scheduleVelocityCheck);
        }
        if (_this.prev !== _this.current) {
          _this.updateSubscribers.notify(_this.current);
        }
        if (_this.velocityUpdateSubscribers.getSize()) {
          _this.velocityUpdateSubscribers.notify(_this.getVelocity());
        }
        if (render) {
          _this.renderSubscribers.notify(_this.current);
        }
      };
      this.scheduleVelocityCheck = function() {
        return es_default.postRender(_this.velocityCheck);
      };
      this.velocityCheck = function(_a) {
        var timestamp = _a.timestamp;
        if (timestamp !== _this.lastUpdated) {
          _this.prev = _this.current;
          _this.velocityUpdateSubscribers.notify(_this.getVelocity());
        }
      };
      this.hasAnimated = false;
      this.prev = this.current = init;
      this.canTrackVelocity = isFloat(this.current);
    }
    MotionValue3.prototype.onChange = function(subscription) {
      return this.updateSubscribers.add(subscription);
    };
    MotionValue3.prototype.clearListeners = function() {
      this.updateSubscribers.clear();
    };
    MotionValue3.prototype.onRenderRequest = function(subscription) {
      subscription(this.get());
      return this.renderSubscribers.add(subscription);
    };
    MotionValue3.prototype.attach = function(passiveEffect) {
      this.passiveEffect = passiveEffect;
    };
    MotionValue3.prototype.set = function(v5, render) {
      if (render === void 0) {
        render = true;
      }
      if (!render || !this.passiveEffect) {
        this.updateAndNotify(v5, render);
      } else {
        this.passiveEffect(v5, this.updateAndNotify);
      }
    };
    MotionValue3.prototype.get = function() {
      return this.current;
    };
    MotionValue3.prototype.getPrevious = function() {
      return this.prev;
    };
    MotionValue3.prototype.getVelocity = function() {
      return this.canTrackVelocity ? (
        // These casts could be avoided if parseFloat would be typed better
        velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta)
      ) : 0;
    };
    MotionValue3.prototype.start = function(animation) {
      var _this = this;
      this.stop();
      return new Promise(function(resolve) {
        _this.hasAnimated = true;
        _this.stopAnimation = animation(resolve);
      }).then(function() {
        return _this.clearAnimation();
      });
    };
    MotionValue3.prototype.stop = function() {
      if (this.stopAnimation)
        this.stopAnimation();
      this.clearAnimation();
    };
    MotionValue3.prototype.isAnimating = function() {
      return !!this.stopAnimation;
    };
    MotionValue3.prototype.clearAnimation = function() {
      this.stopAnimation = null;
    };
    MotionValue3.prototype.destroy = function() {
      this.updateSubscribers.clear();
      this.renderSubscribers.clear();
      this.stop();
    };
    return MotionValue3;
  }()
);
function motionValue(init) {
  return new MotionValue(init);
}

// node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs
var testValueType = function(v5) {
  return function(type) {
    return type.test(v5);
  };
};

// node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs
var auto = {
  test: function(v5) {
    return v5 === "auto";
  },
  parse: function(v5) {
    return v5;
  }
};

// node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs
var dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];
var findDimensionValueType = function(v5) {
  return dimensionValueTypes.find(testValueType(v5));
};

// node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs
var valueTypes = __spreadArray(__spreadArray([], __read(dimensionValueTypes), false), [color, complex], false);
var findValueType = function(v5) {
  return valueTypes.find(testValueType(v5));
};

// node_modules/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue(visualElement2, key, value) {
  if (visualElement2.hasValue(key)) {
    visualElement2.getValue(key).set(value);
  } else {
    visualElement2.addValue(key, motionValue(value));
  }
}
function setTarget(visualElement2, definition) {
  var resolved = resolveVariant(visualElement2, definition);
  var _a = resolved ? visualElement2.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b;
  _a.transition;
  var target = __rest(_a, ["transitionEnd", "transition"]);
  target = __assign(__assign({}, target), transitionEnd);
  for (var key in target) {
    var value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement2, key, value);
  }
}
function checkTargetForNewValues(visualElement2, target, origin) {
  var _a, _b, _c;
  var _d;
  var newValueKeys = Object.keys(target).filter(function(key2) {
    return !visualElement2.hasValue(key2);
  });
  var numNewValues = newValueKeys.length;
  if (!numNewValues)
    return;
  for (var i10 = 0; i10 < numNewValues; i10++) {
    var key = newValueKeys[i10];
    var targetValue = target[key];
    var value = null;
    if (Array.isArray(targetValue)) {
      value = targetValue[0];
    }
    if (value === null) {
      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement2.readValue(key)) !== null && _b !== void 0 ? _b : target[key];
    }
    if (value === void 0 || value === null)
      continue;
    if (typeof value === "string" && (isNumericalString(value) || isZeroValueString(value))) {
      value = parseFloat(value);
    } else if (!findValueType(value) && complex.test(targetValue)) {
      value = getAnimatableNone2(key, targetValue);
    }
    visualElement2.addValue(key, motionValue(value));
    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;
    visualElement2.setBaseTarget(key, value);
  }
}
function getOriginFromTransition(key, transition) {
  if (!transition)
    return;
  var valueTransition = transition[key] || transition["default"] || transition;
  return valueTransition.from;
}
function getOrigin(target, transition, visualElement2) {
  var _a, _b;
  var origin = {};
  for (var key in target) {
    origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement2.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
  }
  return origin;
}

// node_modules/framer-motion/dist/es/render/utils/animation.mjs
function animateVisualElement(visualElement2, definition, options) {
  if (options === void 0) {
    options = {};
  }
  visualElement2.notifyAnimationStart(definition);
  var animation;
  if (Array.isArray(definition)) {
    var animations2 = definition.map(function(variant) {
      return animateVariant(visualElement2, variant, options);
    });
    animation = Promise.all(animations2);
  } else if (typeof definition === "string") {
    animation = animateVariant(visualElement2, definition, options);
  } else {
    var resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement2, definition, options.custom) : definition;
    animation = animateTarget(visualElement2, resolvedDefinition, options);
  }
  return animation.then(function() {
    return visualElement2.notifyAnimationComplete(definition);
  });
}
function animateVariant(visualElement2, variant, options) {
  var _a;
  if (options === void 0) {
    options = {};
  }
  var resolved = resolveVariant(visualElement2, variant, options.custom);
  var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement2.getDefaultTransition() || {} : _b;
  if (options.transitionOverride) {
    transition = options.transitionOverride;
  }
  var getAnimation2 = resolved ? function() {
    return animateTarget(visualElement2, resolved, options);
  } : function() {
    return Promise.resolve();
  };
  var getChildAnimations = ((_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function(forwardDelay) {
    if (forwardDelay === void 0) {
      forwardDelay = 0;
    }
    var _a2 = transition.delayChildren, delayChildren = _a2 === void 0 ? 0 : _a2, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;
    return animateChildren(visualElement2, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : function() {
    return Promise.resolve();
  };
  var when = transition.when;
  if (when) {
    var _c = __read(when === "beforeChildren" ? [getAnimation2, getChildAnimations] : [getChildAnimations, getAnimation2], 2), first = _c[0], last = _c[1];
    return first().then(last);
  } else {
    return Promise.all([getAnimation2(), getChildAnimations(options.delay)]);
  }
}
function animateTarget(visualElement2, definition, _a) {
  var _b;
  var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;
  var _e5 = visualElement2.makeTargetAnimatable(definition), _f = _e5.transition, transition = _f === void 0 ? visualElement2.getDefaultTransition() : _f, transitionEnd = _e5.transitionEnd, target = __rest(_e5, ["transition", "transitionEnd"]);
  if (transitionOverride)
    transition = transitionOverride;
  var animations2 = [];
  var animationTypeState = type && ((_b = visualElement2.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
  for (var key in target) {
    var value = visualElement2.getValue(key);
    var valueTarget = target[key];
    if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
      continue;
    }
    var valueTransition = __assign({ delay }, transition);
    if (visualElement2.shouldReduceMotion && isTransformProp(key)) {
      valueTransition = __assign(__assign({}, valueTransition), { type: false, delay: 0 });
    }
    var animation = startAnimation(key, value, valueTarget, valueTransition);
    animations2.push(animation);
  }
  return Promise.all(animations2).then(function() {
    transitionEnd && setTarget(visualElement2, transitionEnd);
  });
}
function animateChildren(visualElement2, variant, delayChildren, staggerChildren, staggerDirection, options) {
  if (delayChildren === void 0) {
    delayChildren = 0;
  }
  if (staggerChildren === void 0) {
    staggerChildren = 0;
  }
  if (staggerDirection === void 0) {
    staggerDirection = 1;
  }
  var animations2 = [];
  var maxStaggerDuration = (visualElement2.variantChildren.size - 1) * staggerChildren;
  var generateStaggerDuration = staggerDirection === 1 ? function(i10) {
    if (i10 === void 0) {
      i10 = 0;
    }
    return i10 * staggerChildren;
  } : function(i10) {
    if (i10 === void 0) {
      i10 = 0;
    }
    return maxStaggerDuration - i10 * staggerChildren;
  };
  Array.from(visualElement2.variantChildren).sort(sortByTreeOrder).forEach(function(child, i10) {
    animations2.push(animateVariant(child, variant, __assign(__assign({}, options), { delay: delayChildren + generateStaggerDuration(i10) })).then(function() {
      return child.notifyAnimationComplete(variant);
    }));
  });
  return Promise.all(animations2);
}
function sortByTreeOrder(a15, b7) {
  return a15.sortNodePosition(b7);
}
function shouldBlockAnimation(_a, key) {
  var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;
  var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}

// node_modules/framer-motion/dist/es/render/utils/animation-state.mjs
var variantPriorityOrder = [
  AnimationType.Animate,
  AnimationType.InView,
  AnimationType.Focus,
  AnimationType.Hover,
  AnimationType.Tap,
  AnimationType.Drag,
  AnimationType.Exit
];
var reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder), false).reverse();
var numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement2) {
  return function(animations2) {
    return Promise.all(animations2.map(function(_a) {
      var animation = _a.animation, options = _a.options;
      return animateVisualElement(visualElement2, animation, options);
    }));
  };
}
function createAnimationState(visualElement2) {
  var animate4 = animateList(visualElement2);
  var state = createState();
  var allAnimatedKeys = {};
  var isInitialRender = true;
  var buildResolvedTypeValues = function(acc, definition) {
    var resolved = resolveVariant(visualElement2, definition);
    if (resolved) {
      resolved.transition;
      var transitionEnd = resolved.transitionEnd, target = __rest(resolved, ["transition", "transitionEnd"]);
      acc = __assign(__assign(__assign({}, acc), target), transitionEnd);
    }
    return acc;
  };
  function isAnimated(key) {
    return allAnimatedKeys[key] !== void 0;
  }
  function setAnimateFunction(makeAnimator) {
    animate4 = makeAnimator(visualElement2);
  }
  function animateChanges(options, changedActiveType) {
    var _a;
    var props = visualElement2.getProps();
    var context = visualElement2.getVariantContext(true) || {};
    var animations2 = [];
    var removedKeys = /* @__PURE__ */ new Set();
    var encounteredKeys = {};
    var removedVariantIndex = Infinity;
    var _loop_1 = function(i11) {
      var type = reversePriorityOrder[i11];
      var typeState = state[type];
      var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];
      var propIsVariant = isVariantLabel(prop);
      var activeDelta = type === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i11;
      var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement2.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = __assign({}, encounteredKeys);
      if (
        // If it isn't active and hasn't *just* been set as inactive
        !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
        !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
        isAnimationControls(prop) || typeof prop === "boolean"
      ) {
        return "continue";
      }
      var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);
      var shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i11 > removedVariantIndex && propIsVariant;
      var definitionList = Array.isArray(prop) ? prop : [prop];
      var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
      if (activeDelta === false)
        resolvedValues = {};
      var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;
      var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);
      var markToAnimate = function(key2) {
        shouldAnimateType = true;
        removedKeys.delete(key2);
        typeState.needsAnimating[key2] = true;
      };
      for (var key in allKeys) {
        var next = resolvedValues[key];
        var prev = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        if (next !== prev) {
          if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {
            if (!shallowCompare(next, prev) || variantDidChange) {
              markToAnimate(key);
            } else {
              typeState.protectedKeys[key] = true;
            }
          } else if (next !== void 0) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);
      }
      if (isInitialRender && visualElement2.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      if (shouldAnimateType && !isInherited) {
        animations2.push.apply(animations2, __spreadArray([], __read(definitionList.map(function(animation) {
          return {
            animation,
            options: __assign({ type }, options)
          };
        })), false));
      }
    };
    for (var i10 = 0; i10 < numAnimationTypes; i10++) {
      _loop_1(i10);
    }
    allAnimatedKeys = __assign({}, encounteredKeys);
    if (removedKeys.size) {
      var fallbackAnimation_1 = {};
      removedKeys.forEach(function(key) {
        var fallbackTarget = visualElement2.getBaseTarget(key);
        if (fallbackTarget !== void 0) {
          fallbackAnimation_1[key] = fallbackTarget;
        }
      });
      animations2.push({ animation: fallbackAnimation_1 });
    }
    var shouldAnimate = Boolean(animations2.length);
    if (isInitialRender && props.initial === false && !visualElement2.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate4(animations2) : Promise.resolve();
  }
  function setActive(type, isActive, options) {
    var _a;
    if (state[type].isActive === isActive)
      return Promise.resolve();
    (_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function(child) {
      var _a2;
      return (_a2 = child.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(type, isActive);
    });
    state[type].isActive = isActive;
    var animations2 = animateChanges(options, type);
    for (var key in state) {
      state[key].protectedKeys = {};
    }
    return animations2;
  }
  return {
    isAnimated,
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: function() {
      return state;
    }
  };
}
function checkVariantsDidChange(prev, next) {
  if (typeof next === "string") {
    return next !== prev;
  } else if (isVariantLabels(next)) {
    return !shallowCompare(next, prev);
  }
  return false;
}
function createTypeState(isActive) {
  if (isActive === void 0) {
    isActive = false;
  }
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  var _a;
  return _a = {}, _a[AnimationType.Animate] = createTypeState(true), _a[AnimationType.InView] = createTypeState(), _a[AnimationType.Hover] = createTypeState(), _a[AnimationType.Tap] = createTypeState(), _a[AnimationType.Drag] = createTypeState(), _a[AnimationType.Focus] = createTypeState(), _a[AnimationType.Exit] = createTypeState(), _a;
}

// node_modules/framer-motion/dist/es/motion/features/animations.mjs
var animations = {
  animation: makeRenderlessComponent(function(_a) {
    var visualElement2 = _a.visualElement, animate4 = _a.animate;
    visualElement2.animationState || (visualElement2.animationState = createAnimationState(visualElement2));
    if (isAnimationControls(animate4)) {
      (0, import_react28.useEffect)(function() {
        return animate4.subscribe(visualElement2);
      }, [animate4]);
    }
  }),
  exit: makeRenderlessComponent(function(props) {
    var custom = props.custom, visualElement2 = props.visualElement;
    var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];
    var presenceContext = (0, import_react28.useContext)(PresenceContext);
    (0, import_react28.useEffect)(function() {
      var _a2, _b;
      visualElement2.isPresent = isPresent;
      var animation = (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });
      !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));
    }, [isPresent]);
  })
};

// node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs
var import_react29 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/gestures/PanSession.mjs
var PanSession = (
  /** @class */
  function() {
    function PanSession2(event, handlers, _a) {
      var _this = this;
      var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;
      this.startEvent = null;
      this.lastMoveEvent = null;
      this.lastMoveEventInfo = null;
      this.handlers = {};
      this.updatePoint = function() {
        if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))
          return;
        var info2 = getPanInfo(_this.lastMoveEventInfo, _this.history);
        var isPanStarted = _this.startEvent !== null;
        var isDistancePastThreshold = distance(info2.offset, { x: 0, y: 0 }) >= 3;
        if (!isPanStarted && !isDistancePastThreshold)
          return;
        var point2 = info2.point;
        var timestamp2 = getFrameData().timestamp;
        _this.history.push(__assign(__assign({}, point2), { timestamp: timestamp2 }));
        var _a2 = _this.handlers, onStart = _a2.onStart, onMove = _a2.onMove;
        if (!isPanStarted) {
          onStart && onStart(_this.lastMoveEvent, info2);
          _this.startEvent = _this.lastMoveEvent;
        }
        onMove && onMove(_this.lastMoveEvent, info2);
      };
      this.handlePointerMove = function(event2, info2) {
        _this.lastMoveEvent = event2;
        _this.lastMoveEventInfo = transformPoint(info2, _this.transformPagePoint);
        if (isMouseEvent(event2) && event2.buttons === 0) {
          _this.handlePointerUp(event2, info2);
          return;
        }
        es_default.update(_this.updatePoint, true);
      };
      this.handlePointerUp = function(event2, info2) {
        _this.end();
        var _a2 = _this.handlers, onEnd = _a2.onEnd, onSessionEnd = _a2.onSessionEnd;
        var panInfo = getPanInfo(transformPoint(info2, _this.transformPagePoint), _this.history);
        if (_this.startEvent && onEnd) {
          onEnd(event2, panInfo);
        }
        onSessionEnd && onSessionEnd(event2, panInfo);
      };
      if (isTouchEvent(event) && event.touches.length > 1)
        return;
      this.handlers = handlers;
      this.transformPagePoint = transformPagePoint;
      var info = extractEventInfo(event);
      var initialInfo = transformPoint(info, this.transformPagePoint);
      var point = initialInfo.point;
      var timestamp = getFrameData().timestamp;
      this.history = [__assign(__assign({}, point), { timestamp })];
      var onSessionStart = handlers.onSessionStart;
      onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));
      this.removeListeners = pipe(addPointerEvent(window, "pointermove", this.handlePointerMove), addPointerEvent(window, "pointerup", this.handlePointerUp), addPointerEvent(window, "pointercancel", this.handlePointerUp));
    }
    PanSession2.prototype.updateHandlers = function(handlers) {
      this.handlers = handlers;
    };
    PanSession2.prototype.end = function() {
      this.removeListeners && this.removeListeners();
      cancelSync.update(this.updatePoint);
    };
    return PanSession2;
  }()
);
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a15, b7) {
  return { x: a15.x - b7.x, y: a15.y - b7.y };
}
function getPanInfo(_a, history) {
  var point = _a.point;
  return {
    point,
    delta: subtractPoint(point, lastDevicePoint(history)),
    offset: subtractPoint(point, startDevicePoint(history)),
    velocity: getVelocity2(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
function getVelocity2(history, timeDelta) {
  if (history.length < 2) {
    return { x: 0, y: 0 };
  }
  var i10 = history.length - 1;
  var timestampedPoint = null;
  var lastPoint = lastDevicePoint(history);
  while (i10 >= 0) {
    timestampedPoint = history[i10];
    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {
      break;
    }
    i10--;
  }
  if (!timestampedPoint) {
    return { x: 0, y: 0 };
  }
  var time2 = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
  if (time2 === 0) {
    return { x: 0, y: 0 };
  }
  var currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time2,
    y: (lastPoint.y - timestampedPoint.y) / time2
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}

// node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs
function calcLength(axis) {
  return axis.max - axis.min;
}
function isNear(value, target, maxDistance) {
  if (target === void 0) {
    target = 0;
  }
  if (maxDistance === void 0) {
    maxDistance = 0.01;
  }
  return distance(value, target) < maxDistance;
}
function calcAxisDelta(delta, source, target, origin) {
  if (origin === void 0) {
    origin = 0.5;
  }
  delta.origin = origin;
  delta.originPoint = mix(source.min, source.max, delta.origin);
  delta.scale = calcLength(target) / calcLength(source);
  if (isNear(delta.scale, 1, 1e-4) || isNaN(delta.scale))
    delta.scale = 1;
  delta.translate = mix(target.min, target.max, delta.origin) - delta.originPoint;
  if (isNear(delta.translate) || isNaN(delta.translate))
    delta.translate = 0;
}
function calcBoxDelta(delta, source, target, origin) {
  calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);
  calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);
}
function calcRelativeAxis(target, relative, parent) {
  target.min = parent.min + relative.min;
  target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
  calcRelativeAxis(target.x, relative.x, parent.x);
  calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout, parent) {
  target.min = layout.min - parent.min;
  target.max = target.min + calcLength(layout);
}
function calcRelativePosition(target, layout, parent) {
  calcRelativeAxisPosition(target.x, layout.x, parent.x);
  calcRelativeAxisPosition(target.y, layout.y, parent.y);
}

// node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints(point, _a, elastic) {
  var min = _a.min, max = _a.max;
  if (min !== void 0 && point < min) {
    point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);
  } else if (max !== void 0 && point > max) {
    point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);
  }
  return point;
}
function calcRelativeAxisConstraints(axis, min, max) {
  return {
    min: min !== void 0 ? axis.min + min : void 0,
    max: max !== void 0 ? axis.max + max - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, _a) {
  var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  var _a;
  var min = constraintsAxis.min - layoutAxis.min;
  var max = constraintsAxis.max - layoutAxis.max;
  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
    _a = __read([max, min], 2), min = _a[0], max = _a[1];
  }
  return { min, max };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin2(source, target) {
  var origin = 0.5;
  var sourceLength = calcLength(source);
  var targetLength = calcLength(target);
  if (targetLength > sourceLength) {
    origin = progress(target.min, target.max - sourceLength, source.min);
  } else if (sourceLength > targetLength) {
    origin = progress(source.min, source.max - targetLength, target.min);
  }
  return clamp2(0, 1, origin);
}
function rebaseAxisConstraints(layout, constraints) {
  var relativeConstraints = {};
  if (constraints.min !== void 0) {
    relativeConstraints.min = constraints.min - layout.min;
  }
  if (constraints.max !== void 0) {
    relativeConstraints.max = constraints.max - layout.min;
  }
  return relativeConstraints;
}
var defaultElastic = 0.35;
function resolveDragElastic(dragElastic) {
  if (dragElastic === void 0) {
    dragElastic = defaultElastic;
  }
  if (dragElastic === false) {
    dragElastic = 0;
  } else if (dragElastic === true) {
    dragElastic = defaultElastic;
  }
  return {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label) {
  var _a;
  return typeof dragElastic === "number" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;
}

// node_modules/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta = function() {
  return {
    translate: 0,
    scale: 1,
    origin: 0,
    originPoint: 0
  };
};
var createDelta = function() {
  return {
    x: createAxisDelta(),
    y: createAxisDelta()
  };
};
var createAxis = function() {
  return { min: 0, max: 0 };
};
var createBox = function() {
  return {
    x: createAxis(),
    y: createAxis()
  };
};

// node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis(callback) {
  return [callback("x"), callback("y")];
}

// node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox(_a) {
  var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;
  return {
    x: { min: left, max: right },
    y: { min: top, max: bottom }
  };
}
function convertBoxToBoundingBox(_a) {
  var x7 = _a.x, y9 = _a.y;
  return { top: y9.min, right: x7.max, bottom: y9.max, left: x7.min };
}
function transformBoxPoints(point, transformPoint2) {
  if (!transformPoint2)
    return point;
  var topLeft = transformPoint2({ x: point.left, y: point.top });
  var bottomRight = transformPoint2({ x: point.right, y: point.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}

// node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale(scale2) {
  return scale2 === void 0 || scale2 === 1;
}
function hasScale(_a) {
  var scale2 = _a.scale, scaleX = _a.scaleX, scaleY = _a.scaleY;
  return !isIdentityScale(scale2) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
}
function hasTransform(values) {
  return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;
}
function hasTranslate(value) {
  return value && value !== "0%";
}

// node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint(point, scale2, originPoint) {
  var distanceFromOrigin = point - originPoint;
  var scaled = scale2 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point, translate, scale2, originPoint, boxScale) {
  if (boxScale !== void 0) {
    point = scalePoint(point, boxScale, originPoint);
  }
  return scalePoint(point, scale2, originPoint) + translate;
}
function applyAxisDelta(axis, translate, scale2, originPoint, boxScale) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale2 === void 0) {
    scale2 = 1;
  }
  axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function applyBoxDelta(box, _a) {
  var x7 = _a.x, y9 = _a.y;
  applyAxisDelta(box.x, x7.translate, x7.scale, x7.originPoint);
  applyAxisDelta(box.y, y9.translate, y9.scale, y9.originPoint);
}
function applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {
  var _a, _b;
  if (isSharedTransition === void 0) {
    isSharedTransition = false;
  }
  var treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  var node;
  var delta;
  for (var i10 = 0; i10 < treeLength; i10++) {
    node = treePath[i10];
    delta = node.projectionDelta;
    if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === "contents")
      continue;
    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {
      transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });
    }
    if (delta) {
      treeScale.x *= delta.x.scale;
      treeScale.y *= delta.y.scale;
      applyBoxDelta(box, delta);
    }
    if (isSharedTransition && hasTransform(node.latestValues)) {
      transformBox(box, node.latestValues);
    }
  }
}
function translateAxis(axis, distance2) {
  axis.min = axis.min + distance2;
  axis.max = axis.max + distance2;
}
function transformAxis(axis, transforms2, _a) {
  var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  var axisOrigin = transforms2[originKey] !== void 0 ? transforms2[originKey] : 0.5;
  var originPoint = mix(axis.min, axis.max, axisOrigin);
  applyAxisDelta(axis, transforms2[key], transforms2[scaleKey], originPoint, transforms2.scale);
}
var xKeys = ["x", "scaleX", "originX"];
var yKeys = ["y", "scaleY", "originY"];
function transformBox(box, transform2) {
  transformAxis(box.x, transform2, xKeys);
  transformAxis(box.y, transform2, yKeys);
}

// node_modules/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox(instance, transformPoint2) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
}
function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
  var viewportBox = measureViewportBox(element, transformPagePoint);
  var scroll2 = rootProjectionNode2.scroll;
  if (scroll2) {
    translateAxis(viewportBox.x, scroll2.x);
    translateAxis(viewportBox.y, scroll2.y);
  }
  return viewportBox;
}

// node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
var elementDragControls = /* @__PURE__ */ new WeakMap();
var VisualElementDragControls = (
  /** @class */
  function() {
    function VisualElementDragControls2(visualElement2) {
      this.openGlobalLock = null;
      this.isDragging = false;
      this.currentDirection = null;
      this.originPoint = { x: 0, y: 0 };
      this.constraints = false;
      this.hasMutatedConstraints = false;
      this.elastic = createBox();
      this.visualElement = visualElement2;
    }
    VisualElementDragControls2.prototype.start = function(originEvent, _a) {
      var _this = this;
      var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c;
      if (this.visualElement.isPresent === false)
        return;
      var onSessionStart = function(event) {
        _this.stopAnimation();
        if (snapToCursor) {
          _this.snapToCursor(extractEventInfo(event, "page").point);
        }
      };
      var onStart = function(event, info) {
        var _a2;
        var _b2 = _this.getProps(), drag2 = _b2.drag, dragPropagation = _b2.dragPropagation, onDragStart = _b2.onDragStart;
        if (drag2 && !dragPropagation) {
          if (_this.openGlobalLock)
            _this.openGlobalLock();
          _this.openGlobalLock = getGlobalLock(drag2);
          if (!_this.openGlobalLock)
            return;
        }
        _this.isDragging = true;
        _this.currentDirection = null;
        _this.resolveConstraints();
        if (_this.visualElement.projection) {
          _this.visualElement.projection.isAnimationBlocked = true;
          _this.visualElement.projection.target = void 0;
        }
        eachAxis(function(axis) {
          var _a3, _b3;
          var current = _this.getAxisMotionValue(axis).get() || 0;
          if (percent.test(current)) {
            var measuredAxis = (_b3 = (_a3 = _this.visualElement.projection) === null || _a3 === void 0 ? void 0 : _a3.layout) === null || _b3 === void 0 ? void 0 : _b3.actual[axis];
            if (measuredAxis) {
              var length_1 = calcLength(measuredAxis);
              current = length_1 * (parseFloat(current) / 100);
            }
          }
          _this.originPoint[axis] = current;
        });
        onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);
        (_a2 = _this.visualElement.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Drag, true);
      };
      var onMove = function(event, info) {
        var _a2 = _this.getProps(), dragPropagation = _a2.dragPropagation, dragDirectionLock = _a2.dragDirectionLock, onDirectionLock = _a2.onDirectionLock, onDrag = _a2.onDrag;
        if (!dragPropagation && !_this.openGlobalLock)
          return;
        var offset = info.offset;
        if (dragDirectionLock && _this.currentDirection === null) {
          _this.currentDirection = getCurrentDirection(offset);
          if (_this.currentDirection !== null) {
            onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);
          }
          return;
        }
        _this.updateAxis("x", info.point, offset);
        _this.updateAxis("y", info.point, offset);
        _this.visualElement.syncRender();
        onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);
      };
      var onSessionEnd = function(event, info) {
        return _this.stop(event, info);
      };
      this.panSession = new PanSession(originEvent, {
        onSessionStart,
        onStart,
        onMove,
        onSessionEnd
      }, { transformPagePoint: this.visualElement.getTransformPagePoint() });
    };
    VisualElementDragControls2.prototype.stop = function(event, info) {
      var isDragging = this.isDragging;
      this.cancel();
      if (!isDragging)
        return;
      var velocity = info.velocity;
      this.startAnimation(velocity);
      var onDragEnd = this.getProps().onDragEnd;
      onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);
    };
    VisualElementDragControls2.prototype.cancel = function() {
      var _a, _b;
      this.isDragging = false;
      if (this.visualElement.projection) {
        this.visualElement.projection.isAnimationBlocked = false;
      }
      (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();
      this.panSession = void 0;
      var dragPropagation = this.getProps().dragPropagation;
      if (!dragPropagation && this.openGlobalLock) {
        this.openGlobalLock();
        this.openGlobalLock = null;
      }
      (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);
    };
    VisualElementDragControls2.prototype.updateAxis = function(axis, _point, offset) {
      var drag2 = this.getProps().drag;
      if (!offset || !shouldDrag(axis, drag2, this.currentDirection))
        return;
      var axisValue = this.getAxisMotionValue(axis);
      var next = this.originPoint[axis] + offset[axis];
      if (this.constraints && this.constraints[axis]) {
        next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);
      }
      axisValue.set(next);
    };
    VisualElementDragControls2.prototype.resolveConstraints = function() {
      var _this = this;
      var _a = this.getProps(), dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;
      var layout = (this.visualElement.projection || {}).layout;
      var prevConstraints = this.constraints;
      if (dragConstraints && isRefObject(dragConstraints)) {
        if (!this.constraints) {
          this.constraints = this.resolveRefConstraints();
        }
      } else {
        if (dragConstraints && layout) {
          this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);
        } else {
          this.constraints = false;
        }
      }
      this.elastic = resolveDragElastic(dragElastic);
      if (prevConstraints !== this.constraints && layout && this.constraints && !this.hasMutatedConstraints) {
        eachAxis(function(axis) {
          if (_this.getAxisMotionValue(axis)) {
            _this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]);
          }
        });
      }
    };
    VisualElementDragControls2.prototype.resolveRefConstraints = function() {
      var _a = this.getProps(), constraints = _a.dragConstraints, onMeasureDragConstraints = _a.onMeasureDragConstraints;
      if (!constraints || !isRefObject(constraints))
        return false;
      var constraintsElement = constraints.current;
      invariant(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
      var projection = this.visualElement.projection;
      if (!projection || !projection.layout)
        return false;
      var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
      var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);
      if (onMeasureDragConstraints) {
        var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
        this.hasMutatedConstraints = !!userConstraints;
        if (userConstraints) {
          measuredConstraints = convertBoundingBoxToBox(userConstraints);
        }
      }
      return measuredConstraints;
    };
    VisualElementDragControls2.prototype.startAnimation = function(velocity) {
      var _this = this;
      var _a = this.getProps(), drag2 = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, dragSnapToOrigin = _a.dragSnapToOrigin, onDragTransitionEnd = _a.onDragTransitionEnd;
      var constraints = this.constraints || {};
      var momentumAnimations = eachAxis(function(axis) {
        var _a2;
        if (!shouldDrag(axis, drag2, _this.currentDirection)) {
          return;
        }
        var transition = (_a2 = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a2 !== void 0 ? _a2 : {};
        if (dragSnapToOrigin)
          transition = { min: 0, max: 0 };
        var bounceStiffness = dragElastic ? 200 : 1e6;
        var bounceDamping = dragElastic ? 40 : 1e7;
        var inertia2 = __assign(__assign({ type: "inertia", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness, bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);
        return _this.startAxisValueAnimation(axis, inertia2);
      });
      return Promise.all(momentumAnimations).then(onDragTransitionEnd);
    };
    VisualElementDragControls2.prototype.startAxisValueAnimation = function(axis, transition) {
      var axisValue = this.getAxisMotionValue(axis);
      return startAnimation(axis, axisValue, 0, transition);
    };
    VisualElementDragControls2.prototype.stopAnimation = function() {
      var _this = this;
      eachAxis(function(axis) {
        return _this.getAxisMotionValue(axis).stop();
      });
    };
    VisualElementDragControls2.prototype.getAxisMotionValue = function(axis) {
      var _a, _b;
      var dragKey = "_drag" + axis.toUpperCase();
      var externalMotionValue = this.visualElement.getProps()[dragKey];
      return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);
    };
    VisualElementDragControls2.prototype.snapToCursor = function(point) {
      var _this = this;
      eachAxis(function(axis) {
        var drag2 = _this.getProps().drag;
        if (!shouldDrag(axis, drag2, _this.currentDirection))
          return;
        var projection = _this.visualElement.projection;
        var axisValue = _this.getAxisMotionValue(axis);
        if (projection && projection.layout) {
          var _a = projection.layout.actual[axis], min = _a.min, max = _a.max;
          axisValue.set(point[axis] - mix(min, max, 0.5));
        }
      });
    };
    VisualElementDragControls2.prototype.scalePositionWithinConstraints = function() {
      var _this = this;
      var _a;
      var _b = this.getProps(), drag2 = _b.drag, dragConstraints = _b.dragConstraints;
      var projection = this.visualElement.projection;
      if (!isRefObject(dragConstraints) || !projection || !this.constraints)
        return;
      this.stopAnimation();
      var boxProgress = { x: 0, y: 0 };
      eachAxis(function(axis) {
        var axisValue = _this.getAxisMotionValue(axis);
        if (axisValue) {
          var latest = axisValue.get();
          boxProgress[axis] = calcOrigin2({ min: latest, max: latest }, _this.constraints[axis]);
        }
      });
      var transformTemplate = this.visualElement.getProps().transformTemplate;
      this.visualElement.getInstance().style.transform = transformTemplate ? transformTemplate({}, "") : "none";
      (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
      projection.updateLayout();
      this.resolveConstraints();
      eachAxis(function(axis) {
        if (!shouldDrag(axis, drag2, null))
          return;
        var axisValue = _this.getAxisMotionValue(axis);
        var _a2 = _this.constraints[axis], min = _a2.min, max = _a2.max;
        axisValue.set(mix(min, max, boxProgress[axis]));
      });
    };
    VisualElementDragControls2.prototype.addListeners = function() {
      var _this = this;
      var _a;
      elementDragControls.set(this.visualElement, this);
      var element = this.visualElement.getInstance();
      var stopPointerListener = addPointerEvent(element, "pointerdown", function(event) {
        var _a2 = _this.getProps(), drag2 = _a2.drag, _b = _a2.dragListener, dragListener = _b === void 0 ? true : _b;
        drag2 && dragListener && _this.start(event);
      });
      var measureDragConstraints = function() {
        var dragConstraints = _this.getProps().dragConstraints;
        if (isRefObject(dragConstraints)) {
          _this.constraints = _this.resolveRefConstraints();
        }
      };
      var projection = this.visualElement.projection;
      var stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
      if (projection && !projection.layout) {
        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
        projection.updateLayout();
      }
      measureDragConstraints();
      var stopResizeListener = addDomEvent(window, "resize", function() {
        return _this.scalePositionWithinConstraints();
      });
      projection.addEventListener("didUpdate", function(_a2) {
        var delta = _a2.delta, hasLayoutChanged = _a2.hasLayoutChanged;
        if (_this.isDragging && hasLayoutChanged) {
          eachAxis(function(axis) {
            var motionValue2 = _this.getAxisMotionValue(axis);
            if (!motionValue2)
              return;
            _this.originPoint[axis] += delta[axis].translate;
            motionValue2.set(motionValue2.get() + delta[axis].translate);
          });
          _this.visualElement.syncRender();
        }
      });
      return function() {
        stopResizeListener();
        stopPointerListener();
        stopMeasureLayoutListener();
      };
    };
    VisualElementDragControls2.prototype.getProps = function() {
      var props = this.visualElement.getProps();
      var _a = props.drag, drag2 = _a === void 0 ? false : _a, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? false : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? false : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? false : _d, _e5 = props.dragElastic, dragElastic = _e5 === void 0 ? defaultElastic : _e5, _f = props.dragMomentum, dragMomentum = _f === void 0 ? true : _f;
      return __assign(__assign({}, props), { drag: drag2, dragDirectionLock, dragPropagation, dragConstraints, dragElastic, dragMomentum });
    };
    return VisualElementDragControls2;
  }()
);
function shouldDrag(direction, drag2, currentDirection) {
  return (drag2 === true || drag2 === direction) && (currentDirection === null || currentDirection === direction);
}
function getCurrentDirection(offset, lockThreshold) {
  if (lockThreshold === void 0) {
    lockThreshold = 10;
  }
  var direction = null;
  if (Math.abs(offset.y) > lockThreshold) {
    direction = "y";
  } else if (Math.abs(offset.x) > lockThreshold) {
    direction = "x";
  }
  return direction;
}

// node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs
function useDrag(props) {
  var groupDragControls = props.dragControls, visualElement2 = props.visualElement;
  var dragControls = useConstant(function() {
    return new VisualElementDragControls(visualElement2);
  });
  (0, import_react29.useEffect)(function() {
    return groupDragControls && groupDragControls.subscribe(dragControls);
  }, [dragControls, groupDragControls]);
  (0, import_react29.useEffect)(function() {
    return dragControls.addListeners();
  }, [dragControls]);
}

// node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs
var import_react30 = __toESM(require_react(), 1);
function usePanGesture(_a) {
  var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement2 = _a.visualElement;
  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;
  var panSession = (0, import_react30.useRef)(null);
  var transformPagePoint = (0, import_react30.useContext)(MotionConfigContext).transformPagePoint;
  var handlers = {
    onSessionStart: onPanSessionStart,
    onStart: onPanStart,
    onMove: onPan,
    onEnd: function(event, info) {
      panSession.current = null;
      onPanEnd && onPanEnd(event, info);
    }
  };
  (0, import_react30.useEffect)(function() {
    if (panSession.current !== null) {
      panSession.current.updateHandlers(handlers);
    }
  });
  function onPointerDown(event) {
    panSession.current = new PanSession(event, handlers, {
      transformPagePoint
    });
  }
  usePointerEvent(visualElement2, "pointerdown", hasPanEvents && onPointerDown);
  useUnmountEffect(function() {
    return panSession.current && panSession.current.end();
  });
}

// node_modules/framer-motion/dist/es/motion/features/drag.mjs
var drag = {
  pan: makeRenderlessComponent(usePanGesture),
  drag: makeRenderlessComponent(useDrag)
};

// node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs
var names = [
  "LayoutMeasure",
  "BeforeLayoutMeasure",
  "LayoutUpdate",
  "ViewportBoxUpdate",
  "Update",
  "Render",
  "AnimationComplete",
  "LayoutAnimationComplete",
  "AnimationStart",
  "LayoutAnimationStart",
  "SetAxisTarget",
  "Unmount"
];
function createLifecycles() {
  var managers = names.map(function() {
    return new SubscriptionManager();
  });
  var propSubscriptions = {};
  var lifecycles = {
    clearAllListeners: function() {
      return managers.forEach(function(manager) {
        return manager.clear();
      });
    },
    updatePropListeners: function(props) {
      names.forEach(function(name) {
        var _a;
        var on2 = "on" + name;
        var propListener = props[on2];
        (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);
        if (propListener) {
          propSubscriptions[name] = lifecycles[on2](propListener);
        }
      });
    }
  };
  managers.forEach(function(manager, i10) {
    lifecycles["on" + names[i10]] = function(handler) {
      return manager.add(handler);
    };
    lifecycles["notify" + names[i10]] = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return manager.notify.apply(manager, __spreadArray([], __read(args), false));
    };
  });
  return lifecycles;
}

// node_modules/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps(element, next, prev) {
  var _a;
  for (var key in next) {
    var nextValue = next[key];
    var prevValue = prev[key];
    if (isMotionValue(nextValue)) {
      element.addValue(key, nextValue);
      if (true) {
        warnOnce(nextValue.version === "6.5.1", "Attempting to mix Framer Motion versions ".concat(nextValue.version, " with 6.5.1 may not work as expected."));
      }
    } else if (isMotionValue(prevValue)) {
      element.addValue(key, motionValue(nextValue));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        var existingValue = element.getValue(key);
        !existingValue.hasAnimated && existingValue.set(nextValue);
      } else {
        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));
      }
    }
  }
  for (var key in prev) {
    if (next[key] === void 0)
      element.removeValue(key);
  }
  return next;
}

// node_modules/framer-motion/dist/es/render/index.mjs
var visualElement = function(_a) {
  var _b = _a.treeType, treeType = _b === void 0 ? "" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox2 = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps;
  return function(_a2, options) {
    var parent = _a2.parent, props = _a2.props, presenceId = _a2.presenceId, blockInitialAnimation = _a2.blockInitialAnimation, visualState = _a2.visualState, shouldReduceMotion = _a2.shouldReduceMotion;
    if (options === void 0) {
      options = {};
    }
    var isMounted = false;
    var latestValues = visualState.latestValues, renderState = visualState.renderState;
    var instance;
    var lifecycles = createLifecycles();
    var values = /* @__PURE__ */ new Map();
    var valueSubscriptions = /* @__PURE__ */ new Map();
    var prevMotionValues = {};
    var baseTarget = __assign({}, latestValues);
    var removeFromVariantTree;
    function render() {
      if (!instance || !isMounted)
        return;
      triggerBuild();
      renderInstance(instance, renderState, props.style, element.projection);
    }
    function triggerBuild() {
      build(element, renderState, latestValues, options, props);
    }
    function update() {
      lifecycles.notifyUpdate(latestValues);
    }
    function bindToMotionValue(key2, value2) {
      var removeOnChange = value2.onChange(function(latestValue) {
        latestValues[key2] = latestValue;
        props.onUpdate && es_default.update(update, false, true);
      });
      var removeOnRenderRequest = value2.onRenderRequest(element.scheduleRender);
      valueSubscriptions.set(key2, function() {
        removeOnChange();
        removeOnRenderRequest();
      });
    }
    var initialMotionValues = scrapeMotionValuesFromProps3(props);
    for (var key in initialMotionValues) {
      var value = initialMotionValues[key];
      if (latestValues[key] !== void 0 && isMotionValue(value)) {
        value.set(latestValues[key], false);
      }
    }
    var isControllingVariants = checkIfControllingVariants(props);
    var isVariantNode = checkIfVariantNode(props);
    var element = __assign(__assign({
      treeType,
      /**
       * This is a mirror of the internal instance prop, which keeps
       * VisualElement type-compatible with React's RefObject.
       */
      current: null,
      /**
       * The depth of this visual element within the visual element tree.
       */
      depth: parent ? parent.depth + 1 : 0,
      parent,
      children: /* @__PURE__ */ new Set(),
      /**
       *
       */
      presenceId,
      shouldReduceMotion,
      /**
       * If this component is part of the variant tree, it should track
       * any children that are also part of the tree. This is essentially
       * a shadow tree to simplify logic around how to stagger over children.
       */
      variantChildren: isVariantNode ? /* @__PURE__ */ new Set() : void 0,
      /**
       * Whether this instance is visible. This can be changed imperatively
       * by the projection tree, is analogous to CSS's visibility in that
       * hidden elements should take up layout, and needs enacting by the configured
       * render function.
       */
      isVisible: void 0,
      /**
       * Normally, if a component is controlled by a parent's variants, it can
       * rely on that ancestor to trigger animations further down the tree.
       * However, if a component is created after its parent is mounted, the parent
       * won't trigger that mount animation so the child needs to.
       *
       * TODO: This might be better replaced with a method isParentMounted
       */
      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),
      /**
       * This can be set by AnimatePresence to force components that mount
       * at the same time as it to mount as if they have initial={false} set.
       */
      blockInitialAnimation,
      /**
       * Determine whether this component has mounted yet. This is mostly used
       * by variant children to determine whether they need to trigger their
       * own animations on mount.
       */
      isMounted: function() {
        return Boolean(instance);
      },
      mount: function(newInstance) {
        isMounted = true;
        instance = element.current = newInstance;
        if (element.projection) {
          element.projection.mount(newInstance);
        }
        if (isVariantNode && parent && !isControllingVariants) {
          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);
        }
        values.forEach(function(value2, key2) {
          return bindToMotionValue(key2, value2);
        });
        parent === null || parent === void 0 ? void 0 : parent.children.add(element);
        element.setProps(props);
      },
      /**
       *
       */
      unmount: function() {
        var _a3;
        (_a3 = element.projection) === null || _a3 === void 0 ? void 0 : _a3.unmount();
        cancelSync.update(update);
        cancelSync.render(render);
        valueSubscriptions.forEach(function(remove) {
          return remove();
        });
        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();
        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);
        lifecycles.clearAllListeners();
        instance = void 0;
        isMounted = false;
      },
      /**
       * Add a child visual element to our set of children.
       */
      addVariantChild: function(child) {
        var _a3;
        var closestVariantNode = element.getClosestVariantNode();
        if (closestVariantNode) {
          (_a3 = closestVariantNode.variantChildren) === null || _a3 === void 0 ? void 0 : _a3.add(child);
          return function() {
            return closestVariantNode.variantChildren.delete(child);
          };
        }
      },
      sortNodePosition: function(other) {
        if (!sortNodePosition || treeType !== other.treeType)
          return 0;
        return sortNodePosition(element.getInstance(), other.getInstance());
      },
      /**
       * Returns the closest variant node in the tree starting from
       * this visual element.
       */
      getClosestVariantNode: function() {
        return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();
      },
      /**
       * Expose the latest layoutId prop.
       */
      getLayoutId: function() {
        return props.layoutId;
      },
      /**
       * Returns the current instance.
       */
      getInstance: function() {
        return instance;
      },
      /**
       * Get/set the latest static values.
       */
      getStaticValue: function(key2) {
        return latestValues[key2];
      },
      setStaticValue: function(key2, value2) {
        return latestValues[key2] = value2;
      },
      /**
       * Returns the latest motion value state. Currently only used to take
       * a snapshot of the visual element - perhaps this can return the whole
       * visual state
       */
      getLatestValues: function() {
        return latestValues;
      },
      /**
       * Set the visiblity of the visual element. If it's changed, schedule
       * a render to reflect these changes.
       */
      setVisibility: function(visibility) {
        if (element.isVisible === visibility)
          return;
        element.isVisible = visibility;
        element.scheduleRender();
      },
      /**
       * Make a target animatable by Popmotion. For instance, if we're
       * trying to animate width from 100px to 100vw we need to measure 100vw
       * in pixels to determine what we really need to animate to. This is also
       * pluggable to support Framer's custom value types like Color,
       * and CSS variables.
       */
      makeTargetAnimatable: function(target, canMutate) {
        if (canMutate === void 0) {
          canMutate = true;
        }
        return makeTargetAnimatable(element, target, props, canMutate);
      },
      /**
       * Measure the current viewport box with or without transforms.
       * Only measures axis-aligned boxes, rotate and skew must be manually
       * removed with a re-render to work.
       */
      measureViewportBox: function() {
        return measureViewportBox2(instance, props);
      },
      // Motion values ========================
      /**
       * Add a motion value and bind it to this visual element.
       */
      addValue: function(key2, value2) {
        if (element.hasValue(key2))
          element.removeValue(key2);
        values.set(key2, value2);
        latestValues[key2] = value2.get();
        bindToMotionValue(key2, value2);
      },
      /**
       * Remove a motion value and unbind any active subscriptions.
       */
      removeValue: function(key2) {
        var _a3;
        values.delete(key2);
        (_a3 = valueSubscriptions.get(key2)) === null || _a3 === void 0 ? void 0 : _a3();
        valueSubscriptions.delete(key2);
        delete latestValues[key2];
        removeValueFromRenderState(key2, renderState);
      },
      /**
       * Check whether we have a motion value for this key
       */
      hasValue: function(key2) {
        return values.has(key2);
      },
      /**
       * Get a motion value for this key. If called with a default
       * value, we'll create one if none exists.
       */
      getValue: function(key2, defaultValue) {
        var value2 = values.get(key2);
        if (value2 === void 0 && defaultValue !== void 0) {
          value2 = motionValue(defaultValue);
          element.addValue(key2, value2);
        }
        return value2;
      },
      /**
       * Iterate over our motion values.
       */
      forEachValue: function(callback) {
        return values.forEach(callback);
      },
      /**
       * If we're trying to animate to a previously unencountered value,
       * we need to check for it in our state and as a last resort read it
       * directly from the instance (which might have performance implications).
       */
      readValue: function(key2) {
        var _a3;
        return (_a3 = latestValues[key2]) !== null && _a3 !== void 0 ? _a3 : readValueFromInstance(instance, key2, options);
      },
      /**
       * Set the base target to later animate back to. This is currently
       * only hydrated on creation and when we first read a value.
       */
      setBaseTarget: function(key2, value2) {
        baseTarget[key2] = value2;
      },
      /**
       * Find the base target for a value thats been removed from all animation
       * props.
       */
      getBaseTarget: function(key2) {
        if (getBaseTarget) {
          var target = getBaseTarget(props, key2);
          if (target !== void 0 && !isMotionValue(target))
            return target;
        }
        return baseTarget[key2];
      }
    }, lifecycles), {
      /**
       * Build the renderer state based on the latest visual state.
       */
      build: function() {
        triggerBuild();
        return renderState;
      },
      /**
       * Schedule a render on the next animation frame.
       */
      scheduleRender: function() {
        es_default.render(render, false, true);
      },
      /**
       * Synchronously fire render. It's prefered that we batch renders but
       * in many circumstances, like layout measurement, we need to run this
       * synchronously. However in those instances other measures should be taken
       * to batch reads/writes.
       */
      syncRender: render,
      /**
       * Update the provided props. Ensure any newly-added motion values are
       * added to our map, old ones removed, and listeners updated.
       */
      setProps: function(newProps) {
        if (newProps.transformTemplate || props.transformTemplate) {
          element.scheduleRender();
        }
        props = newProps;
        lifecycles.updatePropListeners(newProps);
        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps3(props), prevMotionValues);
      },
      getProps: function() {
        return props;
      },
      // Variants ==============================
      /**
       * Returns the variant definition with a given name.
       */
      getVariant: function(name) {
        var _a3;
        return (_a3 = props.variants) === null || _a3 === void 0 ? void 0 : _a3[name];
      },
      /**
       * Returns the defined default transition on this component.
       */
      getDefaultTransition: function() {
        return props.transition;
      },
      getTransformPagePoint: function() {
        return props.transformPagePoint;
      },
      /**
       * Used by child variant nodes to get the closest ancestor variant props.
       */
      getVariantContext: function(startAtParent) {
        if (startAtParent === void 0) {
          startAtParent = false;
        }
        if (startAtParent)
          return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();
        if (!isControllingVariants) {
          var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};
          if (props.initial !== void 0) {
            context_1.initial = props.initial;
          }
          return context_1;
        }
        var context = {};
        for (var i10 = 0; i10 < numVariantProps; i10++) {
          var name_1 = variantProps[i10];
          var prop = props[name_1];
          if (isVariantLabel(prop) || prop === false) {
            context[name_1] = prop;
          }
        }
        return context;
      }
    });
    return element;
  };
};
var variantProps = __spreadArray(["initial"], __read(variantPriorityOrder), false);
var numVariantProps = variantProps.length;

// node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs
function isCSSVariable2(value) {
  return typeof value === "string" && value.startsWith("var(--");
}
var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
  var match = cssVariableRegex.exec(current);
  if (!match)
    return [,];
  var _a = __read(match, 3), token = _a[1], fallback = _a[2];
  return [token, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth) {
  if (depth === void 0) {
    depth = 1;
  }
  invariant(depth <= maxDepth, 'Max CSS variable fallback depth detected in property "'.concat(current, '". This may indicate a circular fallback dependency.'));
  var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];
  if (!token)
    return;
  var resolved = window.getComputedStyle(element).getPropertyValue(token);
  if (resolved) {
    return resolved.trim();
  } else if (isCSSVariable2(fallback)) {
    return getVariableValue(fallback, element, depth + 1);
  } else {
    return fallback;
  }
}
function resolveCSSVariables(visualElement2, _a, transitionEnd) {
  var _b;
  var target = __rest(_a, []);
  var element = visualElement2.getInstance();
  if (!(element instanceof Element))
    return { target, transitionEnd };
  if (transitionEnd) {
    transitionEnd = __assign({}, transitionEnd);
  }
  visualElement2.forEachValue(function(value) {
    var current2 = value.get();
    if (!isCSSVariable2(current2))
      return;
    var resolved2 = getVariableValue(current2, element);
    if (resolved2)
      value.set(resolved2);
  });
  for (var key in target) {
    var current = target[key];
    if (!isCSSVariable2(current))
      continue;
    var resolved = getVariableValue(current, element);
    if (!resolved)
      continue;
    target[key] = resolved;
    if (transitionEnd)
      (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : transitionEnd[key] = current;
  }
  return { target, transitionEnd };
}

// node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs
var positionalKeys = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y"
]);
var isPositionalKey = function(key) {
  return positionalKeys.has(key);
};
var hasPositionalKey = function(target) {
  return Object.keys(target).some(isPositionalKey);
};
var setAndResetVelocity = function(value, to3) {
  value.set(to3, false);
  value.set(to3);
};
var isNumOrPxType = function(v5) {
  return v5 === number || v5 === px;
};
var BoundingBoxDimension;
(function(BoundingBoxDimension2) {
  BoundingBoxDimension2["width"] = "width";
  BoundingBoxDimension2["height"] = "height";
  BoundingBoxDimension2["left"] = "left";
  BoundingBoxDimension2["right"] = "right";
  BoundingBoxDimension2["top"] = "top";
  BoundingBoxDimension2["bottom"] = "bottom";
})(BoundingBoxDimension || (BoundingBoxDimension = {}));
var getPosFromMatrix = function(matrix, pos) {
  return parseFloat(matrix.split(", ")[pos]);
};
var getTranslateFromMatrix = function(pos2, pos3) {
  return function(_bbox, _a) {
    var transform2 = _a.transform;
    if (transform2 === "none" || !transform2)
      return 0;
    var matrix3d = transform2.match(/^matrix3d\((.+)\)$/);
    if (matrix3d) {
      return getPosFromMatrix(matrix3d[1], pos3);
    } else {
      var matrix = transform2.match(/^matrix\((.+)\)$/);
      if (matrix) {
        return getPosFromMatrix(matrix[1], pos2);
      } else {
        return 0;
      }
    }
  };
};
var transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]);
var nonTranslationalTransformKeys = transformProps.filter(function(key) {
  return !transformKeys.has(key);
});
function removeNonTranslationalTransform(visualElement2) {
  var removedTransforms = [];
  nonTranslationalTransformKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  if (removedTransforms.length)
    visualElement2.syncRender();
  return removedTransforms;
}
var positionalValues = {
  // Dimensions
  width: function(_a, _b) {
    var x7 = _a.x;
    var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? "0" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? "0" : _d;
    return x7.max - x7.min - parseFloat(paddingLeft) - parseFloat(paddingRight);
  },
  height: function(_a, _b) {
    var y9 = _a.y;
    var _c = _b.paddingTop, paddingTop = _c === void 0 ? "0" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? "0" : _d;
    return y9.max - y9.min - parseFloat(paddingTop) - parseFloat(paddingBottom);
  },
  top: function(_bbox, _a) {
    var top = _a.top;
    return parseFloat(top);
  },
  left: function(_bbox, _a) {
    var left = _a.left;
    return parseFloat(left);
  },
  bottom: function(_a, _b) {
    var y9 = _a.y;
    var top = _b.top;
    return parseFloat(top) + (y9.max - y9.min);
  },
  right: function(_a, _b) {
    var x7 = _a.x;
    var left = _b.left;
    return parseFloat(left) + (x7.max - x7.min);
  },
  // Transform
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14)
};
var convertChangedValueTypes = function(target, visualElement2, changedKeys) {
  var originBbox = visualElement2.measureViewportBox();
  var element = visualElement2.getInstance();
  var elementComputedStyle = getComputedStyle(element);
  var display = elementComputedStyle.display;
  var origin = {};
  if (display === "none") {
    visualElement2.setStaticValue("display", target.display || "block");
  }
  changedKeys.forEach(function(key) {
    origin[key] = positionalValues[key](originBbox, elementComputedStyle);
  });
  visualElement2.syncRender();
  var targetBbox = visualElement2.measureViewportBox();
  changedKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    setAndResetVelocity(value, origin[key]);
    target[key] = positionalValues[key](targetBbox, elementComputedStyle);
  });
  return target;
};
var checkAndConvertChangedValueTypes = function(visualElement2, target, origin, transitionEnd) {
  if (origin === void 0) {
    origin = {};
  }
  if (transitionEnd === void 0) {
    transitionEnd = {};
  }
  target = __assign({}, target);
  transitionEnd = __assign({}, transitionEnd);
  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);
  var removedTransformValues = [];
  var hasAttemptedToRemoveTransformValues = false;
  var changedValueTypeKeys = [];
  targetPositionalKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (!visualElement2.hasValue(key))
      return;
    var from = origin[key];
    var fromType = findDimensionValueType(from);
    var to3 = target[key];
    var toType;
    if (isKeyframesTarget(to3)) {
      var numKeyframes = to3.length;
      var fromIndex = to3[0] === null ? 1 : 0;
      from = to3[fromIndex];
      fromType = findDimensionValueType(from);
      for (var i10 = fromIndex; i10 < numKeyframes; i10++) {
        if (!toType) {
          toType = findDimensionValueType(to3[i10]);
          invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), "Keyframes must be of the same dimension as the current value");
        } else {
          invariant(findDimensionValueType(to3[i10]) === toType, "All keyframes must be of the same type");
        }
      }
    } else {
      toType = findDimensionValueType(to3);
    }
    if (fromType !== toType) {
      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
        var current = value.get();
        if (typeof current === "string") {
          value.set(parseFloat(current));
        }
        if (typeof to3 === "string") {
          target[key] = parseFloat(to3);
        } else if (Array.isArray(to3) && toType === px) {
          target[key] = to3.map(parseFloat);
        }
      } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from === 0 || to3 === 0)) {
        if (from === 0) {
          value.set(toType.transform(from));
        } else {
          target[key] = fromType.transform(to3);
        }
      } else {
        if (!hasAttemptedToRemoveTransformValues) {
          removedTransformValues = removeNonTranslationalTransform(visualElement2);
          hasAttemptedToRemoveTransformValues = true;
        }
        changedValueTypeKeys.push(key);
        transitionEnd[key] = transitionEnd[key] !== void 0 ? transitionEnd[key] : target[key];
        setAndResetVelocity(value, to3);
      }
    }
  });
  if (changedValueTypeKeys.length) {
    var scrollY_1 = changedValueTypeKeys.indexOf("height") >= 0 ? window.pageYOffset : null;
    var convertedTarget = convertChangedValueTypes(target, visualElement2, changedValueTypeKeys);
    if (removedTransformValues.length) {
      removedTransformValues.forEach(function(_a) {
        var _b = __read(_a, 2), key = _b[0], value = _b[1];
        visualElement2.getValue(key).set(value);
      });
    }
    visualElement2.syncRender();
    if (scrollY_1 !== null)
      window.scrollTo({ top: scrollY_1 });
    return { target: convertedTarget, transitionEnd };
  } else {
    return { target, transitionEnd };
  }
};
function unitConversion(visualElement2, target, origin, transitionEnd) {
  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement2, target, origin, transitionEnd) : { target, transitionEnd };
}

// node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs
var parseDomVariant = function(visualElement2, target, origin, transitionEnd) {
  var resolved = resolveCSSVariables(visualElement2, target, transitionEnd);
  target = resolved.target;
  transitionEnd = resolved.transitionEnd;
  return unitConversion(visualElement2, target, origin, transitionEnd);
};

// node_modules/framer-motion/dist/es/render/html/visual-element.mjs
function getComputedStyle2(element) {
  return window.getComputedStyle(element);
}
var htmlConfig = {
  treeType: "dom",
  readValueFromInstance: function(domElement, key) {
    if (isTransformProp(key)) {
      var defaultType = getDefaultValueType(key);
      return defaultType ? defaultType.default || 0 : 0;
    } else {
      var computedStyle = getComputedStyle2(domElement);
      return (isCSSVariable(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
    }
  },
  sortNodePosition: function(a15, b7) {
    return a15.compareDocumentPosition(b7) & 2 ? 1 : -1;
  },
  getBaseTarget: function(props, key) {
    var _a;
    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];
  },
  measureViewportBox: function(element, _a) {
    var transformPagePoint = _a.transformPagePoint;
    return measureViewportBox(element, transformPagePoint);
  },
  /**
   * Reset the transform on the current Element. This is called as part
   * of a batched process across the entire layout tree. To remove this write
   * cycle it'd be interesting to see if it's possible to "undo" all the current
   * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms
   * works
   */
  resetTransform: function(element, domElement, props) {
    var transformTemplate = props.transformTemplate;
    domElement.style.transform = transformTemplate ? transformTemplate({}, "") : "none";
    element.scheduleRender();
  },
  restoreTransform: function(instance, mutableState) {
    instance.style.transform = mutableState.style.transform;
  },
  removeValueFromRenderState: function(key, _a) {
    var vars = _a.vars, style2 = _a.style;
    delete vars[key];
    delete style2[key];
  },
  /**
   * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`
   * can be animated by Motion.
   */
  makeTargetAnimatable: function(element, _a, _b, isMounted) {
    var transformValues = _b.transformValues;
    if (isMounted === void 0) {
      isMounted = true;
    }
    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition || {}, element);
    if (transformValues) {
      if (transitionEnd)
        transitionEnd = transformValues(transitionEnd);
      if (target)
        target = transformValues(target);
      if (origin)
        origin = transformValues(origin);
    }
    if (isMounted) {
      checkTargetForNewValues(element, target, origin);
      var parsed = parseDomVariant(element, target, origin, transitionEnd);
      transitionEnd = parsed.transitionEnd;
      target = parsed.target;
    }
    return __assign({ transition, transitionEnd }, target);
  },
  scrapeMotionValuesFromProps,
  build: function(element, renderState, latestValues, options, props) {
    if (element.isVisible !== void 0) {
      renderState.style.visibility = element.isVisible ? "visible" : "hidden";
    }
    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
  },
  render: renderHTML
};
var htmlVisualElement = visualElement(htmlConfig);

// node_modules/framer-motion/dist/es/render/svg/visual-element.mjs
var svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function(props, key) {
  return props[key];
}, readValueFromInstance: function(domElement, key) {
  var _a;
  if (isTransformProp(key)) {
    return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;
  }
  key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
  return domElement.getAttribute(key);
}, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2, build: function(_element, renderState, latestValues, options, props) {
  buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);
}, render: renderSVG }));

// node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var createDomVisualElement = function(Component, options) {
  return isSVGComponent(Component) ? svgVisualElement(options, { enableHardwareAcceleration: false }) : htmlVisualElement(options, { enableHardwareAcceleration: true });
};

// node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var import_react31 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent(pixels, axis) {
  if (axis.max === axis.min)
    return 0;
  return pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius = {
  correct: function(latest, node) {
    if (!node.target)
      return latest;
    if (typeof latest === "string") {
      if (px.test(latest)) {
        latest = parseFloat(latest);
      } else {
        return latest;
      }
    }
    var x7 = pixelsToPercent(latest, node.target.x);
    var y9 = pixelsToPercent(latest, node.target.y);
    return "".concat(x7, "% ").concat(y9, "%");
  }
};

// node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var varToken = "_$css";
var correctBoxShadow = {
  correct: function(latest, _a) {
    var treeScale = _a.treeScale, projectionDelta = _a.projectionDelta;
    var original = latest;
    var containsCSSVariables = latest.includes("var(");
    var cssVariables = [];
    if (containsCSSVariables) {
      latest = latest.replace(cssVariableRegex, function(match) {
        cssVariables.push(match);
        return varToken;
      });
    }
    var shadow = complex.parse(latest);
    if (shadow.length > 5)
      return original;
    var template = complex.createTransformer(latest);
    var offset = typeof shadow[0] !== "number" ? 1 : 0;
    var xScale = projectionDelta.x.scale * treeScale.x;
    var yScale = projectionDelta.y.scale * treeScale.y;
    shadow[0 + offset] /= xScale;
    shadow[1 + offset] /= yScale;
    var averageScale = mix(xScale, yScale, 0.5);
    if (typeof shadow[2 + offset] === "number")
      shadow[2 + offset] /= averageScale;
    if (typeof shadow[3 + offset] === "number")
      shadow[3 + offset] /= averageScale;
    var output = template(shadow);
    if (containsCSSVariables) {
      var i_1 = 0;
      output = output.replace(varToken, function() {
        var cssVariable = cssVariables[i_1];
        i_1++;
        return cssVariable;
      });
    }
    return output;
  }
};

// node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var MeasureLayoutWithContext = (
  /** @class */
  function(_super) {
    __extends(MeasureLayoutWithContext2, _super);
    function MeasureLayoutWithContext2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MeasureLayoutWithContext2.prototype.componentDidMount = function() {
      var _this = this;
      var _a = this.props, visualElement2 = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;
      var projection = visualElement2.projection;
      addScaleCorrector(defaultScaleCorrectors);
      if (projection) {
        if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
          layoutGroup.group.add(projection);
        if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {
          switchLayoutGroup.register(projection);
        }
        projection.root.didUpdate();
        projection.addEventListener("animationComplete", function() {
          _this.safeToRemove();
        });
        projection.setOptions(__assign(__assign({}, projection.options), { onExitComplete: function() {
          return _this.safeToRemove();
        } }));
      }
      globalProjectionState.hasEverUpdated = true;
    };
    MeasureLayoutWithContext2.prototype.getSnapshotBeforeUpdate = function(prevProps) {
      var _this = this;
      var _a = this.props, layoutDependency = _a.layoutDependency, visualElement2 = _a.visualElement, drag2 = _a.drag, isPresent = _a.isPresent;
      var projection = visualElement2.projection;
      if (!projection)
        return null;
      projection.isPresent = isPresent;
      if (drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0) {
        projection.willUpdate();
      } else {
        this.safeToRemove();
      }
      if (prevProps.isPresent !== isPresent) {
        if (isPresent) {
          projection.promote();
        } else if (!projection.relegate()) {
          es_default.postRender(function() {
            var _a2;
            if (!((_a2 = projection.getStack()) === null || _a2 === void 0 ? void 0 : _a2.members.length)) {
              _this.safeToRemove();
            }
          });
        }
      }
      return null;
    };
    MeasureLayoutWithContext2.prototype.componentDidUpdate = function() {
      var projection = this.props.visualElement.projection;
      if (projection) {
        projection.root.didUpdate();
        if (!projection.currentAnimation && projection.isLead()) {
          this.safeToRemove();
        }
      }
    };
    MeasureLayoutWithContext2.prototype.componentWillUnmount = function() {
      var _a = this.props, visualElement2 = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;
      var projection = visualElement2.projection;
      if (projection) {
        projection.scheduleCheckAfterUnmount();
        if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
          layoutGroup.group.remove(projection);
        if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)
          promoteContext.deregister(projection);
      }
    };
    MeasureLayoutWithContext2.prototype.safeToRemove = function() {
      var safeToRemove = this.props.safeToRemove;
      safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();
    };
    MeasureLayoutWithContext2.prototype.render = function() {
      return null;
    };
    return MeasureLayoutWithContext2;
  }(import_react31.default.Component)
);
function MeasureLayout(props) {
  var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];
  var layoutGroup = (0, import_react31.useContext)(LayoutGroupContext);
  return import_react31.default.createElement(MeasureLayoutWithContext, __assign({}, props, { layoutGroup, switchLayoutGroup: (0, import_react31.useContext)(SwitchLayoutGroupContext), isPresent, safeToRemove }));
}
var defaultScaleCorrectors = {
  borderRadius: __assign(__assign({}, correctBorderRadius), { applyTo: [
    "borderTopLeftRadius",
    "borderTopRightRadius",
    "borderBottomLeftRadius",
    "borderBottomRightRadius"
  ] }),
  borderTopLeftRadius: correctBorderRadius,
  borderTopRightRadius: correctBorderRadius,
  borderBottomLeftRadius: correctBorderRadius,
  borderBottomRightRadius: correctBorderRadius,
  boxShadow: correctBoxShadow
};

// node_modules/framer-motion/dist/es/motion/features/layout/index.mjs
var layoutFeatures = {
  measureLayout: MeasureLayout
};

// node_modules/framer-motion/dist/es/animation/animate.mjs
function animate2(from, to3, transition) {
  if (transition === void 0) {
    transition = {};
  }
  var value = isMotionValue(from) ? from : motionValue(from);
  startAnimation("", value, to3, transition);
  return {
    stop: function() {
      return value.stop();
    },
    isAnimating: function() {
      return value.isAnimating();
    }
  };
}

// node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs
var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
var numBorders = borders.length;
var asNumber = function(value) {
  return typeof value === "string" ? parseFloat(value) : value;
};
var isPx = function(value) {
  return typeof value === "number" || px.test(value);
};
function mixValues(target, follow, lead, progress3, shouldCrossfadeOpacity, isOnlyMember) {
  var _a, _b, _c, _d;
  if (shouldCrossfadeOpacity) {
    target.opacity = mix(
      0,
      // (follow?.opacity as number) ?? 0,
      // TODO Reinstate this if only child
      (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1,
      easeCrossfadeIn(progress3)
    );
    target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress3));
  } else if (isOnlyMember) {
    target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress3);
  }
  for (var i10 = 0; i10 < numBorders; i10++) {
    var borderLabel = "border".concat(borders[i10], "Radius");
    var followRadius = getRadius(follow, borderLabel);
    var leadRadius = getRadius(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0);
    leadRadius || (leadRadius = 0);
    var canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);
    if (canMix) {
      target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress3), 0);
      if (percent.test(leadRadius) || percent.test(followRadius)) {
        target[borderLabel] += "%";
      }
    } else {
      target[borderLabel] = leadRadius;
    }
  }
  if (follow.rotate || lead.rotate) {
    target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress3);
  }
}
function getRadius(values, radiusName) {
  var _a;
  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;
}
var easeCrossfadeIn = compress(0, 0.5, circOut);
var easeCrossfadeOut = compress(0.5, 0.95, linear);
function compress(min, max, easing) {
  return function(p10) {
    if (p10 < min)
      return 0;
    if (p10 > max)
      return 1;
    return easing(progress(min, max, p10));
  };
}

// node_modules/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto(axis, originAxis) {
  axis.min = originAxis.min;
  axis.max = originAxis.max;
}
function copyBoxInto(box, originBox) {
  copyAxisInto(box.x, originBox.x);
  copyAxisInto(box.y, originBox.y);
}

// node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta(point, translate, scale2, originPoint, boxScale) {
  point -= translate;
  point = scalePoint(point, 1 / scale2, originPoint);
  if (boxScale !== void 0) {
    point = scalePoint(point, 1 / boxScale, originPoint);
  }
  return point;
}
function removeAxisDelta(axis, translate, scale2, origin, boxScale, originAxis, sourceAxis) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale2 === void 0) {
    scale2 = 1;
  }
  if (origin === void 0) {
    origin = 0.5;
  }
  if (originAxis === void 0) {
    originAxis = axis;
  }
  if (sourceAxis === void 0) {
    sourceAxis = axis;
  }
  if (percent.test(translate)) {
    translate = parseFloat(translate);
    var relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);
    translate = relativeProgress - sourceAxis.min;
  }
  if (typeof translate !== "number")
    return;
  var originPoint = mix(originAxis.min, originAxis.max, origin);
  if (axis === originAxis)
    originPoint -= translate;
  axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms2, _a, origin, sourceAxis) {
  var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  removeAxisDelta(axis, transforms2[key], transforms2[scaleKey], transforms2[originKey], transforms2.scale, origin, sourceAxis);
}
var xKeys2 = ["x", "scaleX", "originX"];
var yKeys2 = ["y", "scaleY", "originY"];
function removeBoxTransforms(box, transforms2, originBox, sourceBox) {
  removeAxisTransforms(box.x, transforms2, xKeys2, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);
  removeAxisTransforms(box.y, transforms2, yKeys2, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);
}

// node_modules/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function boxEquals(a15, b7) {
  return a15.x.min === b7.x.min && a15.x.max === b7.x.max && a15.y.min === b7.y.min && a15.y.max === b7.y.max;
}

// node_modules/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack = (
  /** @class */
  function() {
    function NodeStack2() {
      this.members = [];
    }
    NodeStack2.prototype.add = function(node) {
      addUniqueItem(this.members, node);
      node.scheduleRender();
    };
    NodeStack2.prototype.remove = function(node) {
      removeItem(this.members, node);
      if (node === this.prevLead) {
        this.prevLead = void 0;
      }
      if (node === this.lead) {
        var prevLead = this.members[this.members.length - 1];
        if (prevLead) {
          this.promote(prevLead);
        }
      }
    };
    NodeStack2.prototype.relegate = function(node) {
      var indexOfNode = this.members.findIndex(function(member2) {
        return node === member2;
      });
      if (indexOfNode === 0)
        return false;
      var prevLead;
      for (var i10 = indexOfNode; i10 >= 0; i10--) {
        var member = this.members[i10];
        if (member.isPresent !== false) {
          prevLead = member;
          break;
        }
      }
      if (prevLead) {
        this.promote(prevLead);
        return true;
      } else {
        return false;
      }
    };
    NodeStack2.prototype.promote = function(node, preserveFollowOpacity) {
      var _a;
      var prevLead = this.lead;
      if (node === prevLead)
        return;
      this.prevLead = prevLead;
      this.lead = node;
      node.show();
      if (prevLead) {
        prevLead.instance && prevLead.scheduleRender();
        node.scheduleRender();
        node.resumeFrom = prevLead;
        if (preserveFollowOpacity) {
          node.resumeFrom.preserveOpacity = true;
        }
        if (prevLead.snapshot) {
          node.snapshot = prevLead.snapshot;
          node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
          node.snapshot.isShared = true;
        }
        if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {
          node.isLayoutDirty = true;
        }
        var crossfade = node.options.crossfade;
        if (crossfade === false) {
          prevLead.hide();
        }
      }
    };
    NodeStack2.prototype.exitAnimationComplete = function() {
      this.members.forEach(function(node) {
        var _a, _b, _c, _d, _e5;
        (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);
        (_e5 = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e5 === void 0 ? void 0 : _e5.call(_d);
      });
    };
    NodeStack2.prototype.scheduleRender = function() {
      this.members.forEach(function(node) {
        node.instance && node.scheduleRender(false);
      });
    };
    NodeStack2.prototype.removeLeadSnapshot = function() {
      if (this.lead && this.lead.snapshot) {
        this.lead.snapshot = void 0;
      }
    };
    return NodeStack2;
  }()
);

// node_modules/framer-motion/dist/es/projection/styles/transform.mjs
var identityProjection = "translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)";
function buildProjectionTransform(delta, treeScale, latestTransform) {
  var xTranslate = delta.x.translate / treeScale.x;
  var yTranslate = delta.y.translate / treeScale.y;
  var transform2 = "translate3d(".concat(xTranslate, "px, ").concat(yTranslate, "px, 0) ");
  transform2 += "scale(".concat(1 / treeScale.x, ", ").concat(1 / treeScale.y, ") ");
  if (latestTransform) {
    var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
    if (rotate)
      transform2 += "rotate(".concat(rotate, "deg) ");
    if (rotateX)
      transform2 += "rotateX(".concat(rotateX, "deg) ");
    if (rotateY)
      transform2 += "rotateY(".concat(rotateY, "deg) ");
  }
  var elementScaleX = delta.x.scale * treeScale.x;
  var elementScaleY = delta.y.scale * treeScale.y;
  transform2 += "scale(".concat(elementScaleX, ", ").concat(elementScaleY, ")");
  return transform2 === identityProjection ? "none" : transform2;
}

// node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth = function(a15, b7) {
  return a15.depth - b7.depth;
};

// node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree = (
  /** @class */
  function() {
    function FlatTree2() {
      this.children = [];
      this.isDirty = false;
    }
    FlatTree2.prototype.add = function(child) {
      addUniqueItem(this.children, child);
      this.isDirty = true;
    };
    FlatTree2.prototype.remove = function(child) {
      removeItem(this.children, child);
      this.isDirty = true;
    };
    FlatTree2.prototype.forEach = function(callback) {
      this.isDirty && this.children.sort(compareByDepth);
      this.isDirty = false;
      this.children.forEach(callback);
    };
    return FlatTree2;
  }()
);

// node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs
var animationTarget = 1e3;
function createProjectionNode(_a) {
  var attachResizeListener = _a.attachResizeListener, defaultParent = _a.defaultParent, measureScroll = _a.measureScroll, checkIsScrollRoot = _a.checkIsScrollRoot, resetTransform = _a.resetTransform;
  return (
    /** @class */
    function() {
      function ProjectionNode(id2, latestValues, parent) {
        var _this = this;
        if (latestValues === void 0) {
          latestValues = {};
        }
        if (parent === void 0) {
          parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();
        }
        this.children = /* @__PURE__ */ new Set();
        this.options = {};
        this.isTreeAnimating = false;
        this.isAnimationBlocked = false;
        this.isLayoutDirty = false;
        this.updateManuallyBlocked = false;
        this.updateBlockedByResize = false;
        this.isUpdating = false;
        this.isSVG = false;
        this.needsReset = false;
        this.shouldResetTransform = false;
        this.treeScale = { x: 1, y: 1 };
        this.eventHandlers = /* @__PURE__ */ new Map();
        this.potentialNodes = /* @__PURE__ */ new Map();
        this.checkUpdateFailed = function() {
          if (_this.isUpdating) {
            _this.isUpdating = false;
            _this.clearAllSnapshots();
          }
        };
        this.updateProjection = function() {
          _this.nodes.forEach(resolveTargetDelta);
          _this.nodes.forEach(calcProjection);
        };
        this.hasProjected = false;
        this.isVisible = true;
        this.animationProgress = 0;
        this.sharedNodes = /* @__PURE__ */ new Map();
        this.id = id2;
        this.latestValues = latestValues;
        this.root = parent ? parent.root || parent : this;
        this.path = parent ? __spreadArray(__spreadArray([], __read(parent.path), false), [parent], false) : [];
        this.parent = parent;
        this.depth = parent ? parent.depth + 1 : 0;
        id2 && this.root.registerPotentialNode(id2, this);
        for (var i10 = 0; i10 < this.path.length; i10++) {
          this.path[i10].shouldResetTransform = true;
        }
        if (this.root === this)
          this.nodes = new FlatTree();
      }
      ProjectionNode.prototype.addEventListener = function(name, handler) {
        if (!this.eventHandlers.has(name)) {
          this.eventHandlers.set(name, new SubscriptionManager());
        }
        return this.eventHandlers.get(name).add(handler);
      };
      ProjectionNode.prototype.notifyListeners = function(name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
          args[_i - 1] = arguments[_i];
        }
        var subscriptionManager = this.eventHandlers.get(name);
        subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, __spreadArray([], __read(args), false));
      };
      ProjectionNode.prototype.hasListeners = function(name) {
        return this.eventHandlers.has(name);
      };
      ProjectionNode.prototype.registerPotentialNode = function(id2, node) {
        this.potentialNodes.set(id2, node);
      };
      ProjectionNode.prototype.mount = function(instance, isLayoutDirty) {
        var _this = this;
        var _a2;
        if (isLayoutDirty === void 0) {
          isLayoutDirty = false;
        }
        if (this.instance)
          return;
        this.isSVG = instance instanceof SVGElement && instance.tagName !== "svg";
        this.instance = instance;
        var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement2 = _b.visualElement;
        if (visualElement2 && !visualElement2.getInstance()) {
          visualElement2.mount(instance);
        }
        this.root.nodes.add(this);
        (_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.children.add(this);
        this.id && this.root.potentialNodes.delete(this.id);
        if (isLayoutDirty && (layout || layoutId)) {
          this.isLayoutDirty = true;
        }
        if (attachResizeListener) {
          var unblockTimeout_1;
          var resizeUnblockUpdate_1 = function() {
            return _this.root.updateBlockedByResize = false;
          };
          attachResizeListener(instance, function() {
            _this.root.updateBlockedByResize = true;
            clearTimeout(unblockTimeout_1);
            unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);
            if (globalProjectionState.hasAnimatedSinceResize) {
              globalProjectionState.hasAnimatedSinceResize = false;
              _this.nodes.forEach(finishAnimation);
            }
          });
        }
        if (layoutId) {
          this.root.registerSharedNode(layoutId, this);
        }
        if (this.options.animate !== false && visualElement2 && (layoutId || layout)) {
          this.addEventListener("didUpdate", function(_a3) {
            var _b2, _c, _d, _e5, _f;
            var delta = _a3.delta, hasLayoutChanged = _a3.hasLayoutChanged, hasRelativeTargetChanged = _a3.hasRelativeTargetChanged, newLayout = _a3.layout;
            if (_this.isTreeAnimationBlocked()) {
              _this.target = void 0;
              _this.relativeTarget = void 0;
              return;
            }
            var layoutTransition = (_c = (_b2 = _this.options.transition) !== null && _b2 !== void 0 ? _b2 : visualElement2.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;
            var _g = visualElement2.getProps(), onLayoutAnimationStart = _g.onLayoutAnimationStart, onLayoutAnimationComplete = _g.onLayoutAnimationComplete;
            var targetChanged = !_this.targetLayout || !boxEquals(_this.targetLayout, newLayout) || hasRelativeTargetChanged;
            var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
            if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {
              if (_this.resumeFrom) {
                _this.resumingFrom = _this.resumeFrom;
                _this.resumingFrom.resumingFrom = void 0;
              }
              _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
              var animationOptions = __assign(__assign({}, getValueTransition(layoutTransition, "layout")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });
              if (visualElement2.shouldReduceMotion) {
                animationOptions.delay = 0;
                animationOptions.type = false;
              }
              _this.startAnimation(animationOptions);
            } else {
              if (!hasLayoutChanged && _this.animationProgress === 0) {
                _this.finishAnimation();
              }
              _this.isLead() && ((_f = (_e5 = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e5));
            }
            _this.targetLayout = newLayout;
          });
        }
      };
      ProjectionNode.prototype.unmount = function() {
        var _a2, _b;
        this.options.layoutId && this.willUpdate();
        this.root.nodes.remove(this);
        (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.remove(this);
        (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);
        this.instance = void 0;
        cancelSync.preRender(this.updateProjection);
      };
      ProjectionNode.prototype.blockUpdate = function() {
        this.updateManuallyBlocked = true;
      };
      ProjectionNode.prototype.unblockUpdate = function() {
        this.updateManuallyBlocked = false;
      };
      ProjectionNode.prototype.isUpdateBlocked = function() {
        return this.updateManuallyBlocked || this.updateBlockedByResize;
      };
      ProjectionNode.prototype.isTreeAnimationBlocked = function() {
        var _a2;
        return this.isAnimationBlocked || ((_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.isTreeAnimationBlocked()) || false;
      };
      ProjectionNode.prototype.startUpdate = function() {
        var _a2;
        if (this.isUpdateBlocked())
          return;
        this.isUpdating = true;
        (_a2 = this.nodes) === null || _a2 === void 0 ? void 0 : _a2.forEach(resetRotation);
      };
      ProjectionNode.prototype.willUpdate = function(shouldNotifyListeners) {
        var _a2, _b, _c;
        if (shouldNotifyListeners === void 0) {
          shouldNotifyListeners = true;
        }
        if (this.root.isUpdateBlocked()) {
          (_b = (_a2 = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a2);
          return;
        }
        !this.root.isUpdating && this.root.startUpdate();
        if (this.isLayoutDirty)
          return;
        this.isLayoutDirty = true;
        for (var i10 = 0; i10 < this.path.length; i10++) {
          var node = this.path[i10];
          node.shouldResetTransform = true;
          node.updateScroll();
        }
        var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;
        if (layoutId === void 0 && !layout)
          return;
        var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;
        this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
        this.updateSnapshot();
        shouldNotifyListeners && this.notifyListeners("willUpdate");
      };
      ProjectionNode.prototype.didUpdate = function() {
        var updateWasBlocked = this.isUpdateBlocked();
        if (updateWasBlocked) {
          this.unblockUpdate();
          this.clearAllSnapshots();
          this.nodes.forEach(clearMeasurements);
          return;
        }
        if (!this.isUpdating)
          return;
        this.isUpdating = false;
        if (this.potentialNodes.size) {
          this.potentialNodes.forEach(mountNodeEarly);
          this.potentialNodes.clear();
        }
        this.nodes.forEach(resetTransformStyle);
        this.nodes.forEach(updateLayout);
        this.nodes.forEach(notifyLayoutUpdate);
        this.clearAllSnapshots();
        flushSync.update();
        flushSync.preRender();
        flushSync.render();
      };
      ProjectionNode.prototype.clearAllSnapshots = function() {
        this.nodes.forEach(clearSnapshot);
        this.sharedNodes.forEach(removeLeadSnapshots);
      };
      ProjectionNode.prototype.scheduleUpdateProjection = function() {
        es_default.preRender(this.updateProjection, false, true);
      };
      ProjectionNode.prototype.scheduleCheckAfterUnmount = function() {
        var _this = this;
        es_default.postRender(function() {
          if (_this.isLayoutDirty) {
            _this.root.didUpdate();
          } else {
            _this.root.checkUpdateFailed();
          }
        });
      };
      ProjectionNode.prototype.updateSnapshot = function() {
        if (this.snapshot || !this.instance)
          return;
        var measured = this.measure();
        var layout = this.removeTransform(this.removeElementScroll(measured));
        roundBox(layout);
        this.snapshot = {
          measured,
          layout,
          latestValues: {}
        };
      };
      ProjectionNode.prototype.updateLayout = function() {
        var _a2;
        if (!this.instance)
          return;
        this.updateScroll();
        if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {
          return;
        }
        if (this.resumeFrom && !this.resumeFrom.instance) {
          for (var i10 = 0; i10 < this.path.length; i10++) {
            var node = this.path[i10];
            node.updateScroll();
          }
        }
        var measured = this.measure();
        roundBox(measured);
        var prevLayout = this.layout;
        this.layout = {
          measured,
          actual: this.removeElementScroll(measured)
        };
        this.layoutCorrected = createBox();
        this.isLayoutDirty = false;
        this.projectionDelta = void 0;
        this.notifyListeners("measure", this.layout.actual);
        (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);
      };
      ProjectionNode.prototype.updateScroll = function() {
        if (this.options.layoutScroll && this.instance) {
          this.isScrollRoot = checkIsScrollRoot(this.instance);
          this.scroll = measureScroll(this.instance);
        }
      };
      ProjectionNode.prototype.resetTransform = function() {
        var _a2;
        if (!resetTransform)
          return;
        var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;
        var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);
        var transformTemplate = (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.getProps().transformTemplate;
        var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
        var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
        if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {
          resetTransform(this.instance, transformTemplateValue);
          this.shouldResetTransform = false;
          this.scheduleRender();
        }
      };
      ProjectionNode.prototype.measure = function() {
        var visualElement2 = this.options.visualElement;
        if (!visualElement2)
          return createBox();
        var box = visualElement2.measureViewportBox();
        var scroll2 = this.root.scroll;
        if (scroll2) {
          translateAxis(box.x, scroll2.x);
          translateAxis(box.y, scroll2.y);
        }
        return box;
      };
      ProjectionNode.prototype.removeElementScroll = function(box) {
        var boxWithoutScroll = createBox();
        copyBoxInto(boxWithoutScroll, box);
        for (var i10 = 0; i10 < this.path.length; i10++) {
          var node = this.path[i10];
          var scroll_1 = node.scroll, options = node.options, isScrollRoot = node.isScrollRoot;
          if (node !== this.root && scroll_1 && options.layoutScroll) {
            if (isScrollRoot) {
              copyBoxInto(boxWithoutScroll, box);
              var rootScroll = this.root.scroll;
              if (rootScroll) {
                translateAxis(boxWithoutScroll.x, -rootScroll.x);
                translateAxis(boxWithoutScroll.y, -rootScroll.y);
              }
            }
            translateAxis(boxWithoutScroll.x, scroll_1.x);
            translateAxis(boxWithoutScroll.y, scroll_1.y);
          }
        }
        return boxWithoutScroll;
      };
      ProjectionNode.prototype.applyTransform = function(box, transformOnly) {
        if (transformOnly === void 0) {
          transformOnly = false;
        }
        var withTransforms = createBox();
        copyBoxInto(withTransforms, box);
        for (var i10 = 0; i10 < this.path.length; i10++) {
          var node = this.path[i10];
          if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {
            transformBox(withTransforms, {
              x: -node.scroll.x,
              y: -node.scroll.y
            });
          }
          if (!hasTransform(node.latestValues))
            continue;
          transformBox(withTransforms, node.latestValues);
        }
        if (hasTransform(this.latestValues)) {
          transformBox(withTransforms, this.latestValues);
        }
        return withTransforms;
      };
      ProjectionNode.prototype.removeTransform = function(box) {
        var _a2;
        var boxWithoutTransform = createBox();
        copyBoxInto(boxWithoutTransform, box);
        for (var i10 = 0; i10 < this.path.length; i10++) {
          var node = this.path[i10];
          if (!node.instance)
            continue;
          if (!hasTransform(node.latestValues))
            continue;
          hasScale(node.latestValues) && node.updateSnapshot();
          var sourceBox = createBox();
          var nodeBox = node.measure();
          copyBoxInto(sourceBox, nodeBox);
          removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a2 = node.snapshot) === null || _a2 === void 0 ? void 0 : _a2.layout, sourceBox);
        }
        if (hasTransform(this.latestValues)) {
          removeBoxTransforms(boxWithoutTransform, this.latestValues);
        }
        return boxWithoutTransform;
      };
      ProjectionNode.prototype.setTargetDelta = function(delta) {
        this.targetDelta = delta;
        this.root.scheduleUpdateProjection();
      };
      ProjectionNode.prototype.setOptions = function(options) {
        var _a2;
        this.options = __assign(__assign(__assign({}, this.options), options), { crossfade: (_a2 = options.crossfade) !== null && _a2 !== void 0 ? _a2 : true });
      };
      ProjectionNode.prototype.clearMeasurements = function() {
        this.scroll = void 0;
        this.layout = void 0;
        this.snapshot = void 0;
        this.prevTransformTemplateValue = void 0;
        this.targetDelta = void 0;
        this.target = void 0;
        this.isLayoutDirty = false;
      };
      ProjectionNode.prototype.resolveTargetDelta = function() {
        var _a2;
        var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
        if (!this.layout || !(layout || layoutId))
          return;
        if (!this.targetDelta && !this.relativeTarget) {
          this.relativeParent = this.getClosestProjectingParent();
          if (this.relativeParent && this.relativeParent.layout) {
            this.relativeTarget = createBox();
            this.relativeTargetOrigin = createBox();
            calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);
            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
          }
        }
        if (!this.relativeTarget && !this.targetDelta)
          return;
        if (!this.target) {
          this.target = createBox();
          this.targetWithTransforms = createBox();
        }
        if (this.relativeTarget && this.relativeTargetOrigin && ((_a2 = this.relativeParent) === null || _a2 === void 0 ? void 0 : _a2.target)) {
          calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);
        } else if (this.targetDelta) {
          if (Boolean(this.resumingFrom)) {
            this.target = this.applyTransform(this.layout.actual);
          } else {
            copyBoxInto(this.target, this.layout.actual);
          }
          applyBoxDelta(this.target, this.targetDelta);
        } else {
          copyBoxInto(this.target, this.layout.actual);
        }
        if (this.attemptToResolveRelativeTarget) {
          this.attemptToResolveRelativeTarget = false;
          this.relativeParent = this.getClosestProjectingParent();
          if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {
            this.relativeTarget = createBox();
            this.relativeTargetOrigin = createBox();
            calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);
            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
          }
        }
      };
      ProjectionNode.prototype.getClosestProjectingParent = function() {
        if (!this.parent || hasTransform(this.parent.latestValues))
          return void 0;
        if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {
          return this.parent;
        } else {
          return this.parent.getClosestProjectingParent();
        }
      };
      ProjectionNode.prototype.calcProjection = function() {
        var _a2;
        var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
        this.isTreeAnimating = Boolean(((_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);
        if (!this.isTreeAnimating) {
          this.targetDelta = this.relativeTarget = void 0;
        }
        if (!this.layout || !(layout || layoutId))
          return;
        var lead = this.getLead();
        copyBoxInto(this.layoutCorrected, this.layout.actual);
        applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);
        var target = lead.target;
        if (!target)
          return;
        if (!this.projectionDelta) {
          this.projectionDelta = createDelta();
          this.projectionDeltaWithTransform = createDelta();
        }
        var prevTreeScaleX = this.treeScale.x;
        var prevTreeScaleY = this.treeScale.y;
        var prevProjectionTransform = this.projectionTransform;
        calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
        this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);
        if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {
          this.hasProjected = true;
          this.scheduleRender();
          this.notifyListeners("projectionUpdate", target);
        }
      };
      ProjectionNode.prototype.hide = function() {
        this.isVisible = false;
      };
      ProjectionNode.prototype.show = function() {
        this.isVisible = true;
      };
      ProjectionNode.prototype.scheduleRender = function(notifyAll) {
        var _a2, _b, _c;
        if (notifyAll === void 0) {
          notifyAll = true;
        }
        (_b = (_a2 = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a2);
        notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());
        if (this.resumingFrom && !this.resumingFrom.instance) {
          this.resumingFrom = void 0;
        }
      };
      ProjectionNode.prototype.setAnimationOrigin = function(delta, hasOnlyRelativeTargetChanged) {
        var _this = this;
        var _a2;
        if (hasOnlyRelativeTargetChanged === void 0) {
          hasOnlyRelativeTargetChanged = false;
        }
        var snapshot = this.snapshot;
        var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};
        var mixedValues = __assign({}, this.latestValues);
        var targetDelta = createDelta();
        this.relativeTarget = this.relativeTargetOrigin = void 0;
        this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
        var relativeLayout = createBox();
        var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;
        var isOnlyMember = (((_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.members.length) || 0) <= 1;
        var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));
        this.animationProgress = 0;
        this.mixTargetDelta = function(latest) {
          var _a3;
          var progress3 = latest / 1e3;
          mixAxisDelta(targetDelta.x, delta.x, progress3);
          mixAxisDelta(targetDelta.y, delta.y, progress3);
          _this.setTargetDelta(targetDelta);
          if (_this.relativeTarget && _this.relativeTargetOrigin && _this.layout && ((_a3 = _this.relativeParent) === null || _a3 === void 0 ? void 0 : _a3.layout)) {
            calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);
            mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress3);
          }
          if (isSharedLayoutAnimation) {
            _this.animationValues = mixedValues;
            mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress3, shouldCrossfadeOpacity, isOnlyMember);
          }
          _this.root.scheduleUpdateProjection();
          _this.scheduleRender();
          _this.animationProgress = progress3;
        };
        this.mixTargetDelta(0);
      };
      ProjectionNode.prototype.startAnimation = function(options) {
        var _this = this;
        var _a2, _b;
        this.notifyListeners("animationStart");
        (_a2 = this.currentAnimation) === null || _a2 === void 0 ? void 0 : _a2.stop();
        if (this.resumingFrom) {
          (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();
        }
        if (this.pendingAnimation) {
          cancelSync.update(this.pendingAnimation);
          this.pendingAnimation = void 0;
        }
        this.pendingAnimation = es_default.update(function() {
          globalProjectionState.hasAnimatedSinceResize = true;
          _this.currentAnimation = animate2(0, animationTarget, __assign(__assign({}, options), { onUpdate: function(latest) {
            var _a3;
            _this.mixTargetDelta(latest);
            (_a3 = options.onUpdate) === null || _a3 === void 0 ? void 0 : _a3.call(options, latest);
          }, onComplete: function() {
            var _a3;
            (_a3 = options.onComplete) === null || _a3 === void 0 ? void 0 : _a3.call(options);
            _this.completeAnimation();
          } }));
          if (_this.resumingFrom) {
            _this.resumingFrom.currentAnimation = _this.currentAnimation;
          }
          _this.pendingAnimation = void 0;
        });
      };
      ProjectionNode.prototype.completeAnimation = function() {
        var _a2;
        if (this.resumingFrom) {
          this.resumingFrom.currentAnimation = void 0;
          this.resumingFrom.preserveOpacity = void 0;
        }
        (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.exitAnimationComplete();
        this.resumingFrom = this.currentAnimation = this.animationValues = void 0;
        this.notifyListeners("animationComplete");
      };
      ProjectionNode.prototype.finishAnimation = function() {
        var _a2;
        if (this.currentAnimation) {
          (_a2 = this.mixTargetDelta) === null || _a2 === void 0 ? void 0 : _a2.call(this, animationTarget);
          this.currentAnimation.stop();
        }
        this.completeAnimation();
      };
      ProjectionNode.prototype.applyTransformsToTarget = function() {
        var _a2 = this.getLead(), targetWithTransforms = _a2.targetWithTransforms, target = _a2.target, layout = _a2.layout, latestValues = _a2.latestValues;
        if (!targetWithTransforms || !target || !layout)
          return;
        copyBoxInto(targetWithTransforms, target);
        transformBox(targetWithTransforms, latestValues);
        calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
      };
      ProjectionNode.prototype.registerSharedNode = function(layoutId, node) {
        var _a2, _b, _c;
        if (!this.sharedNodes.has(layoutId)) {
          this.sharedNodes.set(layoutId, new NodeStack());
        }
        var stack = this.sharedNodes.get(layoutId);
        stack.add(node);
        node.promote({
          transition: (_a2 = node.options.initialPromotionConfig) === null || _a2 === void 0 ? void 0 : _a2.transition,
          preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)
        });
      };
      ProjectionNode.prototype.isLead = function() {
        var stack = this.getStack();
        return stack ? stack.lead === this : true;
      };
      ProjectionNode.prototype.getLead = function() {
        var _a2;
        var layoutId = this.options.layoutId;
        return layoutId ? ((_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.lead) || this : this;
      };
      ProjectionNode.prototype.getPrevLead = function() {
        var _a2;
        var layoutId = this.options.layoutId;
        return layoutId ? (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.prevLead : void 0;
      };
      ProjectionNode.prototype.getStack = function() {
        var layoutId = this.options.layoutId;
        if (layoutId)
          return this.root.sharedNodes.get(layoutId);
      };
      ProjectionNode.prototype.promote = function(_a2) {
        var _b = _a2 === void 0 ? {} : _a2, needsReset = _b.needsReset, transition = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;
        var stack = this.getStack();
        if (stack)
          stack.promote(this, preserveFollowOpacity);
        if (needsReset) {
          this.projectionDelta = void 0;
          this.needsReset = true;
        }
        if (transition)
          this.setOptions({ transition });
      };
      ProjectionNode.prototype.relegate = function() {
        var stack = this.getStack();
        if (stack) {
          return stack.relegate(this);
        } else {
          return false;
        }
      };
      ProjectionNode.prototype.resetRotation = function() {
        var visualElement2 = this.options.visualElement;
        if (!visualElement2)
          return;
        var hasRotate = false;
        var resetValues = {};
        for (var i10 = 0; i10 < transformAxes.length; i10++) {
          var axis = transformAxes[i10];
          var key = "rotate" + axis;
          if (!visualElement2.getStaticValue(key)) {
            continue;
          }
          hasRotate = true;
          resetValues[key] = visualElement2.getStaticValue(key);
          visualElement2.setStaticValue(key, 0);
        }
        if (!hasRotate)
          return;
        visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
        for (var key in resetValues) {
          visualElement2.setStaticValue(key, resetValues[key]);
        }
        visualElement2.scheduleRender();
      };
      ProjectionNode.prototype.getProjectionStyles = function(styleProp) {
        var _a2, _b, _c, _d, _e5, _f;
        if (styleProp === void 0) {
          styleProp = {};
        }
        var styles = {};
        if (!this.instance || this.isSVG)
          return styles;
        if (!this.isVisible) {
          return { visibility: "hidden" };
        } else {
          styles.visibility = "";
        }
        var transformTemplate = (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.getProps().transformTemplate;
        if (this.needsReset) {
          this.needsReset = false;
          styles.opacity = "";
          styles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
          styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none";
          return styles;
        }
        var lead = this.getLead();
        if (!this.projectionDelta || !this.layout || !lead.target) {
          var emptyStyles = {};
          if (this.options.layoutId) {
            emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;
            emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
          }
          if (this.hasProjected && !hasTransform(this.latestValues)) {
            emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none";
            this.hasProjected = false;
          }
          return emptyStyles;
        }
        var valuesToRender = lead.animationValues || lead.latestValues;
        this.applyTransformsToTarget();
        styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
        if (transformTemplate) {
          styles.transform = transformTemplate(valuesToRender, styles.transform);
        }
        var _g = this.projectionDelta, x7 = _g.x, y9 = _g.y;
        styles.transformOrigin = "".concat(x7.origin * 100, "% ").concat(y9.origin * 100, "% 0");
        if (lead.animationValues) {
          styles.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
        } else {
          styles.opacity = lead === this ? (_e5 = valuesToRender.opacity) !== null && _e5 !== void 0 ? _e5 : "" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;
        }
        for (var key in scaleCorrectors) {
          if (valuesToRender[key] === void 0)
            continue;
          var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;
          var corrected = correct(valuesToRender[key], lead);
          if (applyTo) {
            var num = applyTo.length;
            for (var i10 = 0; i10 < num; i10++) {
              styles[applyTo[i10]] = corrected;
            }
          } else {
            styles[key] = corrected;
          }
        }
        if (this.options.layoutId) {
          styles.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || "" : "none";
        }
        return styles;
      };
      ProjectionNode.prototype.clearSnapshot = function() {
        this.resumeFrom = this.snapshot = void 0;
      };
      ProjectionNode.prototype.resetTree = function() {
        this.root.nodes.forEach(function(node) {
          var _a2;
          return (_a2 = node.currentAnimation) === null || _a2 === void 0 ? void 0 : _a2.stop();
        });
        this.root.nodes.forEach(clearMeasurements);
        this.root.sharedNodes.clear();
      };
      return ProjectionNode;
    }()
  );
}
function updateLayout(node) {
  node.updateLayout();
}
function notifyLayoutUpdate(node) {
  var _a, _b, _c, _d;
  var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;
  if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
    var _e5 = node.layout, layout_1 = _e5.actual, measuredLayout = _e5.measured;
    if (node.options.animationType === "size") {
      eachAxis(function(axis) {
        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
        var length2 = calcLength(axisSnapshot);
        axisSnapshot.min = layout_1[axis].min;
        axisSnapshot.max = axisSnapshot.min + length2;
      });
    } else if (node.options.animationType === "position") {
      eachAxis(function(axis) {
        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
        var length2 = calcLength(layout_1[axis]);
        axisSnapshot.max = axisSnapshot.min + length2;
      });
    }
    var layoutDelta = createDelta();
    calcBoxDelta(layoutDelta, layout_1, snapshot.layout);
    var visualDelta = createDelta();
    if (snapshot.isShared) {
      calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);
    } else {
      calcBoxDelta(visualDelta, layout_1, snapshot.layout);
    }
    var hasLayoutChanged = !isDeltaZero(layoutDelta);
    var hasRelativeTargetChanged = false;
    if (!node.resumeFrom) {
      node.relativeParent = node.getClosestProjectingParent();
      if (node.relativeParent && !node.relativeParent.resumeFrom) {
        var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;
        if (parentSnapshot && parentLayout) {
          var relativeSnapshot = createBox();
          calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);
          var relativeLayout = createBox();
          calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);
          if (!boxEquals(relativeSnapshot, relativeLayout)) {
            hasRelativeTargetChanged = true;
          }
        }
      }
    }
    node.notifyListeners("didUpdate", {
      layout: layout_1,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeTargetChanged
    });
  } else if (node.isLead()) {
    (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);
  }
  node.options.transition = void 0;
}
function clearSnapshot(node) {
  node.clearSnapshot();
}
function clearMeasurements(node) {
  node.clearMeasurements();
}
function resetTransformStyle(node) {
  var visualElement2 = node.options.visualElement;
  if (visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.getProps().onBeforeLayoutMeasure) {
    visualElement2.notifyBeforeLayoutMeasure();
  }
  node.resetTransform();
}
function finishAnimation(node) {
  node.finishAnimation();
  node.targetDelta = node.relativeTarget = node.target = void 0;
}
function resolveTargetDelta(node) {
  node.resolveTargetDelta();
}
function calcProjection(node) {
  node.calcProjection();
}
function resetRotation(node) {
  node.resetRotation();
}
function removeLeadSnapshots(stack) {
  stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p10) {
  output.translate = mix(delta.translate, 0, p10);
  output.scale = mix(delta.scale, 1, p10);
  output.origin = delta.origin;
  output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to3, p10) {
  output.min = mix(from.min, to3.min, p10);
  output.max = mix(from.max, to3.max, p10);
}
function mixBox(output, from, to3, p10) {
  mixAxis(output.x, from.x, to3.x, p10);
  mixAxis(output.y, from.y, to3.y, p10);
}
function hasOpacityCrossfade(node) {
  return node.animationValues && node.animationValues.opacityExit !== void 0;
}
var defaultLayoutTransition = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
};
function mountNodeEarly(node, id2) {
  var searchNode = node.root;
  for (var i10 = node.path.length - 1; i10 >= 0; i10--) {
    if (Boolean(node.path[i10].instance)) {
      searchNode = node.path[i10];
      break;
    }
  }
  var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;
  var element = searchElement.querySelector('[data-projection-id="'.concat(id2, '"]'));
  if (element)
    node.mount(element, true);
}
function roundAxis(axis) {
  axis.min = Math.round(axis.min);
  axis.max = Math.round(axis.max);
}
function roundBox(box) {
  roundAxis(box.x);
  roundAxis(box.y);
}

// node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode = createProjectionNode({
  attachResizeListener: function(ref, notify) {
    return addDomEvent(ref, "resize", notify);
  },
  measureScroll: function() {
    return {
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop || document.body.scrollTop
    };
  },
  checkIsScrollRoot: function() {
    return true;
  }
});

// node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode = {
  current: void 0
};
var HTMLProjectionNode = createProjectionNode({
  measureScroll: function(instance) {
    return {
      x: instance.scrollLeft,
      y: instance.scrollTop
    };
  },
  defaultParent: function() {
    if (!rootProjectionNode.current) {
      var documentNode = new DocumentProjectionNode(0, {});
      documentNode.mount(window);
      documentNode.setOptions({ layoutScroll: true });
      rootProjectionNode.current = documentNode;
    }
    return rootProjectionNode.current;
  },
  resetTransform: function(instance, value) {
    instance.style.transform = value !== null && value !== void 0 ? value : "none";
  },
  checkIsScrollRoot: function(instance) {
    return Boolean(window.getComputedStyle(instance).position === "fixed");
  }
});

// node_modules/framer-motion/dist/es/render/dom/motion.mjs
var featureBundle = __assign(__assign(__assign(__assign({}, animations), gestureAnimations), drag), layoutFeatures);
var motion = createMotionProxy(function(Component, config) {
  return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode);
});

// node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs
var m = createMotionProxy(createDomMotionConfig);

// node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs
var React4 = __toESM(require_react(), 1);
var import_react35 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-force-update.mjs
var import_react33 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs
var import_react32 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs
var React3 = __toESM(require_react(), 1);
var import_react34 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/AnimateSharedLayout.mjs
var React6 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs
var React5 = __toESM(require_react(), 1);
var import_react37 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs
var import_react36 = __toESM(require_react(), 1);
var DeprecatedLayoutGroupContext = (0, import_react36.createContext)(null);

// node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs
var React7 = __toESM(require_react(), 1);
var import_react38 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs
var React8 = __toESM(require_react(), 1);
var import_react39 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
var React9 = __toESM(require_react(), 1);
var import_react41 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/context/ReorderContext.mjs
var import_react40 = __toESM(require_react(), 1);
var ReorderContext = (0, import_react40.createContext)(null);

// node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs
function checkReorder(order3, value, offset, velocity) {
  if (!velocity)
    return order3;
  var index2 = order3.findIndex(function(item2) {
    return item2.value === value;
  });
  if (index2 === -1)
    return order3;
  var nextOffset = velocity > 0 ? 1 : -1;
  var nextItem = order3[index2 + nextOffset];
  if (!nextItem)
    return order3;
  var item = order3[index2];
  var nextLayout = nextItem.layout;
  var nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);
  if (nextOffset === 1 && item.layout.max + offset > nextItemCenter || nextOffset === -1 && item.layout.min + offset < nextItemCenter) {
    return moveItem(order3, index2, index2 + nextOffset);
  }
  return order3;
}

// node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
function ReorderGroup(_a, externalRef) {
  var children = _a.children, _b = _a.as, as = _b === void 0 ? "ul" : _b, _c = _a.axis, axis = _c === void 0 ? "y" : _c, onReorder = _a.onReorder, values = _a.values, props = __rest(_a, ["children", "as", "axis", "onReorder", "values"]);
  var Component = useConstant(function() {
    return motion(as);
  });
  var order3 = [];
  var isReordering = (0, import_react41.useRef)(false);
  invariant(Boolean(values), "Reorder.Group must be provided a values prop");
  var context = {
    axis,
    registerItem: function(value, layout) {
      if (layout && order3.findIndex(function(entry) {
        return value === entry.value;
      }) === -1) {
        order3.push({ value, layout: layout[axis] });
        order3.sort(compareMin);
      }
    },
    updateOrder: function(id2, offset, velocity) {
      if (isReordering.current)
        return;
      var newOrder = checkReorder(order3, id2, offset, velocity);
      if (order3 !== newOrder) {
        isReordering.current = true;
        onReorder(newOrder.map(getValue).filter(function(value) {
          return values.indexOf(value) !== -1;
        }));
      }
    }
  };
  (0, import_react41.useEffect)(function() {
    isReordering.current = false;
  });
  return React9.createElement(
    Component,
    __assign({}, props, { ref: externalRef }),
    React9.createElement(ReorderContext.Provider, { value: context }, children)
  );
}
var Group = (0, import_react41.forwardRef)(ReorderGroup);
function getValue(item) {
  return item.value;
}
function compareMin(a15, b7) {
  return a15.layout.min - b7.layout.min;
}

// node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
var React10 = __toESM(require_react(), 1);
var import_react43 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/value/use-motion-value.mjs
var import_react42 = __toESM(require_react(), 1);
function useMotionValue(initial) {
  var value = useConstant(function() {
    return motionValue(initial);
  });
  var isStatic = (0, import_react42.useContext)(MotionConfigContext).isStatic;
  if (isStatic) {
    var _a = __read((0, import_react42.useState)(initial), 2), setLatest_1 = _a[1];
    (0, import_react42.useEffect)(function() {
      return value.onChange(setLatest_1);
    }, []);
  }
  return value;
}

// node_modules/framer-motion/dist/es/utils/transform.mjs
var isCustomValueType = function(v5) {
  return typeof v5 === "object" && v5.mix;
};
var getMixer2 = function(v5) {
  return isCustomValueType(v5) ? v5.mix : void 0;
};
function transform() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var useImmediate = !Array.isArray(args[0]);
  var argOffset = useImmediate ? 0 : -1;
  var inputValue = args[0 + argOffset];
  var inputRange = args[1 + argOffset];
  var outputRange = args[2 + argOffset];
  var options = args[3 + argOffset];
  var interpolator = interpolate(inputRange, outputRange, __assign({ mixer: getMixer2(outputRange[0]) }, options));
  return useImmediate ? interpolator(inputValue) : interpolator;
}

// node_modules/framer-motion/dist/es/value/use-on-change.mjs
function useMultiOnChange(values, handler) {
  useIsomorphicLayoutEffect(function() {
    var subscriptions = values.map(function(value) {
      return value.onChange(handler);
    });
    return function() {
      return subscriptions.forEach(function(unsubscribe) {
        return unsubscribe();
      });
    };
  });
}

// node_modules/framer-motion/dist/es/value/use-combine-values.mjs
function useCombineMotionValues(values, combineValues) {
  var value = useMotionValue(combineValues());
  var updateValue = function() {
    return value.set(combineValues());
  };
  updateValue();
  useMultiOnChange(values, function() {
    return es_default.update(updateValue, false, true);
  });
  return value;
}

// node_modules/framer-motion/dist/es/value/use-transform.mjs
function useTransform(input, inputRangeOrTransformer, outputRange, options) {
  var transformer = typeof inputRangeOrTransformer === "function" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);
  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function(_a) {
    var _b = __read(_a, 1), latest = _b[0];
    return transformer(latest);
  });
}
function useListTransform(values, transformer) {
  var latest = useConstant(function() {
    return [];
  });
  return useCombineMotionValues(values, function() {
    latest.length = 0;
    var numValues = values.length;
    for (var i10 = 0; i10 < numValues; i10++) {
      latest[i10] = values[i10].get();
    }
    return transformer(latest);
  });
}

// node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
function useDefaultMotionValue(value, defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = 0;
  }
  return isMotionValue(value) ? value : useMotionValue(defaultValue);
}
function ReorderItem(_a, externalRef) {
  var children = _a.children, style2 = _a.style, value = _a.value, _b = _a.as, as = _b === void 0 ? "li" : _b, onDrag = _a.onDrag, _c = _a.layout, layout = _c === void 0 ? true : _c, props = __rest(_a, ["children", "style", "value", "as", "onDrag", "layout"]);
  var Component = useConstant(function() {
    return motion(as);
  });
  var context = (0, import_react43.useContext)(ReorderContext);
  var point = {
    x: useDefaultMotionValue(style2 === null || style2 === void 0 ? void 0 : style2.x),
    y: useDefaultMotionValue(style2 === null || style2 === void 0 ? void 0 : style2.y)
  };
  var zIndex = useTransform([point.x, point.y], function(_a2) {
    var _b2 = __read(_a2, 2), latestX = _b2[0], latestY = _b2[1];
    return latestX || latestY ? 1 : "unset";
  });
  var measuredLayout = (0, import_react43.useRef)(null);
  invariant(Boolean(context), "Reorder.Item must be a child of Reorder.Group");
  var _d = context, axis = _d.axis, registerItem = _d.registerItem, updateOrder = _d.updateOrder;
  (0, import_react43.useEffect)(function() {
    registerItem(value, measuredLayout.current);
  }, [context]);
  return React10.createElement(Component, __assign({ drag: axis }, props, { dragSnapToOrigin: true, style: __assign(__assign({}, style2), { x: point.x, y: point.y, zIndex }), layout, onDrag: function(event, gesturePoint) {
    var velocity = gesturePoint.velocity;
    velocity[axis] && updateOrder(value, point[axis].get(), velocity[axis]);
    onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);
  }, onLayoutMeasure: function(measured) {
    measuredLayout.current = measured;
  }, ref: externalRef }), children);
}
var Item = (0, import_react43.forwardRef)(ReorderItem);

// node_modules/framer-motion/dist/es/components/Reorder/index.mjs
var Reorder = {
  Group,
  Item
};

// node_modules/framer-motion/dist/es/render/dom/features-animation.mjs
var domAnimation = __assign(__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);

// node_modules/framer-motion/dist/es/render/dom/features-max.mjs
var domMax = __assign(__assign(__assign(__assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });

// node_modules/framer-motion/dist/es/value/use-spring.mjs
var import_react44 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/value/use-velocity.mjs
var import_react45 = __toESM(require_react(), 1);

// node_modules/@motionone/utils/dist/noop.es.js
var noopReturn = (v5) => v5;

// node_modules/@motionone/utils/dist/time.es.js
var time = {
  ms: (seconds) => seconds * 1e3,
  s: (milliseconds) => milliseconds / 1e3
};

// node_modules/@motionone/utils/dist/velocity.es.js
function velocityPerSecond2(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// node_modules/@motionone/dom/dist/animate/utils/transforms.es.js
var axes = ["", "X", "Y", "Z"];
var order2 = ["translate", "scale", "rotate", "skew"];
var rotation = {
  syntax: "<angle>",
  initialValue: "0deg",
  toDefaultUnit: (v5) => v5 + "deg"
};
var baseTransformProperties = {
  translate: {
    syntax: "<length-percentage>",
    initialValue: "0px",
    toDefaultUnit: (v5) => v5 + "px"
  },
  rotate: rotation,
  scale: {
    syntax: "<number>",
    initialValue: 1,
    toDefaultUnit: noopReturn
  },
  skew: rotation
};
var transformDefinitions = /* @__PURE__ */ new Map();
var asTransformCssVar = (name) => `--motion-${name}`;
var transforms = ["x", "y", "z"];
order2.forEach((name) => {
  axes.forEach((axis) => {
    transforms.push(name + axis);
    transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);
  });
});
var transformLookup = new Set(transforms);

// node_modules/@motionone/easing/dist/cubic-bezier.es.js
var calcBezier2 = (t15, a1, a22) => (((1 - 3 * a22 + 3 * a1) * t15 + (3 * a22 - 6 * a1)) * t15 + 3 * a1) * t15;
var subdivisionPrecision2 = 1e-7;
var subdivisionMaxIterations2 = 12;
function binarySubdivide2(x7, lowerBound, upperBound, mX1, mX2) {
  let currentX;
  let currentT;
  let i10 = 0;
  do {
    currentT = lowerBound + (upperBound - lowerBound) / 2;
    currentX = calcBezier2(currentT, mX1, mX2) - x7;
    if (currentX > 0) {
      upperBound = currentT;
    } else {
      lowerBound = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision2 && ++i10 < subdivisionMaxIterations2);
  return currentT;
}
function cubicBezier2(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noopReturn;
  const getTForX = (aX) => binarySubdivide2(aX, 0, 1, mX1, mX2);
  return (t15) => t15 === 0 || t15 === 1 ? t15 : calcBezier2(getTForX(t15), mY1, mY2);
}

// node_modules/@motionone/animation/dist/utils/easing.es.js
var namedEasings = {
  ease: cubicBezier2(0.25, 0.1, 0.25, 1),
  "ease-in": cubicBezier2(0.42, 0, 1, 1),
  "ease-in-out": cubicBezier2(0.42, 0, 0.58, 1),
  "ease-out": cubicBezier2(0, 0, 0.58, 1)
};

// node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js
var testAnimation = (keyframes3) => document.createElement("div").animate(keyframes3, { duration: 1e-3 });
var featureTests = {
  cssRegisterProperty: () => typeof CSS !== "undefined" && Object.hasOwnProperty.call(CSS, "registerProperty"),
  waapi: () => Object.hasOwnProperty.call(Element.prototype, "animate"),
  partialKeyframes: () => {
    try {
      testAnimation({ opacity: [1] });
    } catch (e6) {
      return false;
    }
    return true;
  },
  finished: () => Boolean(testAnimation({ opacity: [0, 1] }).finished)
};
var results = {};
var supports = {};
for (const key in featureTests) {
  supports[key] = () => {
    if (results[key] === void 0)
      results[key] = featureTests[key]();
    return results[key];
  };
}

// node_modules/@motionone/dom/dist/utils/resolve-elements.es.js
function resolveElements(elements, selectorCache) {
  var _a;
  if (typeof elements === "string") {
    if (selectorCache) {
      (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : selectorCache[elements] = document.querySelectorAll(elements);
      elements = selectorCache[elements];
    } else {
      elements = document.querySelectorAll(elements);
    }
  } else if (elements instanceof Element) {
    elements = [elements];
  }
  return Array.from(elements || []);
}

// node_modules/@motionone/generators/dist/utils/velocity.es.js
var sampleT = 5;
function calcGeneratorVelocity(resolveValue, t15, current) {
  const prevT = Math.max(t15 - sampleT, 0);
  return velocityPerSecond2(current - resolveValue(prevT), t15 - prevT);
}

// node_modules/@motionone/generators/dist/spring/defaults.es.js
var defaults2 = {
  stiffness: 100,
  damping: 10,
  mass: 1
};

// node_modules/@motionone/generators/dist/spring/utils.es.js
var calcDampingRatio = (stiffness = defaults2.stiffness, damping = defaults2.damping, mass = defaults2.mass) => damping / (2 * Math.sqrt(stiffness * mass));

// node_modules/@motionone/generators/dist/utils/has-reached-target.es.js
function hasReachedTarget(origin, target, current) {
  return origin < target && current >= target || origin > target && current <= target;
}

// node_modules/@motionone/generators/dist/spring/index.es.js
var spring2 = ({ stiffness = defaults2.stiffness, damping = defaults2.damping, mass = defaults2.mass, from = 0, to: to3 = 1, velocity = 0, restSpeed = 2, restDistance = 0.5 } = {}) => {
  velocity = velocity ? time.s(velocity) : 0;
  const state = {
    done: false,
    hasReachedTarget: false,
    current: from,
    target: to3
  };
  const initialDelta = to3 - from;
  const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
  const dampingRatio = calcDampingRatio(stiffness, damping, mass);
  let resolveSpring;
  if (dampingRatio < 1) {
    const angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
    resolveSpring = (t15) => to3 - Math.exp(-dampingRatio * undampedAngularFreq * t15) * ((-velocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t15) + initialDelta * Math.cos(angularFreq * t15));
  } else {
    resolveSpring = (t15) => {
      return to3 - Math.exp(-undampedAngularFreq * t15) * (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t15);
    };
  }
  return (t15) => {
    state.current = resolveSpring(t15);
    const currentVelocity = t15 === 0 ? velocity : calcGeneratorVelocity(resolveSpring, t15, state.current);
    const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
    const isBelowDisplacementThreshold = Math.abs(to3 - state.current) <= restDistance;
    state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
    state.hasReachedTarget = hasReachedTarget(from, to3, state.current);
    return state;
  };
};

// node_modules/@motionone/generators/dist/glide/index.es.js
var glide = ({ from = 0, velocity = 0, power = 0.8, decay: decay2 = 0.325, bounceDamping, bounceStiffness, changeTarget, min, max, restDistance = 0.5, restSpeed }) => {
  decay2 = time.ms(decay2);
  const state = {
    hasReachedTarget: false,
    done: false,
    current: from,
    target: from
  };
  const isOutOfBounds = (v5) => min !== void 0 && v5 < min || max !== void 0 && v5 > max;
  const nearestBoundary = (v5) => {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v5) < Math.abs(max - v5) ? min : max;
  };
  let amplitude = power * velocity;
  const ideal = from + amplitude;
  const target = changeTarget === void 0 ? ideal : changeTarget(ideal);
  state.target = target;
  if (target !== ideal)
    amplitude = target - from;
  const calcDelta = (t15) => -amplitude * Math.exp(-t15 / decay2);
  const calcLatest = (t15) => target + calcDelta(t15);
  const applyFriction = (t15) => {
    const delta = calcDelta(t15);
    const latest = calcLatest(t15);
    state.done = Math.abs(delta) <= restDistance;
    state.current = state.done ? target : latest;
  };
  let timeReachedBoundary;
  let spring$1;
  const checkCatchBoundary = (t15) => {
    if (!isOutOfBounds(state.current))
      return;
    timeReachedBoundary = t15;
    spring$1 = spring2({
      from: state.current,
      to: nearestBoundary(state.current),
      velocity: calcGeneratorVelocity(calcLatest, t15, state.current),
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDistance,
      restSpeed
    });
  };
  checkCatchBoundary(0);
  return (t15) => {
    let hasUpdatedFrame = false;
    if (!spring$1 && timeReachedBoundary === void 0) {
      hasUpdatedFrame = true;
      applyFriction(t15);
      checkCatchBoundary(t15);
    }
    if (timeReachedBoundary !== void 0 && t15 > timeReachedBoundary) {
      state.hasReachedTarget = true;
      return spring$1(t15 - timeReachedBoundary);
    } else {
      state.hasReachedTarget = false;
      !hasUpdatedFrame && applyFriction(t15);
      return state;
    }
  };
};

// node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js
var timeStep = 10;
var maxDuration2 = 1e4;
function pregenerateKeyframes(generator, toUnit = noopReturn) {
  let overshootDuration = void 0;
  let timestamp = timeStep;
  let state = generator(0);
  const keyframes3 = [toUnit(state.current)];
  while (!state.done && timestamp < maxDuration2) {
    state = generator(timestamp);
    keyframes3.push(toUnit(state.done ? state.target : state.current));
    if (overshootDuration === void 0 && state.hasReachedTarget) {
      overshootDuration = timestamp;
    }
    timestamp += timeStep;
  }
  const duration = timestamp - timeStep;
  if (keyframes3.length === 1)
    keyframes3.push(state.current);
  return {
    keyframes: keyframes3,
    duration: duration / 1e3,
    overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1e3
  };
}

// node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js
function createGeneratorEasing(createGenerator) {
  const keyframesCache = /* @__PURE__ */ new WeakMap();
  return (options = {}) => {
    const generatorCache = /* @__PURE__ */ new Map();
    const getGenerator = (from = 0, to3 = 100, velocity = 0, isScale = false) => {
      const key = `${from}-${to3}-${velocity}-${isScale}`;
      if (!generatorCache.has(key)) {
        generatorCache.set(key, createGenerator(Object.assign({
          from,
          to: to3,
          velocity,
          restSpeed: isScale ? 0.05 : 2,
          restDistance: isScale ? 0.01 : 0.5
        }, options)));
      }
      return generatorCache.get(key);
    };
    const getKeyframes = (generator) => {
      if (!keyframesCache.has(generator)) {
        keyframesCache.set(generator, pregenerateKeyframes(generator));
      }
      return keyframesCache.get(generator);
    };
    return {
      createAnimation: (keyframes3, getOrigin2, canUseGenerator, name, motionValue2) => {
        var _a, _b;
        let settings;
        const numKeyframes = keyframes3.length;
        let shouldUseGenerator = canUseGenerator && numKeyframes <= 2 && keyframes3.every(isNumberOrNull);
        if (shouldUseGenerator) {
          const target = keyframes3[numKeyframes - 1];
          const unresolvedOrigin = numKeyframes === 1 ? null : keyframes3[0];
          let velocity = 0;
          let origin = 0;
          const prevGenerator = motionValue2 === null || motionValue2 === void 0 ? void 0 : motionValue2.generator;
          if (prevGenerator) {
            const { animation, generatorStartTime } = motionValue2;
            const startTime = (animation === null || animation === void 0 ? void 0 : animation.startTime) || generatorStartTime || 0;
            const currentTime = (animation === null || animation === void 0 ? void 0 : animation.currentTime) || performance.now() - startTime;
            const prevGeneratorCurrent = prevGenerator(currentTime).current;
            origin = (_a = unresolvedOrigin) !== null && _a !== void 0 ? _a : prevGeneratorCurrent;
            if (numKeyframes === 1 || numKeyframes === 2 && keyframes3[0] === null) {
              velocity = calcGeneratorVelocity((t15) => prevGenerator(t15).current, currentTime, prevGeneratorCurrent);
            }
          } else {
            origin = (_b = unresolvedOrigin) !== null && _b !== void 0 ? _b : parseFloat(getOrigin2());
          }
          const generator = getGenerator(origin, target, velocity, name === null || name === void 0 ? void 0 : name.includes("scale"));
          const keyframesMetadata = getKeyframes(generator);
          settings = Object.assign(Object.assign({}, keyframesMetadata), { easing: "linear" });
          if (motionValue2) {
            motionValue2.generator = generator;
            motionValue2.generatorStartTime = performance.now();
          }
        } else {
          const keyframesMetadata = getKeyframes(getGenerator(0, 100));
          settings = {
            easing: "ease",
            duration: keyframesMetadata.overshootDuration
          };
        }
        return settings;
      }
    };
  };
}
var isNumberOrNull = (value) => typeof value !== "string";

// node_modules/@motionone/dom/dist/easing/spring/index.es.js
var spring3 = createGeneratorEasing(spring2);

// node_modules/@motionone/dom/dist/easing/glide/index.es.js
var glide2 = createGeneratorEasing(glide);

// node_modules/@motionone/dom/dist/gestures/in-view.es.js
var thresholds = {
  any: 0,
  all: 1
};
function inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = "any" } = {}) {
  if (typeof IntersectionObserver === "undefined") {
    return () => {
    };
  }
  const elements = resolveElements(elementOrSelector);
  const activeIntersections = /* @__PURE__ */ new WeakMap();
  const onIntersectionChange = (entries) => {
    entries.forEach((entry) => {
      const onEnd = activeIntersections.get(entry.target);
      if (entry.isIntersecting === Boolean(onEnd))
        return;
      if (entry.isIntersecting) {
        const newOnEnd = onStart(entry);
        if (typeof newOnEnd === "function") {
          activeIntersections.set(entry.target, newOnEnd);
        } else {
          observer.unobserve(entry.target);
        }
      } else if (onEnd) {
        onEnd(entry);
        activeIntersections.delete(entry.target);
      }
    });
  };
  const observer = new IntersectionObserver(onIntersectionChange, {
    root,
    rootMargin,
    threshold: typeof amount === "number" ? amount : thresholds[amount]
  });
  elements.forEach((element) => observer.observe(element));
  return () => observer.disconnect();
}

// node_modules/@motionone/dom/dist/state/utils/events.es.js
function dispatchPointerEvent(element, name, event) {
  element.dispatchEvent(new CustomEvent(name, { detail: { originalEvent: event } }));
}
function dispatchViewEvent(element, name, entry) {
  element.dispatchEvent(new CustomEvent(name, { detail: { originalEntry: entry } }));
}

// node_modules/@motionone/dom/dist/state/gestures/in-view.es.js
var inView2 = {
  isActive: (options) => Boolean(options.inView),
  subscribe: (element, { enable, disable }, { inViewOptions = {} }) => {
    const { once } = inViewOptions, viewOptions = __rest(inViewOptions, ["once"]);
    return inView(element, (enterEntry) => {
      enable();
      dispatchViewEvent(element, "viewenter", enterEntry);
      if (!once) {
        return (leaveEntry) => {
          disable();
          dispatchViewEvent(element, "viewleave", leaveEntry);
        };
      }
    }, viewOptions);
  }
};

// node_modules/@motionone/dom/dist/state/gestures/hover.es.js
var mouseEvent = (element, name, action) => (event) => {
  if (event.pointerType && event.pointerType !== "mouse")
    return;
  action();
  dispatchPointerEvent(element, name, event);
};
var hover = {
  isActive: (options) => Boolean(options.hover),
  subscribe: (element, { enable, disable }) => {
    const onEnter = mouseEvent(element, "hoverstart", enable);
    const onLeave = mouseEvent(element, "hoverend", disable);
    element.addEventListener("pointerenter", onEnter);
    element.addEventListener("pointerleave", onLeave);
    return () => {
      element.removeEventListener("pointerenter", onEnter);
      element.removeEventListener("pointerleave", onLeave);
    };
  }
};

// node_modules/@motionone/dom/dist/state/gestures/press.es.js
var press = {
  isActive: (options) => Boolean(options.press),
  subscribe: (element, { enable, disable }) => {
    const onPointerUp = (event) => {
      disable();
      dispatchPointerEvent(element, "pressend", event);
      window.removeEventListener("pointerup", onPointerUp);
    };
    const onPointerDown = (event) => {
      enable();
      dispatchPointerEvent(element, "pressstart", event);
      window.addEventListener("pointerup", onPointerUp);
    };
    element.addEventListener("pointerdown", onPointerDown);
    return () => {
      element.removeEventListener("pointerdown", onPointerDown);
      window.removeEventListener("pointerup", onPointerUp);
    };
  }
};

// node_modules/@motionone/dom/dist/state/index.es.js
var gestures = { inView: inView2, hover, press };
var stateTypes = ["initial", "animate", ...Object.keys(gestures), "exit"];

// node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs
var import_react46 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/animation/use-animation.mjs
var import_react47 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-cycle.mjs
var import_react48 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-in-view.mjs
var import_react49 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs
var DragControls = (
  /** @class */
  function() {
    function DragControls2() {
      this.componentControls = /* @__PURE__ */ new Set();
    }
    DragControls2.prototype.subscribe = function(controls) {
      var _this = this;
      this.componentControls.add(controls);
      return function() {
        return _this.componentControls.delete(controls);
      };
    };
    DragControls2.prototype.start = function(event, options) {
      this.componentControls.forEach(function(controls) {
        controls.start(event.nativeEvent || event, options);
      });
    };
    return DragControls2;
  }()
);

// node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs
var import_react50 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/projection/use-reset-projection.mjs
var React11 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/animation/use-animated-state.mjs
var import_react51 = __toESM(require_react(), 1);
var createObject = function() {
  return {};
};
var stateVisualElement = visualElement({
  build: function() {
  },
  measureViewportBox: createBox,
  resetTransform: function() {
  },
  restoreTransform: function() {
  },
  removeValueFromRenderState: function() {
  },
  render: function() {
  },
  scrapeMotionValuesFromProps: createObject,
  readValueFromInstance: function(_state, key, options) {
    return options.initialState[key] || 0;
  },
  makeTargetAnimatable: function(element, _a) {
    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition || {}, element);
    checkTargetForNewValues(element, target, origin);
    return __assign({ transition, transitionEnd }, target);
  }
});
var useVisualState = makeUseVisualState({
  scrapeMotionValuesFromProps: createObject,
  createRenderState: createObject
});

// node_modules/@radix-ui/react-tooltip/dist/index.mjs
var import_react52 = __toESM(require_react(), 1);
var [$a093c7e1ec25a057$var$createTooltipContext, $a093c7e1ec25a057$export$1c540a2224f0d865] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Tooltip", [
  $cf1ac5d9fe0e8206$export$722aac194ae923
]);
var $a093c7e1ec25a057$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923();
var $a093c7e1ec25a057$var$PROVIDER_NAME = "TooltipProvider";
var $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION = 700;
var $a093c7e1ec25a057$var$TOOLTIP_OPEN = "tooltip.open";
var [$a093c7e1ec25a057$var$TooltipProviderContextProvider, $a093c7e1ec25a057$var$useTooltipProviderContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PROVIDER_NAME);
var $a093c7e1ec25a057$export$f78649fb9ca566b8 = (props) => {
  const { __scopeTooltip, delayDuration = $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION, skipDelayDuration = 300, disableHoverableContent = false, children } = props;
  const [isOpenDelayed, setIsOpenDelayed] = (0, import_react52.useState)(true);
  const isPointerInTransitRef = (0, import_react52.useRef)(false);
  const skipDelayTimerRef = (0, import_react52.useRef)(0);
  (0, import_react52.useEffect)(() => {
    const skipDelayTimer = skipDelayTimerRef.current;
    return () => window.clearTimeout(skipDelayTimer);
  }, []);
  return (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipProviderContextProvider, {
    scope: __scopeTooltip,
    isOpenDelayed,
    delayDuration,
    onOpen: (0, import_react52.useCallback)(() => {
      window.clearTimeout(skipDelayTimerRef.current);
      setIsOpenDelayed(false);
    }, []),
    onClose: (0, import_react52.useCallback)(() => {
      window.clearTimeout(skipDelayTimerRef.current);
      skipDelayTimerRef.current = window.setTimeout(
        () => setIsOpenDelayed(true),
        skipDelayDuration
      );
    }, [
      skipDelayDuration
    ]),
    isPointerInTransitRef,
    onPointerInTransitChange: (0, import_react52.useCallback)((inTransit) => {
      isPointerInTransitRef.current = inTransit;
    }, []),
    disableHoverableContent
  }, children);
};
Object.assign($a093c7e1ec25a057$export$f78649fb9ca566b8, {
  displayName: $a093c7e1ec25a057$var$PROVIDER_NAME
});
var $a093c7e1ec25a057$var$TOOLTIP_NAME = "Tooltip";
var [$a093c7e1ec25a057$var$TooltipContextProvider, $a093c7e1ec25a057$var$useTooltipContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME);
var $a093c7e1ec25a057$export$28c660c63b792dea = (props) => {
  const { __scopeTooltip, children, open: openProp, defaultOpen = false, onOpenChange, disableHoverableContent: disableHoverableContentProp, delayDuration: delayDurationProp } = props;
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TOOLTIP_NAME, props.__scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const [trigger, setTrigger] = (0, import_react52.useState)(null);
  const contentId = $1746a345f3d73bb7$export$f680877a34711e37();
  const openTimerRef = (0, import_react52.useRef)(0);
  const disableHoverableContent = disableHoverableContentProp !== null && disableHoverableContentProp !== void 0 ? disableHoverableContentProp : providerContext.disableHoverableContent;
  const delayDuration = delayDurationProp !== null && delayDurationProp !== void 0 ? delayDurationProp : providerContext.delayDuration;
  const wasOpenDelayedRef = (0, import_react52.useRef)(false);
  const [open1 = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: (open) => {
      if (open) {
        providerContext.onOpen();
        document.dispatchEvent(new CustomEvent($a093c7e1ec25a057$var$TOOLTIP_OPEN));
      } else
        providerContext.onClose();
      onOpenChange === null || onOpenChange === void 0 || onOpenChange(open);
    }
  });
  const stateAttribute = (0, import_react52.useMemo)(() => {
    return open1 ? wasOpenDelayedRef.current ? "delayed-open" : "instant-open" : "closed";
  }, [
    open1
  ]);
  const handleOpen = (0, import_react52.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    wasOpenDelayedRef.current = false;
    setOpen(true);
  }, [
    setOpen
  ]);
  const handleClose = (0, import_react52.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    setOpen(false);
  }, [
    setOpen
  ]);
  const handleDelayedOpen = (0, import_react52.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    openTimerRef.current = window.setTimeout(() => {
      wasOpenDelayedRef.current = true;
      setOpen(true);
    }, delayDuration);
  }, [
    delayDuration,
    setOpen
  ]);
  (0, import_react52.useEffect)(() => {
    return () => window.clearTimeout(openTimerRef.current);
  }, []);
  return (0, import_react52.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipContextProvider, {
    scope: __scopeTooltip,
    contentId,
    open: open1,
    stateAttribute,
    trigger,
    onTriggerChange: setTrigger,
    onTriggerEnter: (0, import_react52.useCallback)(() => {
      if (providerContext.isOpenDelayed)
        handleDelayedOpen();
      else
        handleOpen();
    }, [
      providerContext.isOpenDelayed,
      handleDelayedOpen,
      handleOpen
    ]),
    onTriggerLeave: (0, import_react52.useCallback)(() => {
      if (disableHoverableContent)
        handleClose();
      else
        window.clearTimeout(openTimerRef.current);
    }, [
      handleClose,
      disableHoverableContent
    ]),
    onOpen: handleOpen,
    onClose: handleClose,
    disableHoverableContent
  }, children));
};
Object.assign($a093c7e1ec25a057$export$28c660c63b792dea, {
  displayName: $a093c7e1ec25a057$var$TOOLTIP_NAME
});
var $a093c7e1ec25a057$var$TRIGGER_NAME = "TooltipTrigger";
var $a093c7e1ec25a057$export$8c610744efcf8a1d = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, ...triggerProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip);
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const ref = (0, import_react52.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onTriggerChange);
  const isPointerDownRef = (0, import_react52.useRef)(false);
  const hasPointerMoveOpenedRef = (0, import_react52.useRef)(false);
  const handlePointerUp = (0, import_react52.useCallback)(
    () => isPointerDownRef.current = false,
    []
  );
  (0, import_react52.useEffect)(() => {
    return () => document.removeEventListener("pointerup", handlePointerUp);
  }, [
    handlePointerUp
  ]);
  return (0, import_react52.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends({
    asChild: true
  }, popperScope), (0, import_react52.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    // We purposefully avoid adding `type=button` here because tooltip triggers are also
    // commonly anchors and the anchor `type` attribute signifies MIME type.
    "aria-describedby": context.open ? context.contentId : void 0,
    "data-state": context.stateAttribute
  }, triggerProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      if (event.pointerType === "touch")
        return;
      if (!hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current) {
        context.onTriggerEnter();
        hasPointerMoveOpenedRef.current = true;
      }
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, () => {
      context.onTriggerLeave();
      hasPointerMoveOpenedRef.current = false;
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, () => {
      isPointerDownRef.current = true;
      document.addEventListener("pointerup", handlePointerUp, {
        once: true
      });
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, () => {
      if (!isPointerDownRef.current)
        context.onOpen();
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, context.onClose),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onClose)
  })));
});
Object.assign($a093c7e1ec25a057$export$8c610744efcf8a1d, {
  displayName: $a093c7e1ec25a057$var$TRIGGER_NAME
});
var $a093c7e1ec25a057$var$PORTAL_NAME = "TooltipPortal";
var [$a093c7e1ec25a057$var$PortalProvider, $a093c7e1ec25a057$var$usePortalContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PORTAL_NAME, {
  forceMount: void 0
});
var $a093c7e1ec25a057$export$7b36b8f925ab7497 = (props) => {
  const { __scopeTooltip, forceMount, children, container } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$PORTAL_NAME, __scopeTooltip);
  return (0, import_react52.createElement)($a093c7e1ec25a057$var$PortalProvider, {
    scope: __scopeTooltip,
    forceMount
  }, (0, import_react52.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react52.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: true,
    container
  }, children)));
};
Object.assign($a093c7e1ec25a057$export$7b36b8f925ab7497, {
  displayName: $a093c7e1ec25a057$var$PORTAL_NAME
});
var $a093c7e1ec25a057$var$CONTENT_NAME = "TooltipContent";
var $a093c7e1ec25a057$export$e9003e2be37ec060 = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const portalContext = $a093c7e1ec25a057$var$usePortalContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const { forceMount = portalContext.forceMount, side = "top", ...contentProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  return (0, import_react52.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.disableHoverableContent ? (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipContentImpl, _extends({
    side
  }, contentProps, {
    ref: forwardedRef
  })) : (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipContentHoverable, _extends({
    side
  }, contentProps, {
    ref: forwardedRef
  })));
});
var $a093c7e1ec25a057$var$TooltipContentHoverable = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const ref = (0, import_react52.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const [pointerGraceArea, setPointerGraceArea] = (0, import_react52.useState)(null);
  const { trigger, onClose } = context;
  const content = ref.current;
  const { onPointerInTransitChange } = providerContext;
  const handleRemoveGraceArea = (0, import_react52.useCallback)(() => {
    setPointerGraceArea(null);
    onPointerInTransitChange(false);
  }, [
    onPointerInTransitChange
  ]);
  const handleCreateGraceArea = (0, import_react52.useCallback)((event, hoverTarget) => {
    const currentTarget = event.currentTarget;
    const exitPoint = {
      x: event.clientX,
      y: event.clientY
    };
    const exitSide = $a093c7e1ec25a057$var$getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());
    const paddedExitPoints = $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide);
    const hoverTargetPoints = $a093c7e1ec25a057$var$getPointsFromRect(hoverTarget.getBoundingClientRect());
    const graceArea = $a093c7e1ec25a057$var$getHull([
      ...paddedExitPoints,
      ...hoverTargetPoints
    ]);
    setPointerGraceArea(graceArea);
    onPointerInTransitChange(true);
  }, [
    onPointerInTransitChange
  ]);
  (0, import_react52.useEffect)(() => {
    return () => handleRemoveGraceArea();
  }, [
    handleRemoveGraceArea
  ]);
  (0, import_react52.useEffect)(() => {
    if (trigger && content) {
      const handleTriggerLeave = (event) => handleCreateGraceArea(event, content);
      const handleContentLeave = (event) => handleCreateGraceArea(event, trigger);
      trigger.addEventListener("pointerleave", handleTriggerLeave);
      content.addEventListener("pointerleave", handleContentLeave);
      return () => {
        trigger.removeEventListener("pointerleave", handleTriggerLeave);
        content.removeEventListener("pointerleave", handleContentLeave);
      };
    }
  }, [
    trigger,
    content,
    handleCreateGraceArea,
    handleRemoveGraceArea
  ]);
  (0, import_react52.useEffect)(() => {
    if (pointerGraceArea) {
      const handleTrackPointerGrace = (event) => {
        const target = event.target;
        const pointerPosition = {
          x: event.clientX,
          y: event.clientY
        };
        const hasEnteredTarget = (trigger === null || trigger === void 0 ? void 0 : trigger.contains(target)) || (content === null || content === void 0 ? void 0 : content.contains(target));
        const isPointerOutsideGraceArea = !$a093c7e1ec25a057$var$isPointInPolygon(pointerPosition, pointerGraceArea);
        if (hasEnteredTarget)
          handleRemoveGraceArea();
        else if (isPointerOutsideGraceArea) {
          handleRemoveGraceArea();
          onClose();
        }
      };
      document.addEventListener("pointermove", handleTrackPointerGrace);
      return () => document.removeEventListener("pointermove", handleTrackPointerGrace);
    }
  }, [
    trigger,
    content,
    pointerGraceArea,
    onClose,
    handleRemoveGraceArea
  ]);
  return (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipContentImpl, _extends({}, props, {
    ref: composedRefs
  }));
});
var [$a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, $a093c7e1ec25a057$var$useVisuallyHiddenContentContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME, {
  isInside: false
});
var $a093c7e1ec25a057$var$TooltipContentImpl = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, children, "aria-label": ariaLabel, onEscapeKeyDown, onPointerDownOutside, ...contentProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, __scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const { onClose } = context;
  (0, import_react52.useEffect)(() => {
    document.addEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose);
    return () => document.removeEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose);
  }, [
    onClose
  ]);
  (0, import_react52.useEffect)(() => {
    if (context.trigger) {
      const handleScroll = (event) => {
        const target = event.target;
        if (target !== null && target !== void 0 && target.contains(context.trigger))
          onClose();
      };
      window.addEventListener("scroll", handleScroll, {
        capture: true
      });
      return () => window.removeEventListener("scroll", handleScroll, {
        capture: true
      });
    }
  }, [
    context.trigger,
    onClose
  ]);
  return (0, import_react52.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: true,
    disableOutsidePointerEvents: false,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside: (event) => event.preventDefault(),
    onDismiss: onClose
  }, (0, import_react52.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends({
    "data-state": context.stateAttribute
  }, popperScope, contentProps, {
    ref: forwardedRef,
    style: {
      ...contentProps.style,
      "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
      "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
      "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }), (0, import_react52.createElement)($5e63c961fc1ce211$export$d9f1ccf0bdb05d45, null, children), (0, import_react52.createElement)($a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, {
    scope: __scopeTooltip,
    isInside: true
  }, (0, import_react52.createElement)($ea1ef594cf570d83$export$be92b6f5f03c0fe9, {
    id: context.contentId,
    role: "tooltip"
  }, ariaLabel || children))));
});
Object.assign($a093c7e1ec25a057$export$e9003e2be37ec060, {
  displayName: $a093c7e1ec25a057$var$CONTENT_NAME
});
var $a093c7e1ec25a057$var$ARROW_NAME = "TooltipArrow";
var $a093c7e1ec25a057$export$c27ee0ad710f7559 = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, ...arrowProps } = props;
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const visuallyHiddenContentContext = $a093c7e1ec25a057$var$useVisuallyHiddenContentContext($a093c7e1ec25a057$var$ARROW_NAME, __scopeTooltip);
  return visuallyHiddenContentContext.isInside ? null : (0, import_react52.createElement)($cf1ac5d9fe0e8206$export$21b07c8f274aebd5, _extends({}, popperScope, arrowProps, {
    ref: forwardedRef
  }));
});
Object.assign($a093c7e1ec25a057$export$c27ee0ad710f7559, {
  displayName: $a093c7e1ec25a057$var$ARROW_NAME
});
function $a093c7e1ec25a057$var$getExitSideFromRect(point, rect) {
  const top = Math.abs(rect.top - point.y);
  const bottom = Math.abs(rect.bottom - point.y);
  const right = Math.abs(rect.right - point.x);
  const left = Math.abs(rect.left - point.x);
  switch (Math.min(top, bottom, right, left)) {
    case left:
      return "left";
    case right:
      return "right";
    case top:
      return "top";
    case bottom:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide, padding = 5) {
  const paddedExitPoints = [];
  switch (exitSide) {
    case "top":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "bottom":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      });
      break;
    case "left":
      paddedExitPoints.push({
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "right":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      });
      break;
  }
  return paddedExitPoints;
}
function $a093c7e1ec25a057$var$getPointsFromRect(rect) {
  const { top, right, bottom, left } = rect;
  return [
    {
      x: left,
      y: top
    },
    {
      x: right,
      y: top
    },
    {
      x: right,
      y: bottom
    },
    {
      x: left,
      y: bottom
    }
  ];
}
function $a093c7e1ec25a057$var$isPointInPolygon(point, polygon) {
  const { x: x7, y: y9 } = point;
  let inside = false;
  for (let i10 = 0, j7 = polygon.length - 1; i10 < polygon.length; j7 = i10++) {
    const xi = polygon[i10].x;
    const yi = polygon[i10].y;
    const xj = polygon[j7].x;
    const yj = polygon[j7].y;
    const intersect = yi > y9 !== yj > y9 && x7 < (xj - xi) * (y9 - yi) / (yj - yi) + xi;
    if (intersect)
      inside = !inside;
  }
  return inside;
}
function $a093c7e1ec25a057$var$getHull(points) {
  const newPoints = points.slice();
  newPoints.sort((a15, b7) => {
    if (a15.x < b7.x)
      return -1;
    else if (a15.x > b7.x)
      return 1;
    else if (a15.y < b7.y)
      return -1;
    else if (a15.y > b7.y)
      return 1;
    else
      return 0;
  });
  return $a093c7e1ec25a057$var$getHullPresorted(newPoints);
}
function $a093c7e1ec25a057$var$getHullPresorted(points) {
  if (points.length <= 1)
    return points.slice();
  const upperHull = [];
  for (let i10 = 0; i10 < points.length; i10++) {
    const p10 = points[i10];
    while (upperHull.length >= 2) {
      const q7 = upperHull[upperHull.length - 1];
      const r10 = upperHull[upperHull.length - 2];
      if ((q7.x - r10.x) * (p10.y - r10.y) >= (q7.y - r10.y) * (p10.x - r10.x))
        upperHull.pop();
      else
        break;
    }
    upperHull.push(p10);
  }
  upperHull.pop();
  const lowerHull = [];
  for (let i1 = points.length - 1; i1 >= 0; i1--) {
    const p10 = points[i1];
    while (lowerHull.length >= 2) {
      const q7 = lowerHull[lowerHull.length - 1];
      const r10 = lowerHull[lowerHull.length - 2];
      if ((q7.x - r10.x) * (p10.y - r10.y) >= (q7.y - r10.y) * (p10.x - r10.x))
        lowerHull.pop();
      else
        break;
    }
    lowerHull.push(p10);
  }
  lowerHull.pop();
  if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y)
    return upperHull;
  else
    return upperHull.concat(lowerHull);
}
var $a093c7e1ec25a057$export$2881499e37b75b9a = $a093c7e1ec25a057$export$f78649fb9ca566b8;
var $a093c7e1ec25a057$export$be92b6f5f03c0fe9 = $a093c7e1ec25a057$export$28c660c63b792dea;
var $a093c7e1ec25a057$export$41fb9f06171c75f4 = $a093c7e1ec25a057$export$8c610744efcf8a1d;
var $a093c7e1ec25a057$export$602eac185826482c = $a093c7e1ec25a057$export$7b36b8f925ab7497;
var $a093c7e1ec25a057$export$7c6e2c02157bb7d2 = $a093c7e1ec25a057$export$e9003e2be37ec060;

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/combobox/combobox.js
var import_react71 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-computed.js
var import_react55 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var import_react53 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/env.js
var i = Object.defineProperty;
var d = (t15, e6, n7) => e6 in t15 ? i(t15, e6, { enumerable: true, configurable: true, writable: true, value: n7 }) : t15[e6] = n7;
var r = (t15, e6, n7) => (d(t15, typeof e6 != "symbol" ? e6 + "" : e6, n7), n7);
var o = class {
  constructor() {
    r(this, "current", this.detect());
    r(this, "handoffState", "pending");
    r(this, "currentId", 0);
  }
  set(e6) {
    this.current !== e6 && (this.handoffState = "pending", this.currentId = 0, this.current = e6);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window == "undefined" || typeof document == "undefined" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
};
var s = new o();

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var l = (e6, f13) => {
  s.isServer ? (0, import_react53.useEffect)(e6, f13) : (0, import_react53.useLayoutEffect)(e6, f13);
};

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-latest-value.js
var import_react54 = __toESM(require_react(), 1);
function s2(e6) {
  let r10 = (0, import_react54.useRef)(e6);
  return l(() => {
    r10.current = e6;
  }, [e6]), r10;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-computed.js
function i2(e6, o13) {
  let [u10, t15] = (0, import_react55.useState)(e6), r10 = s2(e6);
  return l(() => t15(r10.current), [r10, t15, ...o13]), u10;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-disposables.js
var import_react56 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/micro-task.js
function t3(e6) {
  typeof queueMicrotask == "function" ? queueMicrotask(e6) : Promise.resolve().then(e6).catch((o13) => setTimeout(() => {
    throw o13;
  }));
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/disposables.js
function o2() {
  let n7 = [], r10 = { addEventListener(e6, t15, s18, a15) {
    return e6.addEventListener(t15, s18, a15), r10.add(() => e6.removeEventListener(t15, s18, a15));
  }, requestAnimationFrame(...e6) {
    let t15 = requestAnimationFrame(...e6);
    return r10.add(() => cancelAnimationFrame(t15));
  }, nextFrame(...e6) {
    return r10.requestAnimationFrame(() => r10.requestAnimationFrame(...e6));
  }, setTimeout(...e6) {
    let t15 = setTimeout(...e6);
    return r10.add(() => clearTimeout(t15));
  }, microTask(...e6) {
    let t15 = { current: true };
    return t3(() => {
      t15.current && e6[0]();
    }), r10.add(() => {
      t15.current = false;
    });
  }, style(e6, t15, s18) {
    let a15 = e6.style.getPropertyValue(t15);
    return Object.assign(e6.style, { [t15]: s18 }), this.add(() => {
      Object.assign(e6.style, { [t15]: a15 });
    });
  }, group(e6) {
    let t15 = o2();
    return e6(t15), this.add(() => t15.dispose());
  }, add(e6) {
    return n7.push(e6), () => {
      let t15 = n7.indexOf(e6);
      if (t15 >= 0)
        for (let s18 of n7.splice(t15, 1))
          s18();
    };
  }, dispose() {
    for (let e6 of n7.splice(0))
      e6();
  } };
  return r10;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-disposables.js
function p() {
  let [e6] = (0, import_react56.useState)(o2);
  return (0, import_react56.useEffect)(() => () => e6.dispose(), [e6]), e6;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-event.js
var import_react57 = __toESM(require_react(), 1);
var o4 = function(t15) {
  let e6 = s2(t15);
  return import_react57.default.useCallback((...r10) => e6.current(...r10), [e6]);
};

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-id.js
var import_react59 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-server-handoff-complete.js
var import_react58 = __toESM(require_react(), 1);
function l2() {
  let [e6, f13] = (0, import_react58.useState)(s.isHandoffComplete);
  return e6 && s.isHandoffComplete === false && f13(false), (0, import_react58.useEffect)(() => {
    e6 !== true && f13(true);
  }, [e6]), (0, import_react58.useEffect)(() => s.handoff(), []), e6;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-id.js
var o6;
var I = (o6 = import_react59.default.useId) != null ? o6 : function() {
  let n7 = l2(), [e6, u10] = import_react59.default.useState(n7 ? () => s.nextId() : null);
  return l(() => {
    e6 === null && u10(s.nextId());
  }, [e6]), e6 != null ? "" + e6 : void 0;
};

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-outside-click.js
var import_react62 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/match.js
function u(r10, n7, ...a15) {
  if (r10 in n7) {
    let e6 = n7[r10];
    return typeof e6 == "function" ? e6(...a15) : e6;
  }
  let t15 = new Error(`Tried to handle "${r10}" but there is no handler defined. Only defined handlers are: ${Object.keys(n7).map((e6) => `"${e6}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(t15, u), t15;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/owner.js
function e(r10) {
  return s.isServer ? null : r10 instanceof Node ? r10.ownerDocument : r10 != null && r10.hasOwnProperty("current") && r10.current instanceof Node ? r10.current.ownerDocument : document;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/focus-management.js
var c3 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((e6) => `${e6}:not([tabindex='-1'])`).join(",");
var M = ((n7) => (n7[n7.First = 1] = "First", n7[n7.Previous = 2] = "Previous", n7[n7.Next = 4] = "Next", n7[n7.Last = 8] = "Last", n7[n7.WrapAround = 16] = "WrapAround", n7[n7.NoScroll = 32] = "NoScroll", n7))(M || {});
var N = ((o13) => (o13[o13.Error = 0] = "Error", o13[o13.Overflow = 1] = "Overflow", o13[o13.Success = 2] = "Success", o13[o13.Underflow = 3] = "Underflow", o13))(N || {});
var F = ((t15) => (t15[t15.Previous = -1] = "Previous", t15[t15.Next = 1] = "Next", t15))(F || {});
function f(e6 = document.body) {
  return e6 == null ? [] : Array.from(e6.querySelectorAll(c3)).sort((r10, t15) => Math.sign((r10.tabIndex || Number.MAX_SAFE_INTEGER) - (t15.tabIndex || Number.MAX_SAFE_INTEGER)));
}
var T = ((t15) => (t15[t15.Strict = 0] = "Strict", t15[t15.Loose = 1] = "Loose", t15))(T || {});
function h(e6, r10 = 0) {
  var t15;
  return e6 === ((t15 = e(e6)) == null ? void 0 : t15.body) ? false : u(r10, { [0]() {
    return e6.matches(c3);
  }, [1]() {
    let l11 = e6;
    for (; l11 !== null; ) {
      if (l11.matches(c3))
        return true;
      l11 = l11.parentElement;
    }
    return false;
  } });
}
function D(e6) {
  let r10 = e(e6);
  o2().nextFrame(() => {
    r10 && !h(r10.activeElement, 0) && y(e6);
  });
}
var w = ((t15) => (t15[t15.Keyboard = 0] = "Keyboard", t15[t15.Mouse = 1] = "Mouse", t15))(w || {});
typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("keydown", (e6) => {
  e6.metaKey || e6.altKey || e6.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true), document.addEventListener("click", (e6) => {
  e6.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e6.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true));
function y(e6) {
  e6 == null || e6.focus({ preventScroll: true });
}
var S = ["textarea", "input"].join(",");
function H(e6) {
  var r10, t15;
  return (t15 = (r10 = e6 == null ? void 0 : e6.matches) == null ? void 0 : r10.call(e6, S)) != null ? t15 : false;
}
function I2(e6, r10 = (t15) => t15) {
  return e6.slice().sort((t15, l11) => {
    let o13 = r10(t15), i10 = r10(l11);
    if (o13 === null || i10 === null)
      return 0;
    let n7 = o13.compareDocumentPosition(i10);
    return n7 & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : n7 & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
  });
}
function _(e6, r10) {
  return O(f(), r10, { relativeTo: e6 });
}
function O(e6, r10, { sorted: t15 = true, relativeTo: l11 = null, skipElements: o13 = [] } = {}) {
  let i10 = Array.isArray(e6) ? e6.length > 0 ? e6[0].ownerDocument : document : e6.ownerDocument, n7 = Array.isArray(e6) ? t15 ? I2(e6) : e6 : f(e6);
  o13.length > 0 && n7.length > 1 && (n7 = n7.filter((s18) => !o13.includes(s18))), l11 = l11 != null ? l11 : i10.activeElement;
  let E8 = (() => {
    if (r10 & 5)
      return 1;
    if (r10 & 10)
      return -1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), x7 = (() => {
    if (r10 & 1)
      return 0;
    if (r10 & 2)
      return Math.max(0, n7.indexOf(l11)) - 1;
    if (r10 & 4)
      return Math.max(0, n7.indexOf(l11)) + 1;
    if (r10 & 8)
      return n7.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), p10 = r10 & 32 ? { preventScroll: true } : {}, d14 = 0, a15 = n7.length, u10;
  do {
    if (d14 >= a15 || d14 + a15 <= 0)
      return 0;
    let s18 = x7 + d14;
    if (r10 & 16)
      s18 = (s18 + a15) % a15;
    else {
      if (s18 < 0)
        return 3;
      if (s18 >= a15)
        return 1;
    }
    u10 = n7[s18], u10 == null || u10.focus(p10), d14 += E8;
  } while (u10 !== i10.activeElement);
  return r10 & 6 && H(u10) && u10.select(), 2;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-document-event.js
var import_react60 = __toESM(require_react(), 1);
function d2(e6, r10, n7) {
  let o13 = s2(r10);
  (0, import_react60.useEffect)(() => {
    function t15(u10) {
      o13.current(u10);
    }
    return document.addEventListener(e6, t15, n7), () => document.removeEventListener(e6, t15, n7);
  }, [e6, n7]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-window-event.js
var import_react61 = __toESM(require_react(), 1);
function s5(e6, r10, n7) {
  let o13 = s2(r10);
  (0, import_react61.useEffect)(() => {
    function t15(i10) {
      o13.current(i10);
    }
    return window.addEventListener(e6, t15, n7), () => window.removeEventListener(e6, t15, n7);
  }, [e6, n7]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-outside-click.js
function H2(s18, m12, i10 = true) {
  let l11 = (0, import_react62.useRef)(false);
  (0, import_react62.useEffect)(() => {
    requestAnimationFrame(() => {
      l11.current = i10;
    });
  }, [i10]);
  function a15(e6, o13) {
    if (!l11.current || e6.defaultPrevented)
      return;
    let n7 = o13(e6);
    if (n7 === null || !n7.getRootNode().contains(n7))
      return;
    let E8 = function r10(t15) {
      return typeof t15 == "function" ? r10(t15()) : Array.isArray(t15) || t15 instanceof Set ? t15 : [t15];
    }(s18);
    for (let r10 of E8) {
      if (r10 === null)
        continue;
      let t15 = r10 instanceof HTMLElement ? r10 : r10.current;
      if (t15 != null && t15.contains(n7) || e6.composed && e6.composedPath().includes(t15))
        return;
    }
    return !h(n7, T.Loose) && n7.tabIndex !== -1 && e6.preventDefault(), m12(e6, n7);
  }
  let u10 = (0, import_react62.useRef)(null);
  d2("mousedown", (e6) => {
    var o13, n7;
    l11.current && (u10.current = ((n7 = (o13 = e6.composedPath) == null ? void 0 : o13.call(e6)) == null ? void 0 : n7[0]) || e6.target);
  }, true), d2("click", (e6) => {
    u10.current && (a15(e6, () => u10.current), u10.current = null);
  }, true), s5("blur", (e6) => a15(e6, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), true);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-resolve-button-type.js
var import_react63 = __toESM(require_react(), 1);
function i3(t15) {
  var n7;
  if (t15.type)
    return t15.type;
  let e6 = (n7 = t15.as) != null ? n7 : "button";
  if (typeof e6 == "string" && e6.toLowerCase() === "button")
    return "button";
}
function s6(t15, e6) {
  let [n7, u10] = (0, import_react63.useState)(() => i3(t15));
  return l(() => {
    u10(i3(t15));
  }, [t15.type, t15.as]), l(() => {
    n7 || e6.current && e6.current instanceof HTMLButtonElement && !e6.current.hasAttribute("type") && u10("button");
  }, [n7, e6]), n7;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-sync-refs.js
var import_react64 = __toESM(require_react(), 1);
var u2 = Symbol();
function T2(t15, n7 = true) {
  return Object.assign(t15, { [u2]: n7 });
}
function y2(...t15) {
  let n7 = (0, import_react64.useRef)(t15);
  (0, import_react64.useEffect)(() => {
    n7.current = t15;
  }, [t15]);
  let c16 = o4((e6) => {
    for (let o13 of n7.current)
      o13 != null && (typeof o13 == "function" ? o13(e6) : o13.current = e6);
  });
  return t15.every((e6) => e6 == null || (e6 == null ? void 0 : e6[u2])) ? void 0 : c16;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-tree-walker.js
var import_react65 = __toESM(require_react(), 1);
function F2({ container: e6, accept: t15, walk: r10, enabled: c16 = true }) {
  let o13 = (0, import_react65.useRef)(t15), l11 = (0, import_react65.useRef)(r10);
  (0, import_react65.useEffect)(() => {
    o13.current = t15, l11.current = r10;
  }, [t15, r10]), l(() => {
    if (!e6 || !c16)
      return;
    let n7 = e(e6);
    if (!n7)
      return;
    let f13 = o13.current, p10 = l11.current, d14 = Object.assign((i10) => f13(i10), { acceptNode: f13 }), u10 = n7.createTreeWalker(e6, NodeFilter.SHOW_ELEMENT, d14, false);
    for (; u10.nextNode(); )
      p10(u10.currentNode);
  }, [e6, c16, o13, l11]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/calculate-active-index.js
function f2(r10) {
  throw new Error("Unexpected object: " + r10);
}
var a3 = ((e6) => (e6[e6.First = 0] = "First", e6[e6.Previous = 1] = "Previous", e6[e6.Next = 2] = "Next", e6[e6.Last = 3] = "Last", e6[e6.Specific = 4] = "Specific", e6[e6.Nothing = 5] = "Nothing", e6))(a3 || {});
function x(r10, n7) {
  let t15 = n7.resolveItems();
  if (t15.length <= 0)
    return null;
  let l11 = n7.resolveActiveIndex(), s18 = l11 != null ? l11 : -1, d14 = (() => {
    switch (r10.focus) {
      case 0:
        return t15.findIndex((e6) => !n7.resolveDisabled(e6));
      case 1: {
        let e6 = t15.slice().reverse().findIndex((i10, c16, u10) => s18 !== -1 && u10.length - c16 - 1 >= s18 ? false : !n7.resolveDisabled(i10));
        return e6 === -1 ? e6 : t15.length - 1 - e6;
      }
      case 2:
        return t15.findIndex((e6, i10) => i10 <= s18 ? false : !n7.resolveDisabled(e6));
      case 3: {
        let e6 = t15.slice().reverse().findIndex((i10) => !n7.resolveDisabled(i10));
        return e6 === -1 ? e6 : t15.length - 1 - e6;
      }
      case 4:
        return t15.findIndex((e6) => n7.resolveId(e6) === r10.id);
      case 5:
        return null;
      default:
        f2(r10);
    }
  })();
  return d14 === -1 ? l11 : d14;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/render.js
var import_react66 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/class-names.js
function e2(...n7) {
  return n7.filter(Boolean).join(" ");
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/render.js
var S2 = ((a15) => (a15[a15.None = 0] = "None", a15[a15.RenderStrategy = 1] = "RenderStrategy", a15[a15.Static = 2] = "Static", a15))(S2 || {});
var j = ((e6) => (e6[e6.Unmount = 0] = "Unmount", e6[e6.Hidden = 1] = "Hidden", e6))(j || {});
function X({ ourProps: r10, theirProps: t15, slot: e6, defaultTag: a15, features: s18, visible: n7 = true, name: f13 }) {
  let o13 = N2(t15, r10);
  if (n7)
    return c5(o13, e6, a15, f13);
  let u10 = s18 != null ? s18 : 0;
  if (u10 & 2) {
    let { static: l11 = false, ...p10 } = o13;
    if (l11)
      return c5(p10, e6, a15, f13);
  }
  if (u10 & 1) {
    let { unmount: l11 = true, ...p10 } = o13;
    return u(l11 ? 0 : 1, { [0]() {
      return null;
    }, [1]() {
      return c5({ ...p10, hidden: true, style: { display: "none" } }, e6, a15, f13);
    } });
  }
  return c5(o13, e6, a15, f13);
}
function c5(r10, t15 = {}, e6, a15) {
  let { as: s18 = e6, children: n7, refName: f13 = "ref", ...o13 } = g(r10, ["unmount", "static"]), u10 = r10.ref !== void 0 ? { [f13]: r10.ref } : {}, l11 = typeof n7 == "function" ? n7(t15) : n7;
  "className" in o13 && o13.className && typeof o13.className == "function" && (o13.className = o13.className(t15));
  let p10 = {};
  if (t15) {
    let i10 = false, m12 = [];
    for (let [y9, d14] of Object.entries(t15))
      typeof d14 == "boolean" && (i10 = true), d14 === true && m12.push(y9);
    i10 && (p10["data-headlessui-state"] = m12.join(" "));
  }
  if (s18 === import_react66.Fragment && Object.keys(R(o13)).length > 0) {
    if (!(0, import_react66.isValidElement)(l11) || Array.isArray(l11) && l11.length > 1)
      throw new Error(['Passing props on "Fragment"!', "", `The current component <${a15} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(o13).map((d14) => `  - ${d14}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((d14) => `  - ${d14}`).join(`
`)].join(`
`));
    let i10 = l11.props, m12 = typeof (i10 == null ? void 0 : i10.className) == "function" ? (...d14) => e2(i10 == null ? void 0 : i10.className(...d14), o13.className) : e2(i10 == null ? void 0 : i10.className, o13.className), y9 = m12 ? { className: m12 } : {};
    return (0, import_react66.cloneElement)(l11, Object.assign({}, N2(l11.props, R(g(o13, ["ref"]))), p10, u10, w2(l11.ref, u10.ref), y9));
  }
  return (0, import_react66.createElement)(s18, Object.assign({}, g(o13, ["ref"]), s18 !== import_react66.Fragment && u10, s18 !== import_react66.Fragment && p10), l11);
}
function w2(...r10) {
  return { ref: r10.every((t15) => t15 == null) ? void 0 : (t15) => {
    for (let e6 of r10)
      e6 != null && (typeof e6 == "function" ? e6(t15) : e6.current = t15);
  } };
}
function N2(...r10) {
  var a15;
  if (r10.length === 0)
    return {};
  if (r10.length === 1)
    return r10[0];
  let t15 = {}, e6 = {};
  for (let s18 of r10)
    for (let n7 in s18)
      n7.startsWith("on") && typeof s18[n7] == "function" ? ((a15 = e6[n7]) != null || (e6[n7] = []), e6[n7].push(s18[n7])) : t15[n7] = s18[n7];
  if (t15.disabled || t15["aria-disabled"])
    return Object.assign(t15, Object.fromEntries(Object.keys(e6).map((s18) => [s18, void 0])));
  for (let s18 in e6)
    Object.assign(t15, { [s18](n7, ...f13) {
      let o13 = e6[s18];
      for (let u10 of o13) {
        if ((n7 instanceof Event || (n7 == null ? void 0 : n7.nativeEvent) instanceof Event) && n7.defaultPrevented)
          return;
        u10(n7, ...f13);
      }
    } });
  return t15;
}
function D2(r10) {
  var t15;
  return Object.assign((0, import_react66.forwardRef)(r10), { displayName: (t15 = r10.displayName) != null ? t15 : r10.name });
}
function R(r10) {
  let t15 = Object.assign({}, r10);
  for (let e6 in t15)
    t15[e6] === void 0 && delete t15[e6];
  return t15;
}
function g(r10, t15 = []) {
  let e6 = Object.assign({}, r10);
  for (let a15 of t15)
    a15 in e6 && delete e6[a15];
  return e6;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/bugs.js
function r3(n7) {
  let e6 = n7.parentElement, l11 = null;
  for (; e6 && !(e6 instanceof HTMLFieldSetElement); )
    e6 instanceof HTMLLegendElement && (l11 = e6), e6 = e6.parentElement;
  let t15 = (e6 == null ? void 0 : e6.getAttribute("disabled")) === "";
  return t15 && i5(l11) ? false : t15;
}
function i5(n7) {
  if (!n7)
    return false;
  let e6 = n7.previousElementSibling;
  for (; e6 !== null; ) {
    if (e6 instanceof HTMLLegendElement)
      return false;
    e6 = e6.previousElementSibling;
  }
  return true;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/form.js
function e3(n7 = {}, r10 = null, t15 = []) {
  for (let [i10, o13] of Object.entries(n7))
    f3(t15, s7(r10, i10), o13);
  return t15;
}
function s7(n7, r10) {
  return n7 ? n7 + "[" + r10 + "]" : r10;
}
function f3(n7, r10, t15) {
  if (Array.isArray(t15))
    for (let [i10, o13] of t15.entries())
      f3(n7, s7(r10, i10.toString()), o13);
  else
    t15 instanceof Date ? n7.push([r10, t15.toISOString()]) : typeof t15 == "boolean" ? n7.push([r10, t15 ? "1" : "0"]) : typeof t15 == "string" ? n7.push([r10, t15]) : typeof t15 == "number" ? n7.push([r10, `${t15}`]) : t15 == null ? n7.push([r10, ""]) : e3(t15, r10, n7);
}
function p2(n7) {
  var t15;
  let r10 = (t15 = n7 == null ? void 0 : n7.form) != null ? t15 : n7.closest("form");
  if (r10) {
    for (let i10 of r10.elements)
      if (i10.tagName === "INPUT" && i10.type === "submit" || i10.tagName === "BUTTON" && i10.type === "submit" || i10.nodeName === "INPUT" && i10.type === "image") {
        i10.click();
        return;
      }
  }
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/hidden.js
var a4 = "div";
var p3 = ((e6) => (e6[e6.None = 1] = "None", e6[e6.Focusable = 2] = "Focusable", e6[e6.Hidden = 4] = "Hidden", e6))(p3 || {});
function s8(t15, o13) {
  let { features: n7 = 1, ...e6 } = t15, d14 = { ref: o13, "aria-hidden": (n7 & 2) === 2 ? true : void 0, style: { position: "fixed", top: 1, left: 1, width: 1, height: 0, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0", ...(n7 & 4) === 4 && (n7 & 2) !== 2 && { display: "none" } } };
  return X({ ourProps: d14, theirProps: e6, slot: {}, defaultTag: a4, name: "Hidden" });
}
var c6 = D2(s8);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/open-closed.js
var import_react67 = __toESM(require_react(), 1);
var n = (0, import_react67.createContext)(null);
n.displayName = "OpenClosedContext";
var d5 = ((e6) => (e6[e6.Open = 1] = "Open", e6[e6.Closed = 2] = "Closed", e6[e6.Closing = 4] = "Closing", e6[e6.Opening = 8] = "Opening", e6))(d5 || {});
function C() {
  return (0, import_react67.useContext)(n);
}
function c7({ value: o13, children: r10 }) {
  return import_react67.default.createElement(n.Provider, { value: o13 }, r10);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/keyboard.js
var o8 = ((r10) => (r10.Space = " ", r10.Enter = "Enter", r10.Escape = "Escape", r10.Backspace = "Backspace", r10.Delete = "Delete", r10.ArrowLeft = "ArrowLeft", r10.ArrowUp = "ArrowUp", r10.ArrowRight = "ArrowRight", r10.ArrowDown = "ArrowDown", r10.Home = "Home", r10.End = "End", r10.PageUp = "PageUp", r10.PageDown = "PageDown", r10.Tab = "Tab", r10))(o8 || {});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-controllable.js
var import_react68 = __toESM(require_react(), 1);
function T4(l11, r10, c16) {
  let [i10, s18] = (0, import_react68.useState)(c16), e6 = l11 !== void 0, t15 = (0, import_react68.useRef)(e6), u10 = (0, import_react68.useRef)(false), d14 = (0, import_react68.useRef)(false);
  return e6 && !t15.current && !u10.current ? (u10.current = true, t15.current = e6, console.error("A component is changing from uncontrolled to controlled. This may be caused by the value changing from undefined to a defined value, which should not happen.")) : !e6 && t15.current && !d14.current && (d14.current = true, t15.current = e6, console.error("A component is changing from controlled to uncontrolled. This may be caused by the value changing from a defined value to undefined, which should not happen.")), [e6 ? l11 : i10, o4((n7) => (e6 || s18(n7), r10 == null ? void 0 : r10(n7)))];
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-watch.js
var import_react69 = __toESM(require_react(), 1);
function m4(u10, t15) {
  let e6 = (0, import_react69.useRef)([]), r10 = o4(u10);
  (0, import_react69.useEffect)(() => {
    let o13 = [...e6.current];
    for (let [n7, a15] of t15.entries())
      if (e6.current[n7] !== a15) {
        let l11 = r10(t15, o13);
        return e6.current = t15, l11;
      }
  }, [r10, ...t15]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-tracked-pointer.js
var import_react70 = __toESM(require_react(), 1);
function t6(e6) {
  return [e6.screenX, e6.screenY];
}
function u3() {
  let e6 = (0, import_react70.useRef)([-1, -1]);
  return { wasMoved(r10) {
    let n7 = t6(r10);
    return e6.current[0] === n7[0] && e6.current[1] === n7[1] ? false : (e6.current = n7, true);
  }, update(r10) {
    e6.current = t6(r10);
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/platform.js
function t7() {
  return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0;
}
function i6() {
  return /Android/gi.test(window.navigator.userAgent);
}
function n2() {
  return t7() || i6();
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/combobox/combobox.js
var ke = ((e6) => (e6[e6.Open = 0] = "Open", e6[e6.Closed = 1] = "Closed", e6))(ke || {});
var we = ((e6) => (e6[e6.Single = 0] = "Single", e6[e6.Multi = 1] = "Multi", e6))(we || {});
var Ue = ((e6) => (e6[e6.Pointer = 0] = "Pointer", e6[e6.Other = 1] = "Other", e6))(Ue || {});
var He = ((n7) => (n7[n7.OpenCombobox = 0] = "OpenCombobox", n7[n7.CloseCombobox = 1] = "CloseCombobox", n7[n7.GoToOption = 2] = "GoToOption", n7[n7.RegisterOption = 3] = "RegisterOption", n7[n7.UnregisterOption = 4] = "UnregisterOption", n7[n7.RegisterLabel = 5] = "RegisterLabel", n7))(He || {});
function ae(t15, l11 = (e6) => e6) {
  let e6 = t15.activeOptionIndex !== null ? t15.options[t15.activeOptionIndex] : null, r10 = I2(l11(t15.options.slice()), (b7) => b7.dataRef.current.domRef.current), a15 = e6 ? r10.indexOf(e6) : null;
  return a15 === -1 && (a15 = null), { options: r10, activeOptionIndex: a15 };
}
var Ne = { [1](t15) {
  var l11;
  return (l11 = t15.dataRef.current) != null && l11.disabled || t15.comboboxState === 1 ? t15 : { ...t15, activeOptionIndex: null, comboboxState: 1 };
}, [0](t15) {
  var e6;
  if ((e6 = t15.dataRef.current) != null && e6.disabled || t15.comboboxState === 0)
    return t15;
  let l11 = t15.activeOptionIndex;
  if (t15.dataRef.current) {
    let { isSelected: r10 } = t15.dataRef.current, a15 = t15.options.findIndex((b7) => r10(b7.dataRef.current.value));
    a15 !== -1 && (l11 = a15);
  }
  return { ...t15, comboboxState: 0, activeOptionIndex: l11 };
}, [2](t15, l11) {
  var a15, b7, n7, d14;
  if ((a15 = t15.dataRef.current) != null && a15.disabled || (b7 = t15.dataRef.current) != null && b7.optionsRef.current && !((n7 = t15.dataRef.current) != null && n7.optionsPropsRef.current.static) && t15.comboboxState === 1)
    return t15;
  let e6 = ae(t15);
  if (e6.activeOptionIndex === null) {
    let o13 = e6.options.findIndex((i10) => !i10.dataRef.current.disabled);
    o13 !== -1 && (e6.activeOptionIndex = o13);
  }
  let r10 = x(l11, { resolveItems: () => e6.options, resolveActiveIndex: () => e6.activeOptionIndex, resolveId: (o13) => o13.id, resolveDisabled: (o13) => o13.dataRef.current.disabled });
  return { ...t15, ...e6, activeOptionIndex: r10, activationTrigger: (d14 = l11.trigger) != null ? d14 : 1 };
}, [3]: (t15, l11) => {
  var b7, n7;
  let e6 = { id: l11.id, dataRef: l11.dataRef }, r10 = ae(t15, (d14) => [...d14, e6]);
  t15.activeOptionIndex === null && (b7 = t15.dataRef.current) != null && b7.isSelected(l11.dataRef.current.value) && (r10.activeOptionIndex = r10.options.indexOf(e6));
  let a15 = { ...t15, ...r10, activationTrigger: 1 };
  return (n7 = t15.dataRef.current) != null && n7.__demoMode && t15.dataRef.current.value === void 0 && (a15.activeOptionIndex = 0), a15;
}, [4]: (t15, l11) => {
  let e6 = ae(t15, (r10) => {
    let a15 = r10.findIndex((b7) => b7.id === l11.id);
    return a15 !== -1 && r10.splice(a15, 1), r10;
  });
  return { ...t15, ...e6, activationTrigger: 1 };
}, [5]: (t15, l11) => ({ ...t15, labelId: l11.id }) };
var le = (0, import_react71.createContext)(null);
le.displayName = "ComboboxActionsContext";
function q(t15) {
  let l11 = (0, import_react71.useContext)(le);
  if (l11 === null) {
    let e6 = new Error(`<${t15} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(e6, q), e6;
  }
  return l11;
}
var ie = (0, import_react71.createContext)(null);
ie.displayName = "ComboboxDataContext";
function G(t15) {
  let l11 = (0, import_react71.useContext)(ie);
  if (l11 === null) {
    let e6 = new Error(`<${t15} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(e6, G), e6;
  }
  return l11;
}
function Ge(t15, l11) {
  return u(l11.type, Ne, t15, l11);
}
var Xe = import_react71.Fragment;
function je(t15, l11) {
  let { value: e6, defaultValue: r10, onChange: a15, form: b7, name: n7, by: d14 = (p10, m12) => p10 === m12, disabled: o13 = false, __demoMode: i10 = false, nullable: E8 = false, multiple: f13 = false, ...A4 } = t15, [T8 = f13 ? [] : void 0, g5] = T4(e6, a15, r10), [c16, x7] = (0, import_react71.useReducer)(Ge, { dataRef: (0, import_react71.createRef)(), comboboxState: i10 ? 0 : 1, options: [], activeOptionIndex: null, activationTrigger: 1, labelId: null }), L3 = (0, import_react71.useRef)(false), D7 = (0, import_react71.useRef)({ static: false, hold: false }), B3 = (0, import_react71.useRef)(null), k2 = (0, import_react71.useRef)(null), w6 = (0, import_react71.useRef)(null), X7 = (0, import_react71.useRef)(null), F8 = o4(typeof d14 == "string" ? (p10, m12) => {
    let R3 = d14;
    return (p10 == null ? void 0 : p10[R3]) === (m12 == null ? void 0 : m12[R3]);
  } : d14), M10 = (0, import_react71.useCallback)((p10) => u(s18.mode, { [1]: () => T8.some((m12) => F8(m12, p10)), [0]: () => F8(T8, p10) }), [T8]), s18 = (0, import_react71.useMemo)(() => ({ ...c16, optionsPropsRef: D7, labelRef: B3, inputRef: k2, buttonRef: w6, optionsRef: X7, value: T8, defaultValue: r10, disabled: o13, mode: f13 ? 1 : 0, get activeOptionIndex() {
    if (L3.current && c16.activeOptionIndex === null && c16.options.length > 0) {
      let p10 = c16.options.findIndex((m12) => !m12.dataRef.current.disabled);
      if (p10 !== -1)
        return p10;
    }
    return c16.activeOptionIndex;
  }, compare: F8, isSelected: M10, nullable: E8, __demoMode: i10 }), [T8, r10, o13, f13, E8, i10, c16]), O4 = (0, import_react71.useRef)(s18.activeOptionIndex !== null ? s18.options[s18.activeOptionIndex] : null);
  (0, import_react71.useEffect)(() => {
    let p10 = s18.activeOptionIndex !== null ? s18.options[s18.activeOptionIndex] : null;
    O4.current !== p10 && (O4.current = p10);
  }), l(() => {
    c16.dataRef.current = s18;
  }, [s18]), H2([s18.buttonRef, s18.inputRef, s18.optionsRef], () => te5.closeCombobox(), s18.comboboxState === 0);
  let S8 = (0, import_react71.useMemo)(() => ({ open: s18.comboboxState === 0, disabled: o13, activeIndex: s18.activeOptionIndex, activeOption: s18.activeOptionIndex === null ? null : s18.options[s18.activeOptionIndex].dataRef.current.value, value: T8 }), [s18, o13, T8]), u10 = o4((p10) => {
    let m12 = s18.options.find((R3) => R3.id === p10);
    m12 && J6(m12.dataRef.current.value);
  }), _5 = o4(() => {
    if (s18.activeOptionIndex !== null) {
      let { dataRef: p10, id: m12 } = s18.options[s18.activeOptionIndex];
      J6(p10.current.value), te5.goToOption(a3.Specific, m12);
    }
  }), I8 = o4(() => {
    x7({ type: 0 }), L3.current = true;
  }), j7 = o4(() => {
    x7({ type: 1 }), L3.current = false;
  }), Q7 = o4((p10, m12, R3) => (L3.current = false, p10 === a3.Specific ? x7({ type: 2, focus: a3.Specific, id: m12, trigger: R3 }) : x7({ type: 2, focus: p10, trigger: R3 }))), Y5 = o4((p10, m12) => (x7({ type: 3, id: p10, dataRef: m12 }), () => {
    var R3;
    ((R3 = O4.current) == null ? void 0 : R3.id) === p10 && (L3.current = true), x7({ type: 4, id: p10 });
  })), Z7 = o4((p10) => (x7({ type: 5, id: p10 }), () => x7({ type: 5, id: null }))), J6 = o4((p10) => u(s18.mode, { [0]() {
    return g5 == null ? void 0 : g5(p10);
  }, [1]() {
    let m12 = s18.value.slice(), R3 = m12.findIndex((K5) => F8(K5, p10));
    return R3 === -1 ? m12.push(p10) : m12.splice(R3, 1), g5 == null ? void 0 : g5(m12);
  } })), te5 = (0, import_react71.useMemo)(() => ({ onChange: J6, registerOption: Y5, registerLabel: Z7, goToOption: Q7, closeCombobox: j7, openCombobox: I8, selectActiveOption: _5, selectOption: u10 }), []), Te4 = l11 === null ? {} : { ref: l11 }, z7 = (0, import_react71.useRef)(null), me5 = p();
  return (0, import_react71.useEffect)(() => {
    z7.current && r10 !== void 0 && me5.addEventListener(z7.current, "reset", () => {
      J6(r10);
    });
  }, [z7, J6]), import_react71.default.createElement(le.Provider, { value: te5 }, import_react71.default.createElement(ie.Provider, { value: s18 }, import_react71.default.createElement(c7, { value: u(s18.comboboxState, { [0]: d5.Open, [1]: d5.Closed }) }, n7 != null && T8 != null && e3({ [n7]: T8 }).map(([p10, m12], R3) => import_react71.default.createElement(c6, { features: p3.Hidden, ref: R3 === 0 ? (K5) => {
    var ue6;
    z7.current = (ue6 = K5 == null ? void 0 : K5.closest("form")) != null ? ue6 : null;
  } : void 0, ...R({ key: p10, as: "input", type: "hidden", hidden: true, readOnly: true, form: b7, name: p10, value: m12 }) })), X({ ourProps: Te4, theirProps: A4, slot: S8, defaultTag: Xe, name: "Combobox" }))));
}
var Je = "input";
function Ke(t15, l11) {
  var M10, s18, O4, S8;
  let e6 = I(), { id: r10 = `headlessui-combobox-input-${e6}`, onChange: a15, displayValue: b7, type: n7 = "text", ...d14 } = t15, o13 = G("Combobox.Input"), i10 = q("Combobox.Input"), E8 = y2(o13.inputRef, l11), f13 = (0, import_react71.useRef)(false), A4 = p(), T8 = function() {
    var u10;
    return typeof b7 == "function" && o13.value !== void 0 ? (u10 = b7(o13.value)) != null ? u10 : "" : typeof o13.value == "string" ? o13.value : "";
  }();
  m4(([u10, _5], [I8, j7]) => {
    f13.current || o13.inputRef.current && (j7 === 0 && _5 === 1 || u10 !== I8) && (o13.inputRef.current.value = u10);
  }, [T8, o13.comboboxState]), m4(([u10], [_5]) => {
    if (u10 === 0 && _5 === 1) {
      let I8 = o13.inputRef.current;
      if (!I8)
        return;
      let j7 = I8.value, { selectionStart: Q7, selectionEnd: Y5, selectionDirection: Z7 } = I8;
      I8.value = "", I8.value = j7, Z7 !== null ? I8.setSelectionRange(Q7, Y5, Z7) : I8.setSelectionRange(Q7, Y5);
    }
  }, [o13.comboboxState]);
  let g5 = (0, import_react71.useRef)(false), c16 = (0, import_react71.useRef)(null), x7 = o4(() => {
    g5.current = true;
  }), L3 = o4(() => {
    A4.nextFrame(() => {
      g5.current = false, c16.current && (i10.openCombobox(), a15 == null || a15(c16.current), c16.current = null);
    });
  }), D7 = o4((u10) => {
    switch (f13.current = true, u10.key) {
      case o8.Backspace:
      case o8.Delete:
        if (o13.mode !== 0 || !o13.nullable)
          return;
        let _5 = u10.currentTarget;
        A4.requestAnimationFrame(() => {
          _5.value === "" && (i10.onChange(null), o13.optionsRef.current && (o13.optionsRef.current.scrollTop = 0), i10.goToOption(a3.Nothing));
        });
        break;
      case o8.Enter:
        if (f13.current = false, o13.comboboxState !== 0 || g5.current)
          return;
        if (u10.preventDefault(), u10.stopPropagation(), o13.activeOptionIndex === null) {
          i10.closeCombobox();
          return;
        }
        i10.selectActiveOption(), o13.mode === 0 && i10.closeCombobox();
        break;
      case o8.ArrowDown:
        return f13.current = false, u10.preventDefault(), u10.stopPropagation(), u(o13.comboboxState, { [0]: () => {
          i10.goToOption(a3.Next);
        }, [1]: () => {
          i10.openCombobox();
        } });
      case o8.ArrowUp:
        return f13.current = false, u10.preventDefault(), u10.stopPropagation(), u(o13.comboboxState, { [0]: () => {
          i10.goToOption(a3.Previous);
        }, [1]: () => {
          i10.openCombobox(), A4.nextFrame(() => {
            o13.value || i10.goToOption(a3.Last);
          });
        } });
      case o8.Home:
        if (u10.shiftKey)
          break;
        return f13.current = false, u10.preventDefault(), u10.stopPropagation(), i10.goToOption(a3.First);
      case o8.PageUp:
        return f13.current = false, u10.preventDefault(), u10.stopPropagation(), i10.goToOption(a3.First);
      case o8.End:
        if (u10.shiftKey)
          break;
        return f13.current = false, u10.preventDefault(), u10.stopPropagation(), i10.goToOption(a3.Last);
      case o8.PageDown:
        return f13.current = false, u10.preventDefault(), u10.stopPropagation(), i10.goToOption(a3.Last);
      case o8.Escape:
        return f13.current = false, o13.comboboxState !== 0 ? void 0 : (u10.preventDefault(), o13.optionsRef.current && !o13.optionsPropsRef.current.static && u10.stopPropagation(), i10.closeCombobox());
      case o8.Tab:
        if (f13.current = false, o13.comboboxState !== 0)
          return;
        o13.mode === 0 && i10.selectActiveOption(), i10.closeCombobox();
        break;
    }
  }), B3 = o4((u10) => {
    if (g5.current) {
      c16.current = u10;
      return;
    }
    i10.openCombobox(), a15 == null || a15(u10);
  }), k2 = o4(() => {
    f13.current = false;
  }), w6 = i2(() => {
    if (o13.labelId)
      return [o13.labelId].join(" ");
  }, [o13.labelId]), X7 = (0, import_react71.useMemo)(() => ({ open: o13.comboboxState === 0, disabled: o13.disabled }), [o13]), F8 = { ref: E8, id: r10, role: "combobox", type: n7, "aria-controls": (M10 = o13.optionsRef.current) == null ? void 0 : M10.id, "aria-expanded": o13.disabled ? void 0 : o13.comboboxState === 0, "aria-activedescendant": o13.activeOptionIndex === null || (s18 = o13.options[o13.activeOptionIndex]) == null ? void 0 : s18.id, "aria-labelledby": w6, "aria-autocomplete": "list", defaultValue: (S8 = (O4 = t15.defaultValue) != null ? O4 : o13.defaultValue !== void 0 ? b7 == null ? void 0 : b7(o13.defaultValue) : null) != null ? S8 : o13.defaultValue, disabled: o13.disabled, onCompositionStart: x7, onCompositionEnd: L3, onKeyDown: D7, onChange: B3, onBlur: k2 };
  return X({ ourProps: F8, theirProps: d14, slot: X7, defaultTag: Je, name: "Combobox.Input" });
}
var We = "button";
function $e(t15, l11) {
  var g5;
  let e6 = G("Combobox.Button"), r10 = q("Combobox.Button"), a15 = y2(e6.buttonRef, l11), b7 = I(), { id: n7 = `headlessui-combobox-button-${b7}`, ...d14 } = t15, o13 = p(), i10 = o4((c16) => {
    switch (c16.key) {
      case o8.ArrowDown:
        return c16.preventDefault(), c16.stopPropagation(), e6.comboboxState === 1 && r10.openCombobox(), o13.nextFrame(() => {
          var x7;
          return (x7 = e6.inputRef.current) == null ? void 0 : x7.focus({ preventScroll: true });
        });
      case o8.ArrowUp:
        return c16.preventDefault(), c16.stopPropagation(), e6.comboboxState === 1 && (r10.openCombobox(), o13.nextFrame(() => {
          e6.value || r10.goToOption(a3.Last);
        })), o13.nextFrame(() => {
          var x7;
          return (x7 = e6.inputRef.current) == null ? void 0 : x7.focus({ preventScroll: true });
        });
      case o8.Escape:
        return e6.comboboxState !== 0 ? void 0 : (c16.preventDefault(), e6.optionsRef.current && !e6.optionsPropsRef.current.static && c16.stopPropagation(), r10.closeCombobox(), o13.nextFrame(() => {
          var x7;
          return (x7 = e6.inputRef.current) == null ? void 0 : x7.focus({ preventScroll: true });
        }));
      default:
        return;
    }
  }), E8 = o4((c16) => {
    if (r3(c16.currentTarget))
      return c16.preventDefault();
    e6.comboboxState === 0 ? r10.closeCombobox() : (c16.preventDefault(), r10.openCombobox()), o13.nextFrame(() => {
      var x7;
      return (x7 = e6.inputRef.current) == null ? void 0 : x7.focus({ preventScroll: true });
    });
  }), f13 = i2(() => {
    if (e6.labelId)
      return [e6.labelId, n7].join(" ");
  }, [e6.labelId, n7]), A4 = (0, import_react71.useMemo)(() => ({ open: e6.comboboxState === 0, disabled: e6.disabled, value: e6.value }), [e6]), T8 = { ref: a15, id: n7, type: s6(t15, e6.buttonRef), tabIndex: -1, "aria-haspopup": "listbox", "aria-controls": (g5 = e6.optionsRef.current) == null ? void 0 : g5.id, "aria-expanded": e6.disabled ? void 0 : e6.comboboxState === 0, "aria-labelledby": f13, disabled: e6.disabled, onClick: E8, onKeyDown: i10 };
  return X({ ourProps: T8, theirProps: d14, slot: A4, defaultTag: We, name: "Combobox.Button" });
}
var qe = "label";
function Qe(t15, l11) {
  let e6 = I(), { id: r10 = `headlessui-combobox-label-${e6}`, ...a15 } = t15, b7 = G("Combobox.Label"), n7 = q("Combobox.Label"), d14 = y2(b7.labelRef, l11);
  l(() => n7.registerLabel(r10), [r10]);
  let o13 = o4(() => {
    var f13;
    return (f13 = b7.inputRef.current) == null ? void 0 : f13.focus({ preventScroll: true });
  }), i10 = (0, import_react71.useMemo)(() => ({ open: b7.comboboxState === 0, disabled: b7.disabled }), [b7]);
  return X({ ourProps: { ref: d14, id: r10, onClick: o13 }, theirProps: a15, slot: i10, defaultTag: qe, name: "Combobox.Label" });
}
var Ye = "ul";
var Ze = S2.RenderStrategy | S2.Static;
function ze(t15, l11) {
  let e6 = I(), { id: r10 = `headlessui-combobox-options-${e6}`, hold: a15 = false, ...b7 } = t15, n7 = G("Combobox.Options"), d14 = y2(n7.optionsRef, l11), o13 = C(), i10 = (() => o13 !== null ? (o13 & d5.Open) === d5.Open : n7.comboboxState === 0)();
  l(() => {
    var T8;
    n7.optionsPropsRef.current.static = (T8 = t15.static) != null ? T8 : false;
  }, [n7.optionsPropsRef, t15.static]), l(() => {
    n7.optionsPropsRef.current.hold = a15;
  }, [n7.optionsPropsRef, a15]), F2({ container: n7.optionsRef.current, enabled: n7.comboboxState === 0, accept(T8) {
    return T8.getAttribute("role") === "option" ? NodeFilter.FILTER_REJECT : T8.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(T8) {
    T8.setAttribute("role", "none");
  } });
  let E8 = i2(() => {
    var T8, g5;
    return (g5 = n7.labelId) != null ? g5 : (T8 = n7.buttonRef.current) == null ? void 0 : T8.id;
  }, [n7.labelId, n7.buttonRef.current]), f13 = (0, import_react71.useMemo)(() => ({ open: n7.comboboxState === 0 }), [n7]), A4 = { "aria-labelledby": E8, role: "listbox", "aria-multiselectable": n7.mode === 1 ? true : void 0, id: r10, ref: d14 };
  return X({ ourProps: A4, theirProps: b7, slot: f13, defaultTag: Ye, features: Ze, visible: i10, name: "Combobox.Options" });
}
var eo = "li";
function oo(t15, l11) {
  var M10, s18;
  let e6 = I(), { id: r10 = `headlessui-combobox-option-${e6}`, disabled: a15 = false, value: b7, ...n7 } = t15, d14 = G("Combobox.Option"), o13 = q("Combobox.Option"), i10 = d14.activeOptionIndex !== null ? d14.options[d14.activeOptionIndex].id === r10 : false, E8 = d14.isSelected(b7), f13 = (0, import_react71.useRef)(null), A4 = s2({ disabled: a15, value: b7, domRef: f13, textValue: (s18 = (M10 = f13.current) == null ? void 0 : M10.textContent) == null ? void 0 : s18.toLowerCase() }), T8 = y2(l11, f13), g5 = o4(() => o13.selectOption(r10));
  l(() => o13.registerOption(r10, A4), [A4, r10]);
  let c16 = (0, import_react71.useRef)(!d14.__demoMode);
  l(() => {
    if (!d14.__demoMode)
      return;
    let O4 = o2();
    return O4.requestAnimationFrame(() => {
      c16.current = true;
    }), O4.dispose;
  }, []), l(() => {
    if (d14.comboboxState !== 0 || !i10 || !c16.current || d14.activationTrigger === 0)
      return;
    let O4 = o2();
    return O4.requestAnimationFrame(() => {
      var S8, u10;
      (u10 = (S8 = f13.current) == null ? void 0 : S8.scrollIntoView) == null || u10.call(S8, { block: "nearest" });
    }), O4.dispose;
  }, [f13, i10, d14.comboboxState, d14.activationTrigger, d14.activeOptionIndex]);
  let x7 = o4((O4) => {
    if (a15)
      return O4.preventDefault();
    g5(), d14.mode === 0 && o13.closeCombobox(), n2() || requestAnimationFrame(() => {
      var S8;
      return (S8 = d14.inputRef.current) == null ? void 0 : S8.focus();
    });
  }), L3 = o4(() => {
    if (a15)
      return o13.goToOption(a3.Nothing);
    o13.goToOption(a3.Specific, r10);
  }), D7 = u3(), B3 = o4((O4) => D7.update(O4)), k2 = o4((O4) => {
    D7.wasMoved(O4) && (a15 || i10 || o13.goToOption(a3.Specific, r10, 0));
  }), w6 = o4((O4) => {
    D7.wasMoved(O4) && (a15 || i10 && (d14.optionsPropsRef.current.hold || o13.goToOption(a3.Nothing)));
  }), X7 = (0, import_react71.useMemo)(() => ({ active: i10, selected: E8, disabled: a15 }), [i10, E8, a15]);
  return X({ ourProps: { id: r10, ref: T8, role: "option", tabIndex: a15 === true ? void 0 : -1, "aria-disabled": a15 === true ? true : void 0, "aria-selected": E8, disabled: void 0, onClick: x7, onFocus: L3, onPointerEnter: B3, onMouseEnter: B3, onPointerMove: k2, onMouseMove: k2, onPointerLeave: w6, onMouseLeave: w6 }, theirProps: n7, slot: X7, defaultTag: eo, name: "Combobox.Option" });
}
var to = D2(je);
var no = D2($e);
var ro = D2(Ke);
var ao = D2(Qe);
var lo = D2(ze);
var io = D2(oo);
var Wo = Object.assign(to, { Input: ro, Button: no, Label: ao, Options: lo, Option: io });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/dialog/dialog.js
var import_react83 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
var import_react77 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-tab-direction.js
var import_react72 = __toESM(require_react(), 1);
var s10 = ((r10) => (r10[r10.Forwards = 0] = "Forwards", r10[r10.Backwards = 1] = "Backwards", r10))(s10 || {});
function n3() {
  let e6 = (0, import_react72.useRef)(0);
  return s5("keydown", (o13) => {
    o13.key === "Tab" && (e6.current = o13.shiftKey ? 1 : 0);
  }, true), e6;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-is-mounted.js
var import_react73 = __toESM(require_react(), 1);
function f6() {
  let e6 = (0, import_react73.useRef)(false);
  return l(() => (e6.current = true, () => {
    e6.current = false;
  }), []), e6;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-owner.js
var import_react74 = __toESM(require_react(), 1);
function n4(...e6) {
  return (0, import_react74.useMemo)(() => e(...e6), [...e6]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-event-listener.js
var import_react75 = __toESM(require_react(), 1);
function E3(n7, e6, a15, t15) {
  let i10 = s2(a15);
  (0, import_react75.useEffect)(() => {
    n7 = n7 != null ? n7 : window;
    function r10(o13) {
      i10.current(o13);
    }
    return n7.addEventListener(e6, r10, t15), () => n7.removeEventListener(e6, r10, t15);
  }, [n7, e6, t15]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/document-ready.js
function t10(n7) {
  function e6() {
    document.readyState !== "loading" && (n7(), document.removeEventListener("DOMContentLoaded", e6));
  }
  typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("DOMContentLoaded", e6), e6());
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-on-unmount.js
var import_react76 = __toESM(require_react(), 1);
function c8(t15) {
  let r10 = o4(t15), e6 = (0, import_react76.useRef)(false);
  (0, import_react76.useEffect)(() => (e6.current = false, () => {
    e6.current = true, t3(() => {
      e6.current && r10();
    });
  }), [r10]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
function P2(t15) {
  if (!t15)
    return /* @__PURE__ */ new Set();
  if (typeof t15 == "function")
    return new Set(t15());
  let r10 = /* @__PURE__ */ new Set();
  for (let e6 of t15.current)
    e6.current instanceof HTMLElement && r10.add(e6.current);
  return r10;
}
var J = "div";
var h3 = ((n7) => (n7[n7.None = 1] = "None", n7[n7.InitialFocus = 2] = "InitialFocus", n7[n7.TabLock = 4] = "TabLock", n7[n7.FocusLock = 8] = "FocusLock", n7[n7.RestoreFocus = 16] = "RestoreFocus", n7[n7.All = 30] = "All", n7))(h3 || {});
function X2(t15, r10) {
  let e6 = (0, import_react77.useRef)(null), o13 = y2(e6, r10), { initialFocus: u10, containers: i10, features: n7 = 30, ...l11 } = t15;
  l2() || (n7 = 1);
  let m12 = n4(e6);
  Y({ ownerDocument: m12 }, Boolean(n7 & 16));
  let c16 = Z({ ownerDocument: m12, container: e6, initialFocus: u10 }, Boolean(n7 & 2));
  $({ ownerDocument: m12, container: e6, containers: i10, previousActiveElement: c16 }, Boolean(n7 & 8));
  let v5 = n3(), y9 = o4((s18) => {
    let T8 = e6.current;
    if (!T8)
      return;
    ((B3) => B3())(() => {
      u(v5.current, { [s10.Forwards]: () => {
        O(T8, M.First, { skipElements: [s18.relatedTarget] });
      }, [s10.Backwards]: () => {
        O(T8, M.Last, { skipElements: [s18.relatedTarget] });
      } });
    });
  }), _5 = p(), b7 = (0, import_react77.useRef)(false), j7 = { ref: o13, onKeyDown(s18) {
    s18.key == "Tab" && (b7.current = true, _5.requestAnimationFrame(() => {
      b7.current = false;
    }));
  }, onBlur(s18) {
    let T8 = P2(i10);
    e6.current instanceof HTMLElement && T8.add(e6.current);
    let d14 = s18.relatedTarget;
    d14 instanceof HTMLElement && d14.dataset.headlessuiFocusGuard !== "true" && (S3(T8, d14) || (b7.current ? O(e6.current, u(v5.current, { [s10.Forwards]: () => M.Next, [s10.Backwards]: () => M.Previous }) | M.WrapAround, { relativeTo: s18.target }) : s18.target instanceof HTMLElement && y(s18.target)));
  } };
  return import_react77.default.createElement(import_react77.default.Fragment, null, Boolean(n7 & 4) && import_react77.default.createElement(c6, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: y9, features: p3.Focusable }), X({ ourProps: j7, theirProps: l11, defaultTag: J, name: "FocusTrap" }), Boolean(n7 & 4) && import_react77.default.createElement(c6, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: y9, features: p3.Focusable }));
}
var z = D2(X2);
var ge2 = Object.assign(z, { features: h3 });
var a5 = [];
t10(() => {
  function t15(r10) {
    r10.target instanceof HTMLElement && r10.target !== document.body && a5[0] !== r10.target && (a5.unshift(r10.target), a5 = a5.filter((e6) => e6 != null && e6.isConnected), a5.splice(10));
  }
  window.addEventListener("click", t15, { capture: true }), window.addEventListener("mousedown", t15, { capture: true }), window.addEventListener("focus", t15, { capture: true }), document.body.addEventListener("click", t15, { capture: true }), document.body.addEventListener("mousedown", t15, { capture: true }), document.body.addEventListener("focus", t15, { capture: true });
});
function Q(t15 = true) {
  let r10 = (0, import_react77.useRef)(a5.slice());
  return m4(([e6], [o13]) => {
    o13 === true && e6 === false && t3(() => {
      r10.current.splice(0);
    }), o13 === false && e6 === true && (r10.current = a5.slice());
  }, [t15, a5, r10]), o4(() => {
    var e6;
    return (e6 = r10.current.find((o13) => o13 != null && o13.isConnected)) != null ? e6 : null;
  });
}
function Y({ ownerDocument: t15 }, r10) {
  let e6 = Q(r10);
  m4(() => {
    r10 || (t15 == null ? void 0 : t15.activeElement) === (t15 == null ? void 0 : t15.body) && y(e6());
  }, [r10]), c8(() => {
    r10 && y(e6());
  });
}
function Z({ ownerDocument: t15, container: r10, initialFocus: e6 }, o13) {
  let u10 = (0, import_react77.useRef)(null), i10 = f6();
  return m4(() => {
    if (!o13)
      return;
    let n7 = r10.current;
    n7 && t3(() => {
      if (!i10.current)
        return;
      let l11 = t15 == null ? void 0 : t15.activeElement;
      if (e6 != null && e6.current) {
        if ((e6 == null ? void 0 : e6.current) === l11) {
          u10.current = l11;
          return;
        }
      } else if (n7.contains(l11)) {
        u10.current = l11;
        return;
      }
      e6 != null && e6.current ? y(e6.current) : O(n7, M.First) === N.Error && console.warn("There are no focusable elements inside the <FocusTrap />"), u10.current = t15 == null ? void 0 : t15.activeElement;
    });
  }, [o13]), u10;
}
function $({ ownerDocument: t15, container: r10, containers: e6, previousActiveElement: o13 }, u10) {
  let i10 = f6();
  E3(t15 == null ? void 0 : t15.defaultView, "focus", (n7) => {
    if (!u10 || !i10.current)
      return;
    let l11 = P2(e6);
    r10.current instanceof HTMLElement && l11.add(r10.current);
    let m12 = o13.current;
    if (!m12)
      return;
    let c16 = n7.target;
    c16 && c16 instanceof HTMLElement ? S3(l11, c16) ? (o13.current = c16, y(c16)) : (n7.preventDefault(), n7.stopPropagation(), y(m12)) : y(o13.current);
  }, true);
}
function S3(t15, r10) {
  for (let e6 of t15)
    if (e6.contains(r10))
      return true;
  return false;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/portal/portal.js
var import_react79 = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/portal-force-root.js
var import_react78 = __toESM(require_react(), 1);
var e4 = (0, import_react78.createContext)(false);
function l5() {
  return (0, import_react78.useContext)(e4);
}
function P3(o13) {
  return import_react78.default.createElement(e4.Provider, { value: o13.force }, o13.children);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/portal/portal.js
function F3(p10) {
  let l11 = l5(), n7 = (0, import_react79.useContext)(v), e6 = n4(p10), [a15, o13] = (0, import_react79.useState)(() => {
    if (!l11 && n7 !== null || s.isServer)
      return null;
    let t15 = e6 == null ? void 0 : e6.getElementById("headlessui-portal-root");
    if (t15)
      return t15;
    if (e6 === null)
      return null;
    let r10 = e6.createElement("div");
    return r10.setAttribute("id", "headlessui-portal-root"), e6.body.appendChild(r10);
  });
  return (0, import_react79.useEffect)(() => {
    a15 !== null && (e6 != null && e6.body.contains(a15) || e6 == null || e6.body.appendChild(a15));
  }, [a15, e6]), (0, import_react79.useEffect)(() => {
    l11 || n7 !== null && o13(n7.current);
  }, [n7, o13, l11]), a15;
}
var U = import_react79.Fragment;
function N3(p10, l11) {
  let n7 = p10, e6 = (0, import_react79.useRef)(null), a15 = y2(T2((u10) => {
    e6.current = u10;
  }), l11), o13 = n4(e6), t15 = F3(e6), [r10] = (0, import_react79.useState)(() => {
    var u10;
    return s.isServer ? null : (u10 = o13 == null ? void 0 : o13.createElement("div")) != null ? u10 : null;
  }), i10 = (0, import_react79.useContext)(f7), C5 = l2();
  return l(() => {
    !t15 || !r10 || t15.contains(r10) || (r10.setAttribute("data-headlessui-portal", ""), t15.appendChild(r10));
  }, [t15, r10]), l(() => {
    if (r10 && i10)
      return i10.register(r10);
  }, [i10, r10]), c8(() => {
    var u10;
    !t15 || !r10 || (r10 instanceof Node && t15.contains(r10) && t15.removeChild(r10), t15.childNodes.length <= 0 && ((u10 = t15.parentElement) == null || u10.removeChild(t15)));
  }), C5 ? !t15 || !r10 ? null : (0, import_react_dom.createPortal)(X({ ourProps: { ref: a15 }, theirProps: n7, defaultTag: U, name: "Portal" }), r10) : null;
}
var S4 = import_react79.Fragment;
var v = (0, import_react79.createContext)(null);
function j2(p10, l11) {
  let { target: n7, ...e6 } = p10, o13 = { ref: y2(l11) };
  return import_react79.default.createElement(v.Provider, { value: n7 }, X({ ourProps: o13, theirProps: e6, defaultTag: S4, name: "Popover.Group" }));
}
var f7 = (0, import_react79.createContext)(null);
function ae2() {
  let p10 = (0, import_react79.useContext)(f7), l11 = (0, import_react79.useRef)([]), n7 = o4((o13) => (l11.current.push(o13), p10 && p10.register(o13), () => e6(o13))), e6 = o4((o13) => {
    let t15 = l11.current.indexOf(o13);
    t15 !== -1 && l11.current.splice(t15, 1), p10 && p10.unregister(o13);
  }), a15 = (0, import_react79.useMemo)(() => ({ register: n7, unregister: e6, portals: l11 }), [n7, e6, l11]);
  return [l11, (0, import_react79.useMemo)(() => function({ children: t15 }) {
    return import_react79.default.createElement(f7.Provider, { value: a15 }, t15);
  }, [a15])];
}
var D3 = D2(N3);
var I3 = D2(j2);
var pe2 = Object.assign(D3, { Group: I3 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/description/description.js
var import_react80 = __toESM(require_react(), 1);
var d8 = (0, import_react80.createContext)(null);
function f8() {
  let r10 = (0, import_react80.useContext)(d8);
  if (r10 === null) {
    let t15 = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t15, f8), t15;
  }
  return r10;
}
function M2() {
  let [r10, t15] = (0, import_react80.useState)([]);
  return [r10.length > 0 ? r10.join(" ") : void 0, (0, import_react80.useMemo)(() => function(e6) {
    let i10 = o4((s18) => (t15((o13) => [...o13, s18]), () => t15((o13) => {
      let p10 = o13.slice(), c16 = p10.indexOf(s18);
      return c16 !== -1 && p10.splice(c16, 1), p10;
    }))), n7 = (0, import_react80.useMemo)(() => ({ register: i10, slot: e6.slot, name: e6.name, props: e6.props }), [i10, e6.slot, e6.name, e6.props]);
    return import_react80.default.createElement(d8.Provider, { value: n7 }, e6.children);
  }, [t15])];
}
var S5 = "p";
function h4(r10, t15) {
  let a15 = I(), { id: e6 = `headlessui-description-${a15}`, ...i10 } = r10, n7 = f8(), s18 = y2(t15);
  l(() => n7.register(e6), [e6, n7.register]);
  let o13 = { ref: s18, ...n7.props, id: e6 };
  return X({ ourProps: o13, theirProps: i10, slot: n7.slot || {}, defaultTag: S5, name: n7.name || "Description" });
}
var y3 = D2(h4);
var b3 = Object.assign(y3, {});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/stack-context.js
var import_react81 = __toESM(require_react(), 1);
var a6 = (0, import_react81.createContext)(() => {
});
a6.displayName = "StackContext";
var s12 = ((e6) => (e6[e6.Add = 0] = "Add", e6[e6.Remove = 1] = "Remove", e6))(s12 || {});
function x3() {
  return (0, import_react81.useContext)(a6);
}
function M3({ children: i10, onUpdate: r10, type: e6, element: n7, enabled: u10 }) {
  let l11 = x3(), o13 = o4((...t15) => {
    r10 == null || r10(...t15), l11(...t15);
  });
  return l(() => {
    let t15 = u10 === void 0 || u10 === true;
    return t15 && o13(0, e6, n7), () => {
      t15 && o13(1, e6, n7);
    };
  }, [o13, e6, n7, u10]), import_react81.default.createElement(a6.Provider, { value: o13 }, i10);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var e5 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimClient.js
var l7 = __toESM(require_react(), 1);
function i7(e6, t15) {
  return e6 === t15 && (e6 !== 0 || 1 / e6 === 1 / t15) || e6 !== e6 && t15 !== t15;
}
var d10 = typeof Object.is == "function" ? Object.is : i7;
var { useState: u6, useEffect: h5, useLayoutEffect: f9, useDebugValue: p5 } = l7;
function y4(e6, t15, c16) {
  const a15 = t15(), [{ inst: n7 }, o13] = u6({ inst: { value: a15, getSnapshot: t15 } });
  return f9(() => {
    n7.value = a15, n7.getSnapshot = t15, r6(n7) && o13({ inst: n7 });
  }, [e6, a15, t15]), h5(() => (r6(n7) && o13({ inst: n7 }), e6(() => {
    r6(n7) && o13({ inst: n7 });
  })), [e6]), p5(a15), a15;
}
function r6(e6) {
  const t15 = e6.getSnapshot, c16 = e6.value;
  try {
    const a15 = t15();
    return !d10(c16, a15);
  } catch {
    return true;
  }
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimServer.js
function t12(r10, e6, n7) {
  return e6();
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var r7 = typeof window != "undefined" && typeof window.document != "undefined" && typeof window.document.createElement != "undefined";
var s13 = !r7;
var c11 = s13 ? t12 : y4;
var a7 = "useSyncExternalStore" in e5 ? ((n7) => n7.useSyncExternalStore)(e5) : c11;

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-store.js
function S6(t15) {
  return a7(t15.subscribe, t15.getSnapshot, t15.getSnapshot);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/store.js
function a8(o13, r10) {
  let t15 = o13(), n7 = /* @__PURE__ */ new Set();
  return { getSnapshot() {
    return t15;
  }, subscribe(e6) {
    return n7.add(e6), () => n7.delete(e6);
  }, dispatch(e6, ...s18) {
    let i10 = r10[e6].call(t15, ...s18);
    i10 && (t15 = i10, n7.forEach((c16) => c16()));
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/adjust-scrollbar-padding.js
function c12() {
  let o13;
  return { before({ doc: e6 }) {
    var l11;
    let n7 = e6.documentElement;
    o13 = ((l11 = e6.defaultView) != null ? l11 : window).innerWidth - n7.clientWidth;
  }, after({ doc: e6, d: n7 }) {
    let t15 = e6.documentElement, l11 = t15.clientWidth - t15.offsetWidth, r10 = o13 - l11;
    n7.style(t15, "paddingRight", `${r10}px`);
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/handle-ios-locking.js
function p6() {
  if (!t7())
    return {};
  let o13;
  return { before() {
    o13 = window.pageYOffset;
  }, after({ doc: r10, d: l11, meta: s18 }) {
    function i10(e6) {
      return s18.containers.flatMap((t15) => t15()).some((t15) => t15.contains(e6));
    }
    l11.style(r10.body, "marginTop", `-${o13}px`), window.scrollTo(0, 0);
    let n7 = null;
    l11.addEventListener(r10, "click", (e6) => {
      if (e6.target instanceof HTMLElement)
        try {
          let t15 = e6.target.closest("a");
          if (!t15)
            return;
          let { hash: c16 } = new URL(t15.href), a15 = r10.querySelector(c16);
          a15 && !i10(a15) && (n7 = a15);
        } catch {
        }
    }, true), l11.addEventListener(r10, "touchmove", (e6) => {
      e6.target instanceof HTMLElement && !i10(e6.target) && e6.preventDefault();
    }, { passive: false }), l11.add(() => {
      window.scrollTo(0, window.pageYOffset + o13), n7 && n7.isConnected && (n7.scrollIntoView({ block: "nearest" }), n7 = null);
    });
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/prevent-scroll.js
function l8() {
  return { before({ doc: e6, d: o13 }) {
    o13.style(e6.documentElement, "overflow", "hidden");
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/overflow-store.js
function m8(e6) {
  let n7 = {};
  for (let t15 of e6)
    Object.assign(n7, t15(n7));
  return n7;
}
var a9 = a8(() => /* @__PURE__ */ new Map(), { PUSH(e6, n7) {
  var o13;
  let t15 = (o13 = this.get(e6)) != null ? o13 : { doc: e6, count: 0, d: o2(), meta: /* @__PURE__ */ new Set() };
  return t15.count++, t15.meta.add(n7), this.set(e6, t15), this;
}, POP(e6, n7) {
  let t15 = this.get(e6);
  return t15 && (t15.count--, t15.meta.delete(n7)), this;
}, SCROLL_PREVENT({ doc: e6, d: n7, meta: t15 }) {
  let o13 = { doc: e6, d: n7, meta: m8(t15) }, c16 = [p6(), c12(), l8()];
  c16.forEach(({ before: r10 }) => r10 == null ? void 0 : r10(o13)), c16.forEach(({ after: r10 }) => r10 == null ? void 0 : r10(o13));
}, SCROLL_ALLOW({ d: e6 }) {
  e6.dispose();
}, TEARDOWN({ doc: e6 }) {
  this.delete(e6);
} });
a9.subscribe(() => {
  let e6 = a9.getSnapshot(), n7 = /* @__PURE__ */ new Map();
  for (let [t15] of e6)
    n7.set(t15, t15.documentElement.style.overflow);
  for (let t15 of e6.values()) {
    let o13 = n7.get(t15.doc) === "hidden", c16 = t15.count !== 0;
    (c16 && !o13 || !c16 && o13) && a9.dispatch(t15.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", t15), t15.count === 0 && a9.dispatch("TEARDOWN", t15);
  }
});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/use-document-overflow.js
function p7(e6, r10, n7) {
  let f13 = S6(a9), o13 = e6 ? f13.get(e6) : void 0, i10 = o13 ? o13.count > 0 : false;
  return l(() => {
    if (!(!e6 || !r10))
      return a9.dispatch("PUSH", e6, n7), () => a9.dispatch("POP", e6, n7);
  }, [r10, e6]), i10;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-inert.js
var u7 = /* @__PURE__ */ new Map();
var t13 = /* @__PURE__ */ new Map();
function h6(r10, l11 = true) {
  l(() => {
    var o13;
    if (!l11)
      return;
    let e6 = typeof r10 == "function" ? r10() : r10.current;
    if (!e6)
      return;
    function a15() {
      var d14;
      if (!e6)
        return;
      let i10 = (d14 = t13.get(e6)) != null ? d14 : 1;
      if (i10 === 1 ? t13.delete(e6) : t13.set(e6, i10 - 1), i10 !== 1)
        return;
      let n7 = u7.get(e6);
      n7 && (n7["aria-hidden"] === null ? e6.removeAttribute("aria-hidden") : e6.setAttribute("aria-hidden", n7["aria-hidden"]), e6.inert = n7.inert, u7.delete(e6));
    }
    let f13 = (o13 = t13.get(e6)) != null ? o13 : 0;
    return t13.set(e6, f13 + 1), f13 !== 0 || (u7.set(e6, { "aria-hidden": e6.getAttribute("aria-hidden"), inert: e6.inert }), e6.setAttribute("aria-hidden", "true"), e6.inert = true), a15;
  }, [r10, l11]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-root-containers.js
var import_react82 = __toESM(require_react(), 1);
function p8({ defaultContainers: f13 = [], portals: o13 } = {}) {
  let t15 = (0, import_react82.useRef)(null), i10 = n4(t15), u10 = o4(() => {
    var r10;
    let n7 = [];
    for (let e6 of f13)
      e6 !== null && (e6 instanceof HTMLElement ? n7.push(e6) : "current" in e6 && e6.current instanceof HTMLElement && n7.push(e6.current));
    if (o13 != null && o13.current)
      for (let e6 of o13.current)
        n7.push(e6);
    for (let e6 of (r10 = i10 == null ? void 0 : i10.querySelectorAll("html > *, body > *")) != null ? r10 : [])
      e6 !== document.body && e6 !== document.head && e6 instanceof HTMLElement && e6.id !== "headlessui-portal-root" && (e6.contains(t15.current) || n7.some((c16) => e6.contains(c16)) || n7.push(e6));
    return n7;
  });
  return { resolveContainers: u10, contains: o4((n7) => u10().some((r10) => r10.contains(n7))), mainTreeNodeRef: t15, MainTreeNode: (0, import_react82.useMemo)(() => function() {
    return import_react82.default.createElement(c6, { features: p3.Hidden, ref: t15 });
  }, [t15]) };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/dialog/dialog.js
var _e = ((o13) => (o13[o13.Open = 0] = "Open", o13[o13.Closed = 1] = "Closed", o13))(_e || {});
var Ie = ((e6) => (e6[e6.SetTitleId = 0] = "SetTitleId", e6))(Ie || {});
var Me = { [0](t15, e6) {
  return t15.titleId === e6.id ? t15 : { ...t15, titleId: e6.id };
} };
var I4 = (0, import_react83.createContext)(null);
I4.displayName = "DialogContext";
function b4(t15) {
  let e6 = (0, import_react83.useContext)(I4);
  if (e6 === null) {
    let o13 = new Error(`<${t15} /> is missing a parent <Dialog /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o13, b4), o13;
  }
  return e6;
}
function we2(t15, e6, o13 = () => [document.body]) {
  p7(t15, e6, (i10) => {
    var n7;
    return { containers: [...(n7 = i10.containers) != null ? n7 : [], o13] };
  });
}
function Be(t15, e6) {
  return u(e6.type, Me, t15, e6);
}
var He2 = "div";
var Ge2 = S2.RenderStrategy | S2.Static;
function Ne2(t15, e6) {
  var X7;
  let o13 = I(), { id: i10 = `headlessui-dialog-${o13}`, open: n7, onClose: l11, initialFocus: s18, __demoMode: g5 = false, ...T8 } = t15, [m12, h10] = (0, import_react83.useState)(0), a15 = C();
  n7 === void 0 && a15 !== null && (n7 = (a15 & d5.Open) === d5.Open);
  let D7 = (0, import_react83.useRef)(null), Q7 = y2(D7, e6), f13 = n4(D7), N6 = t15.hasOwnProperty("open") || a15 !== null, U4 = t15.hasOwnProperty("onClose");
  if (!N6 && !U4)
    throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
  if (!N6)
    throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
  if (!U4)
    throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
  if (typeof n7 != "boolean")
    throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${n7}`);
  if (typeof l11 != "function")
    throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${l11}`);
  let p10 = n7 ? 0 : 1, [S8, Z7] = (0, import_react83.useReducer)(Be, { titleId: null, descriptionId: null, panelRef: (0, import_react83.createRef)() }), P6 = o4(() => l11(false)), W2 = o4((r10) => Z7({ type: 0, id: r10 })), L3 = l2() ? g5 ? false : p10 === 0 : false, F8 = m12 > 1, Y5 = (0, import_react83.useContext)(I4) !== null, [ee7, te5] = ae2(), { resolveContainers: M10, mainTreeNodeRef: k2, MainTreeNode: oe5 } = p8({ portals: ee7, defaultContainers: [(X7 = S8.panelRef.current) != null ? X7 : D7.current] }), re7 = F8 ? "parent" : "leaf", $6 = a15 !== null ? (a15 & d5.Closing) === d5.Closing : false, ne6 = (() => Y5 || $6 ? false : L3)(), le4 = (0, import_react83.useCallback)(() => {
    var r10, c16;
    return (c16 = Array.from((r10 = f13 == null ? void 0 : f13.querySelectorAll("body > *")) != null ? r10 : []).find((d14) => d14.id === "headlessui-portal-root" ? false : d14.contains(k2.current) && d14 instanceof HTMLElement)) != null ? c16 : null;
  }, [k2]);
  h6(le4, ne6);
  let ae4 = (() => F8 ? true : L3)(), ie6 = (0, import_react83.useCallback)(() => {
    var r10, c16;
    return (c16 = Array.from((r10 = f13 == null ? void 0 : f13.querySelectorAll("[data-headlessui-portal]")) != null ? r10 : []).find((d14) => d14.contains(k2.current) && d14 instanceof HTMLElement)) != null ? c16 : null;
  }, [k2]);
  h6(ie6, ae4);
  let se6 = (() => !(!L3 || F8))();
  H2(M10, P6, se6);
  let pe4 = (() => !(F8 || p10 !== 0))();
  E3(f13 == null ? void 0 : f13.defaultView, "keydown", (r10) => {
    pe4 && (r10.defaultPrevented || r10.key === o8.Escape && (r10.preventDefault(), r10.stopPropagation(), P6()));
  });
  let de5 = (() => !($6 || p10 !== 0 || Y5))();
  we2(f13, de5, M10), (0, import_react83.useEffect)(() => {
    if (p10 !== 0 || !D7.current)
      return;
    let r10 = new ResizeObserver((c16) => {
      for (let d14 of c16) {
        let x7 = d14.target.getBoundingClientRect();
        x7.x === 0 && x7.y === 0 && x7.width === 0 && x7.height === 0 && P6();
      }
    });
    return r10.observe(D7.current), () => r10.disconnect();
  }, [p10, D7, P6]);
  let [ue6, fe5] = M2(), ge6 = (0, import_react83.useMemo)(() => [{ dialogState: p10, close: P6, setTitleId: W2 }, S8], [p10, S8, P6, W2]), J6 = (0, import_react83.useMemo)(() => ({ open: p10 === 0 }), [p10]), Te4 = { ref: Q7, id: i10, role: "dialog", "aria-modal": p10 === 0 ? true : void 0, "aria-labelledby": S8.titleId, "aria-describedby": ue6 };
  return import_react83.default.createElement(M3, { type: "Dialog", enabled: p10 === 0, element: D7, onUpdate: o4((r10, c16) => {
    c16 === "Dialog" && u(r10, { [s12.Add]: () => h10((d14) => d14 + 1), [s12.Remove]: () => h10((d14) => d14 - 1) });
  }) }, import_react83.default.createElement(P3, { force: true }, import_react83.default.createElement(pe2, null, import_react83.default.createElement(I4.Provider, { value: ge6 }, import_react83.default.createElement(pe2.Group, { target: D7 }, import_react83.default.createElement(P3, { force: false }, import_react83.default.createElement(fe5, { slot: J6, name: "Dialog.Description" }, import_react83.default.createElement(ge2, { initialFocus: s18, containers: M10, features: L3 ? u(re7, { parent: ge2.features.RestoreFocus, leaf: ge2.features.All & ~ge2.features.FocusLock }) : ge2.features.None }, import_react83.default.createElement(te5, null, X({ ourProps: Te4, theirProps: T8, slot: J6, defaultTag: He2, features: Ge2, visible: p10 === 0, name: "Dialog" }))))))))), import_react83.default.createElement(oe5, null));
}
var Ue2 = "div";
function We2(t15, e6) {
  let o13 = I(), { id: i10 = `headlessui-dialog-overlay-${o13}`, ...n7 } = t15, [{ dialogState: l11, close: s18 }] = b4("Dialog.Overlay"), g5 = y2(e6), T8 = o4((a15) => {
    if (a15.target === a15.currentTarget) {
      if (r3(a15.currentTarget))
        return a15.preventDefault();
      a15.preventDefault(), a15.stopPropagation(), s18();
    }
  }), m12 = (0, import_react83.useMemo)(() => ({ open: l11 === 0 }), [l11]);
  return X({ ourProps: { ref: g5, id: i10, "aria-hidden": true, onClick: T8 }, theirProps: n7, slot: m12, defaultTag: Ue2, name: "Dialog.Overlay" });
}
var Ye2 = "div";
function $e2(t15, e6) {
  let o13 = I(), { id: i10 = `headlessui-dialog-backdrop-${o13}`, ...n7 } = t15, [{ dialogState: l11 }, s18] = b4("Dialog.Backdrop"), g5 = y2(e6);
  (0, import_react83.useEffect)(() => {
    if (s18.panelRef.current === null)
      throw new Error("A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.");
  }, [s18.panelRef]);
  let T8 = (0, import_react83.useMemo)(() => ({ open: l11 === 0 }), [l11]);
  return import_react83.default.createElement(P3, { force: true }, import_react83.default.createElement(pe2, null, X({ ourProps: { ref: g5, id: i10, "aria-hidden": true }, theirProps: n7, slot: T8, defaultTag: Ye2, name: "Dialog.Backdrop" })));
}
var Je2 = "div";
function Xe2(t15, e6) {
  let o13 = I(), { id: i10 = `headlessui-dialog-panel-${o13}`, ...n7 } = t15, [{ dialogState: l11 }, s18] = b4("Dialog.Panel"), g5 = y2(e6, s18.panelRef), T8 = (0, import_react83.useMemo)(() => ({ open: l11 === 0 }), [l11]), m12 = o4((a15) => {
    a15.stopPropagation();
  });
  return X({ ourProps: { ref: g5, id: i10, onClick: m12 }, theirProps: n7, slot: T8, defaultTag: Je2, name: "Dialog.Panel" });
}
var je2 = "h2";
function Ke2(t15, e6) {
  let o13 = I(), { id: i10 = `headlessui-dialog-title-${o13}`, ...n7 } = t15, [{ dialogState: l11, setTitleId: s18 }] = b4("Dialog.Title"), g5 = y2(e6);
  (0, import_react83.useEffect)(() => (s18(i10), () => s18(null)), [i10, s18]);
  let T8 = (0, import_react83.useMemo)(() => ({ open: l11 === 0 }), [l11]);
  return X({ ourProps: { ref: g5, id: i10 }, theirProps: n7, slot: T8, defaultTag: je2, name: "Dialog.Title" });
}
var Ve = D2(Ne2);
var qe2 = D2($e2);
var ze2 = D2(Xe2);
var Qe2 = D2(We2);
var Ze2 = D2(Ke2);
var _t = Object.assign(Ve, { Backdrop: qe2, Panel: ze2, Overlay: Qe2, Title: Ze2, Description: b3 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var import_react85 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/start-transition.js
var import_react84 = __toESM(require_react(), 1);
var t14;
var a11 = (t14 = import_react84.default.startTransition) != null ? t14 : function(i10) {
  i10();
};

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var q2 = ((o13) => (o13[o13.Open = 0] = "Open", o13[o13.Closed = 1] = "Closed", o13))(q2 || {});
var z2 = ((t15) => (t15[t15.ToggleDisclosure = 0] = "ToggleDisclosure", t15[t15.CloseDisclosure = 1] = "CloseDisclosure", t15[t15.SetButtonId = 2] = "SetButtonId", t15[t15.SetPanelId = 3] = "SetPanelId", t15[t15.LinkPanel = 4] = "LinkPanel", t15[t15.UnlinkPanel = 5] = "UnlinkPanel", t15))(z2 || {});
var Q2 = { [0]: (e6) => ({ ...e6, disclosureState: u(e6.disclosureState, { [0]: 1, [1]: 0 }) }), [1]: (e6) => e6.disclosureState === 1 ? e6 : { ...e6, disclosureState: 1 }, [4](e6) {
  return e6.linkedPanel === true ? e6 : { ...e6, linkedPanel: true };
}, [5](e6) {
  return e6.linkedPanel === false ? e6 : { ...e6, linkedPanel: false };
}, [2](e6, n7) {
  return e6.buttonId === n7.buttonId ? e6 : { ...e6, buttonId: n7.buttonId };
}, [3](e6, n7) {
  return e6.panelId === n7.panelId ? e6 : { ...e6, panelId: n7.panelId };
} };
var k = (0, import_react85.createContext)(null);
k.displayName = "DisclosureContext";
function M4(e6) {
  let n7 = (0, import_react85.useContext)(k);
  if (n7 === null) {
    let o13 = new Error(`<${e6} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o13, M4), o13;
  }
  return n7;
}
var v2 = (0, import_react85.createContext)(null);
v2.displayName = "DisclosureAPIContext";
function w4(e6) {
  let n7 = (0, import_react85.useContext)(v2);
  if (n7 === null) {
    let o13 = new Error(`<${e6} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o13, w4), o13;
  }
  return n7;
}
var H4 = (0, import_react85.createContext)(null);
H4.displayName = "DisclosurePanelContext";
function V2() {
  return (0, import_react85.useContext)(H4);
}
function Y2(e6, n7) {
  return u(n7.type, Q2, e6, n7);
}
var Z2 = import_react85.Fragment;
function ee2(e6, n7) {
  let { defaultOpen: o13 = false, ...u10 } = e6, T8 = (0, import_react85.useRef)(null), l11 = y2(n7, T2((a15) => {
    T8.current = a15;
  }, e6.as === void 0 || e6.as === import_react85.Fragment)), t15 = (0, import_react85.useRef)(null), f13 = (0, import_react85.useRef)(null), s18 = (0, import_react85.useReducer)(Y2, { disclosureState: o13 ? 0 : 1, linkedPanel: false, buttonRef: f13, panelRef: t15, buttonId: null, panelId: null }), [{ disclosureState: i10, buttonId: c16 }, D7] = s18, d14 = o4((a15) => {
    D7({ type: 1 });
    let r10 = e(T8);
    if (!r10 || !c16)
      return;
    let p10 = (() => a15 ? a15 instanceof HTMLElement ? a15 : a15.current instanceof HTMLElement ? a15.current : r10.getElementById(c16) : r10.getElementById(c16))();
    p10 == null || p10.focus();
  }), P6 = (0, import_react85.useMemo)(() => ({ close: d14 }), [d14]), b7 = (0, import_react85.useMemo)(() => ({ open: i10 === 0, close: d14 }), [i10, d14]), y9 = { ref: l11 };
  return import_react85.default.createElement(k.Provider, { value: s18 }, import_react85.default.createElement(v2.Provider, { value: P6 }, import_react85.default.createElement(c7, { value: u(i10, { [0]: d5.Open, [1]: d5.Closed }) }, X({ ourProps: y9, theirProps: u10, slot: b7, defaultTag: Z2, name: "Disclosure" }))));
}
var te = "button";
function ne(e6, n7) {
  let o13 = I(), { id: u10 = `headlessui-disclosure-button-${o13}`, ...T8 } = e6, [l11, t15] = M4("Disclosure.Button"), f13 = V2(), s18 = f13 === null ? false : f13 === l11.panelId, i10 = (0, import_react85.useRef)(null), c16 = y2(i10, n7, s18 ? null : l11.buttonRef);
  (0, import_react85.useEffect)(() => {
    if (!s18)
      return t15({ type: 2, buttonId: u10 }), () => {
        t15({ type: 2, buttonId: null });
      };
  }, [u10, t15, s18]);
  let D7 = o4((r10) => {
    var p10;
    if (s18) {
      if (l11.disclosureState === 1)
        return;
      switch (r10.key) {
        case o8.Space:
        case o8.Enter:
          r10.preventDefault(), r10.stopPropagation(), t15({ type: 0 }), (p10 = l11.buttonRef.current) == null || p10.focus();
          break;
      }
    } else
      switch (r10.key) {
        case o8.Space:
        case o8.Enter:
          r10.preventDefault(), r10.stopPropagation(), t15({ type: 0 });
          break;
      }
  }), d14 = o4((r10) => {
    switch (r10.key) {
      case o8.Space:
        r10.preventDefault();
        break;
    }
  }), P6 = o4((r10) => {
    var p10;
    r3(r10.currentTarget) || e6.disabled || (s18 ? (t15({ type: 0 }), (p10 = l11.buttonRef.current) == null || p10.focus()) : t15({ type: 0 }));
  }), b7 = (0, import_react85.useMemo)(() => ({ open: l11.disclosureState === 0 }), [l11]), y9 = s6(e6, i10), a15 = s18 ? { ref: c16, type: y9, onKeyDown: D7, onClick: P6 } : { ref: c16, id: u10, type: y9, "aria-expanded": e6.disabled ? void 0 : l11.disclosureState === 0, "aria-controls": l11.linkedPanel ? l11.panelId : void 0, onKeyDown: D7, onKeyUp: d14, onClick: P6 };
  return X({ ourProps: a15, theirProps: T8, slot: b7, defaultTag: te, name: "Disclosure.Button" });
}
var le2 = "div";
var oe = S2.RenderStrategy | S2.Static;
function re(e6, n7) {
  let o13 = I(), { id: u10 = `headlessui-disclosure-panel-${o13}`, ...T8 } = e6, [l11, t15] = M4("Disclosure.Panel"), { close: f13 } = w4("Disclosure.Panel"), s18 = y2(n7, l11.panelRef, (P6) => {
    a11(() => t15({ type: P6 ? 4 : 5 }));
  });
  (0, import_react85.useEffect)(() => (t15({ type: 3, panelId: u10 }), () => {
    t15({ type: 3, panelId: null });
  }), [u10, t15]);
  let i10 = C(), c16 = (() => i10 !== null ? (i10 & d5.Open) === d5.Open : l11.disclosureState === 0)(), D7 = (0, import_react85.useMemo)(() => ({ open: l11.disclosureState === 0, close: f13 }), [l11, f13]), d14 = { ref: s18, id: u10 };
  return import_react85.default.createElement(H4.Provider, { value: l11.panelId }, X({ ourProps: d14, theirProps: T8, slot: D7, defaultTag: le2, features: oe, visible: c16, name: "Disclosure.Panel" }));
}
var se2 = D2(ee2);
var ue = D2(ne);
var ie2 = D2(re);
var ve = Object.assign(se2, { Button: ue, Panel: ie2 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/listbox/listbox.js
var import_react87 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-text-value.js
var import_react86 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/get-text-value.js
var a12 = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
function o11(e6) {
  var r10, i10;
  let n7 = (r10 = e6.innerText) != null ? r10 : "", t15 = e6.cloneNode(true);
  if (!(t15 instanceof HTMLElement))
    return n7;
  let u10 = false;
  for (let f13 of t15.querySelectorAll('[hidden],[aria-hidden],[role="img"]'))
    f13.remove(), u10 = true;
  let l11 = u10 ? (i10 = t15.innerText) != null ? i10 : "" : n7;
  return a12.test(l11) && (l11 = l11.replace(a12, "")), l11;
}
function g4(e6) {
  let n7 = e6.getAttribute("aria-label");
  if (typeof n7 == "string")
    return n7.trim();
  let t15 = e6.getAttribute("aria-labelledby");
  if (t15) {
    let u10 = t15.split(" ").map((l11) => {
      let r10 = document.getElementById(l11);
      if (r10) {
        let i10 = r10.getAttribute("aria-label");
        return typeof i10 == "string" ? i10.trim() : o11(r10).trim();
      }
      return null;
    }).filter(Boolean);
    if (u10.length > 0)
      return u10.join(", ");
  }
  return o11(e6).trim();
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-text-value.js
function b5(c16) {
  let t15 = (0, import_react86.useRef)(""), r10 = (0, import_react86.useRef)("");
  return o4(() => {
    let e6 = c16.current;
    if (!e6)
      return "";
    let u10 = e6.innerText;
    if (t15.current === u10)
      return r10.current;
    let n7 = g4(e6).trim().toLowerCase();
    return t15.current = u10, r10.current = n7, n7;
  });
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/listbox/listbox.js
var Be2 = ((n7) => (n7[n7.Open = 0] = "Open", n7[n7.Closed = 1] = "Closed", n7))(Be2 || {});
var He3 = ((n7) => (n7[n7.Single = 0] = "Single", n7[n7.Multi = 1] = "Multi", n7))(He3 || {});
var Ge3 = ((n7) => (n7[n7.Pointer = 0] = "Pointer", n7[n7.Other = 1] = "Other", n7))(Ge3 || {});
var Ne3 = ((i10) => (i10[i10.OpenListbox = 0] = "OpenListbox", i10[i10.CloseListbox = 1] = "CloseListbox", i10[i10.GoToOption = 2] = "GoToOption", i10[i10.Search = 3] = "Search", i10[i10.ClearSearch = 4] = "ClearSearch", i10[i10.RegisterOption = 5] = "RegisterOption", i10[i10.UnregisterOption = 6] = "UnregisterOption", i10[i10.RegisterLabel = 7] = "RegisterLabel", i10))(Ne3 || {});
function z3(e6, a15 = (n7) => n7) {
  let n7 = e6.activeOptionIndex !== null ? e6.options[e6.activeOptionIndex] : null, r10 = I2(a15(e6.options.slice()), (t15) => t15.dataRef.current.domRef.current), l11 = n7 ? r10.indexOf(n7) : null;
  return l11 === -1 && (l11 = null), { options: r10, activeOptionIndex: l11 };
}
var je3 = { [1](e6) {
  return e6.dataRef.current.disabled || e6.listboxState === 1 ? e6 : { ...e6, activeOptionIndex: null, listboxState: 1 };
}, [0](e6) {
  if (e6.dataRef.current.disabled || e6.listboxState === 0)
    return e6;
  let a15 = e6.activeOptionIndex, { isSelected: n7 } = e6.dataRef.current, r10 = e6.options.findIndex((l11) => n7(l11.dataRef.current.value));
  return r10 !== -1 && (a15 = r10), { ...e6, listboxState: 0, activeOptionIndex: a15 };
}, [2](e6, a15) {
  var l11;
  if (e6.dataRef.current.disabled || e6.listboxState === 1)
    return e6;
  let n7 = z3(e6), r10 = x(a15, { resolveItems: () => n7.options, resolveActiveIndex: () => n7.activeOptionIndex, resolveId: (t15) => t15.id, resolveDisabled: (t15) => t15.dataRef.current.disabled });
  return { ...e6, ...n7, searchQuery: "", activeOptionIndex: r10, activationTrigger: (l11 = a15.trigger) != null ? l11 : 1 };
}, [3]: (e6, a15) => {
  if (e6.dataRef.current.disabled || e6.listboxState === 1)
    return e6;
  let r10 = e6.searchQuery !== "" ? 0 : 1, l11 = e6.searchQuery + a15.value.toLowerCase(), p10 = (e6.activeOptionIndex !== null ? e6.options.slice(e6.activeOptionIndex + r10).concat(e6.options.slice(0, e6.activeOptionIndex + r10)) : e6.options).find((i10) => {
    var b7;
    return !i10.dataRef.current.disabled && ((b7 = i10.dataRef.current.textValue) == null ? void 0 : b7.startsWith(l11));
  }), u10 = p10 ? e6.options.indexOf(p10) : -1;
  return u10 === -1 || u10 === e6.activeOptionIndex ? { ...e6, searchQuery: l11 } : { ...e6, searchQuery: l11, activeOptionIndex: u10, activationTrigger: 1 };
}, [4](e6) {
  return e6.dataRef.current.disabled || e6.listboxState === 1 || e6.searchQuery === "" ? e6 : { ...e6, searchQuery: "" };
}, [5]: (e6, a15) => {
  let n7 = { id: a15.id, dataRef: a15.dataRef }, r10 = z3(e6, (l11) => [...l11, n7]);
  return e6.activeOptionIndex === null && e6.dataRef.current.isSelected(a15.dataRef.current.value) && (r10.activeOptionIndex = r10.options.indexOf(n7)), { ...e6, ...r10 };
}, [6]: (e6, a15) => {
  let n7 = z3(e6, (r10) => {
    let l11 = r10.findIndex((t15) => t15.id === a15.id);
    return l11 !== -1 && r10.splice(l11, 1), r10;
  });
  return { ...e6, ...n7, activationTrigger: 1 };
}, [7]: (e6, a15) => ({ ...e6, labelId: a15.id }) };
var J2 = (0, import_react87.createContext)(null);
J2.displayName = "ListboxActionsContext";
function U2(e6) {
  let a15 = (0, import_react87.useContext)(J2);
  if (a15 === null) {
    let n7 = new Error(`<${e6} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(n7, U2), n7;
  }
  return a15;
}
var q3 = (0, import_react87.createContext)(null);
q3.displayName = "ListboxDataContext";
function B(e6) {
  let a15 = (0, import_react87.useContext)(q3);
  if (a15 === null) {
    let n7 = new Error(`<${e6} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(n7, B), n7;
  }
  return a15;
}
function Ve2(e6, a15) {
  return u(a15.type, je3, e6, a15);
}
var Ke3 = import_react87.Fragment;
function Qe3(e6, a15) {
  let { value: n7, defaultValue: r10, form: l11, name: t15, onChange: p10, by: u10 = (s18, c16) => s18 === c16, disabled: i10 = false, horizontal: b7 = false, multiple: m12 = false, ...L3 } = e6;
  const P6 = b7 ? "horizontal" : "vertical";
  let S8 = y2(a15), [g5 = m12 ? [] : void 0, R3] = T4(n7, p10, r10), [T8, o13] = (0, import_react87.useReducer)(Ve2, { dataRef: (0, import_react87.createRef)(), listboxState: 1, options: [], searchQuery: "", labelId: null, activeOptionIndex: null, activationTrigger: 1 }), x7 = (0, import_react87.useRef)({ static: false, hold: false }), E8 = (0, import_react87.useRef)(null), H9 = (0, import_react87.useRef)(null), X7 = (0, import_react87.useRef)(null), C5 = o4(typeof u10 == "string" ? (s18, c16) => {
    let O4 = u10;
    return (s18 == null ? void 0 : s18[O4]) === (c16 == null ? void 0 : c16[O4]);
  } : u10), A4 = (0, import_react87.useCallback)((s18) => u(d14.mode, { [1]: () => g5.some((c16) => C5(c16, s18)), [0]: () => C5(g5, s18) }), [g5]), d14 = (0, import_react87.useMemo)(() => ({ ...T8, value: g5, disabled: i10, mode: m12 ? 1 : 0, orientation: P6, compare: C5, isSelected: A4, optionsPropsRef: x7, labelRef: E8, buttonRef: H9, optionsRef: X7 }), [g5, i10, m12, T8]);
  l(() => {
    T8.dataRef.current = d14;
  }, [d14]), H2([d14.buttonRef, d14.optionsRef], (s18, c16) => {
    var O4;
    o13({ type: 1 }), h(c16, T.Loose) || (s18.preventDefault(), (O4 = d14.buttonRef.current) == null || O4.focus());
  }, d14.listboxState === 0);
  let G3 = (0, import_react87.useMemo)(() => ({ open: d14.listboxState === 0, disabled: i10, value: g5 }), [d14, i10, g5]), ie6 = o4((s18) => {
    let c16 = d14.options.find((O4) => O4.id === s18);
    c16 && F8(c16.dataRef.current.value);
  }), re7 = o4(() => {
    if (d14.activeOptionIndex !== null) {
      let { dataRef: s18, id: c16 } = d14.options[d14.activeOptionIndex];
      F8(s18.current.value), o13({ type: 2, focus: a3.Specific, id: c16 });
    }
  }), ae4 = o4(() => o13({ type: 0 })), le4 = o4(() => o13({ type: 1 })), se6 = o4((s18, c16, O4) => s18 === a3.Specific ? o13({ type: 2, focus: a3.Specific, id: c16, trigger: O4 }) : o13({ type: 2, focus: s18, trigger: O4 })), pe4 = o4((s18, c16) => (o13({ type: 5, id: s18, dataRef: c16 }), () => o13({ type: 6, id: s18 }))), ue6 = o4((s18) => (o13({ type: 7, id: s18 }), () => o13({ type: 7, id: null }))), F8 = o4((s18) => u(d14.mode, { [0]() {
    return R3 == null ? void 0 : R3(s18);
  }, [1]() {
    let c16 = d14.value.slice(), O4 = c16.findIndex((M10) => C5(M10, s18));
    return O4 === -1 ? c16.push(s18) : c16.splice(O4, 1), R3 == null ? void 0 : R3(c16);
  } })), de5 = o4((s18) => o13({ type: 3, value: s18 })), ce5 = o4(() => o13({ type: 4 })), fe5 = (0, import_react87.useMemo)(() => ({ onChange: F8, registerOption: pe4, registerLabel: ue6, goToOption: se6, closeListbox: le4, openListbox: ae4, selectActiveOption: re7, selectOption: ie6, search: de5, clearSearch: ce5 }), []), Te4 = { ref: S8 }, N6 = (0, import_react87.useRef)(null), be7 = p();
  return (0, import_react87.useEffect)(() => {
    N6.current && r10 !== void 0 && be7.addEventListener(N6.current, "reset", () => {
      F8(r10);
    });
  }, [N6, F8]), import_react87.default.createElement(J2.Provider, { value: fe5 }, import_react87.default.createElement(q3.Provider, { value: d14 }, import_react87.default.createElement(c7, { value: u(d14.listboxState, { [0]: d5.Open, [1]: d5.Closed }) }, t15 != null && g5 != null && e3({ [t15]: g5 }).map(([s18, c16], O4) => import_react87.default.createElement(c6, { features: p3.Hidden, ref: O4 === 0 ? (M10) => {
    var Y5;
    N6.current = (Y5 = M10 == null ? void 0 : M10.closest("form")) != null ? Y5 : null;
  } : void 0, ...R({ key: s18, as: "input", type: "hidden", hidden: true, readOnly: true, form: l11, name: s18, value: c16 }) })), X({ ourProps: Te4, theirProps: L3, slot: G3, defaultTag: Ke3, name: "Listbox" }))));
}
var We3 = "button";
function Xe3(e6, a15) {
  var R3;
  let n7 = I(), { id: r10 = `headlessui-listbox-button-${n7}`, ...l11 } = e6, t15 = B("Listbox.Button"), p10 = U2("Listbox.Button"), u10 = y2(t15.buttonRef, a15), i10 = p(), b7 = o4((T8) => {
    switch (T8.key) {
      case o8.Space:
      case o8.Enter:
      case o8.ArrowDown:
        T8.preventDefault(), p10.openListbox(), i10.nextFrame(() => {
          t15.value || p10.goToOption(a3.First);
        });
        break;
      case o8.ArrowUp:
        T8.preventDefault(), p10.openListbox(), i10.nextFrame(() => {
          t15.value || p10.goToOption(a3.Last);
        });
        break;
    }
  }), m12 = o4((T8) => {
    switch (T8.key) {
      case o8.Space:
        T8.preventDefault();
        break;
    }
  }), L3 = o4((T8) => {
    if (r3(T8.currentTarget))
      return T8.preventDefault();
    t15.listboxState === 0 ? (p10.closeListbox(), i10.nextFrame(() => {
      var o13;
      return (o13 = t15.buttonRef.current) == null ? void 0 : o13.focus({ preventScroll: true });
    })) : (T8.preventDefault(), p10.openListbox());
  }), P6 = i2(() => {
    if (t15.labelId)
      return [t15.labelId, r10].join(" ");
  }, [t15.labelId, r10]), S8 = (0, import_react87.useMemo)(() => ({ open: t15.listboxState === 0, disabled: t15.disabled, value: t15.value }), [t15]), g5 = { ref: u10, id: r10, type: s6(e6, t15.buttonRef), "aria-haspopup": "listbox", "aria-controls": (R3 = t15.optionsRef.current) == null ? void 0 : R3.id, "aria-expanded": t15.disabled ? void 0 : t15.listboxState === 0, "aria-labelledby": P6, disabled: t15.disabled, onKeyDown: b7, onKeyUp: m12, onClick: L3 };
  return X({ ourProps: g5, theirProps: l11, slot: S8, defaultTag: We3, name: "Listbox.Button" });
}
var $e3 = "label";
function ze3(e6, a15) {
  let n7 = I(), { id: r10 = `headlessui-listbox-label-${n7}`, ...l11 } = e6, t15 = B("Listbox.Label"), p10 = U2("Listbox.Label"), u10 = y2(t15.labelRef, a15);
  l(() => p10.registerLabel(r10), [r10]);
  let i10 = o4(() => {
    var L3;
    return (L3 = t15.buttonRef.current) == null ? void 0 : L3.focus({ preventScroll: true });
  }), b7 = (0, import_react87.useMemo)(() => ({ open: t15.listboxState === 0, disabled: t15.disabled }), [t15]);
  return X({ ourProps: { ref: u10, id: r10, onClick: i10 }, theirProps: l11, slot: b7, defaultTag: $e3, name: "Listbox.Label" });
}
var Je3 = "ul";
var qe3 = S2.RenderStrategy | S2.Static;
function Ye3(e6, a15) {
  var T8;
  let n7 = I(), { id: r10 = `headlessui-listbox-options-${n7}`, ...l11 } = e6, t15 = B("Listbox.Options"), p10 = U2("Listbox.Options"), u10 = y2(t15.optionsRef, a15), i10 = p(), b7 = p(), m12 = C(), L3 = (() => m12 !== null ? (m12 & d5.Open) === d5.Open : t15.listboxState === 0)();
  (0, import_react87.useEffect)(() => {
    var x7;
    let o13 = t15.optionsRef.current;
    o13 && t15.listboxState === 0 && o13 !== ((x7 = e(o13)) == null ? void 0 : x7.activeElement) && o13.focus({ preventScroll: true });
  }, [t15.listboxState, t15.optionsRef]);
  let P6 = o4((o13) => {
    switch (b7.dispose(), o13.key) {
      case o8.Space:
        if (t15.searchQuery !== "")
          return o13.preventDefault(), o13.stopPropagation(), p10.search(o13.key);
      case o8.Enter:
        if (o13.preventDefault(), o13.stopPropagation(), t15.activeOptionIndex !== null) {
          let { dataRef: x7 } = t15.options[t15.activeOptionIndex];
          p10.onChange(x7.current.value);
        }
        t15.mode === 0 && (p10.closeListbox(), o2().nextFrame(() => {
          var x7;
          return (x7 = t15.buttonRef.current) == null ? void 0 : x7.focus({ preventScroll: true });
        }));
        break;
      case u(t15.orientation, { vertical: o8.ArrowDown, horizontal: o8.ArrowRight }):
        return o13.preventDefault(), o13.stopPropagation(), p10.goToOption(a3.Next);
      case u(t15.orientation, { vertical: o8.ArrowUp, horizontal: o8.ArrowLeft }):
        return o13.preventDefault(), o13.stopPropagation(), p10.goToOption(a3.Previous);
      case o8.Home:
      case o8.PageUp:
        return o13.preventDefault(), o13.stopPropagation(), p10.goToOption(a3.First);
      case o8.End:
      case o8.PageDown:
        return o13.preventDefault(), o13.stopPropagation(), p10.goToOption(a3.Last);
      case o8.Escape:
        return o13.preventDefault(), o13.stopPropagation(), p10.closeListbox(), i10.nextFrame(() => {
          var x7;
          return (x7 = t15.buttonRef.current) == null ? void 0 : x7.focus({ preventScroll: true });
        });
      case o8.Tab:
        o13.preventDefault(), o13.stopPropagation();
        break;
      default:
        o13.key.length === 1 && (p10.search(o13.key), b7.setTimeout(() => p10.clearSearch(), 350));
        break;
    }
  }), S8 = i2(() => {
    var o13, x7, E8;
    return (E8 = (o13 = t15.labelRef.current) == null ? void 0 : o13.id) != null ? E8 : (x7 = t15.buttonRef.current) == null ? void 0 : x7.id;
  }, [t15.labelRef.current, t15.buttonRef.current]), g5 = (0, import_react87.useMemo)(() => ({ open: t15.listboxState === 0 }), [t15]), R3 = { "aria-activedescendant": t15.activeOptionIndex === null || (T8 = t15.options[t15.activeOptionIndex]) == null ? void 0 : T8.id, "aria-multiselectable": t15.mode === 1 ? true : void 0, "aria-labelledby": S8, "aria-orientation": t15.orientation, id: r10, onKeyDown: P6, role: "listbox", tabIndex: 0, ref: u10 };
  return X({ ourProps: R3, theirProps: l11, slot: g5, defaultTag: Je3, features: qe3, visible: L3, name: "Listbox.Options" });
}
var Ze3 = "li";
function et(e6, a15) {
  let n7 = I(), { id: r10 = `headlessui-listbox-option-${n7}`, disabled: l11 = false, value: t15, ...p10 } = e6, u10 = B("Listbox.Option"), i10 = U2("Listbox.Option"), b7 = u10.activeOptionIndex !== null ? u10.options[u10.activeOptionIndex].id === r10 : false, m12 = u10.isSelected(t15), L3 = (0, import_react87.useRef)(null), P6 = b5(L3), S8 = s2({ disabled: l11, value: t15, domRef: L3, get textValue() {
    return P6();
  } }), g5 = y2(a15, L3);
  l(() => {
    if (u10.listboxState !== 0 || !b7 || u10.activationTrigger === 0)
      return;
    let A4 = o2();
    return A4.requestAnimationFrame(() => {
      var d14, G3;
      (G3 = (d14 = L3.current) == null ? void 0 : d14.scrollIntoView) == null || G3.call(d14, { block: "nearest" });
    }), A4.dispose;
  }, [L3, b7, u10.listboxState, u10.activationTrigger, u10.activeOptionIndex]), l(() => i10.registerOption(r10, S8), [S8, r10]);
  let R3 = o4((A4) => {
    if (l11)
      return A4.preventDefault();
    i10.onChange(t15), u10.mode === 0 && (i10.closeListbox(), o2().nextFrame(() => {
      var d14;
      return (d14 = u10.buttonRef.current) == null ? void 0 : d14.focus({ preventScroll: true });
    }));
  }), T8 = o4(() => {
    if (l11)
      return i10.goToOption(a3.Nothing);
    i10.goToOption(a3.Specific, r10);
  }), o13 = u3(), x7 = o4((A4) => o13.update(A4)), E8 = o4((A4) => {
    o13.wasMoved(A4) && (l11 || b7 || i10.goToOption(a3.Specific, r10, 0));
  }), H9 = o4((A4) => {
    o13.wasMoved(A4) && (l11 || b7 && i10.goToOption(a3.Nothing));
  }), X7 = (0, import_react87.useMemo)(() => ({ active: b7, selected: m12, disabled: l11 }), [b7, m12, l11]);
  return X({ ourProps: { id: r10, ref: g5, role: "option", tabIndex: l11 === true ? void 0 : -1, "aria-disabled": l11 === true ? true : void 0, "aria-selected": m12, disabled: void 0, onClick: R3, onFocus: T8, onPointerEnter: x7, onMouseEnter: x7, onPointerMove: E8, onMouseMove: E8, onPointerLeave: H9, onMouseLeave: H9 }, theirProps: p10, slot: X7, defaultTag: Ze3, name: "Listbox.Option" });
}
var tt = D2(Qe3);
var ot = D2(Xe3);
var nt = D2(ze3);
var it = D2(Ye3);
var rt = D2(et);
var Nt = Object.assign(tt, { Button: ot, Label: nt, Options: it, Option: rt });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/menu/menu.js
var import_react88 = __toESM(require_react(), 1);
var me2 = ((r10) => (r10[r10.Open = 0] = "Open", r10[r10.Closed = 1] = "Closed", r10))(me2 || {});
var de = ((r10) => (r10[r10.Pointer = 0] = "Pointer", r10[r10.Other = 1] = "Other", r10))(de || {});
var fe = ((a15) => (a15[a15.OpenMenu = 0] = "OpenMenu", a15[a15.CloseMenu = 1] = "CloseMenu", a15[a15.GoToItem = 2] = "GoToItem", a15[a15.Search = 3] = "Search", a15[a15.ClearSearch = 4] = "ClearSearch", a15[a15.RegisterItem = 5] = "RegisterItem", a15[a15.UnregisterItem = 6] = "UnregisterItem", a15))(fe || {});
function w5(e6, u10 = (r10) => r10) {
  let r10 = e6.activeItemIndex !== null ? e6.items[e6.activeItemIndex] : null, i10 = I2(u10(e6.items.slice()), (t15) => t15.dataRef.current.domRef.current), s18 = r10 ? i10.indexOf(r10) : null;
  return s18 === -1 && (s18 = null), { items: i10, activeItemIndex: s18 };
}
var Te = { [1](e6) {
  return e6.menuState === 1 ? e6 : { ...e6, activeItemIndex: null, menuState: 1 };
}, [0](e6) {
  return e6.menuState === 0 ? e6 : { ...e6, __demoMode: false, menuState: 0 };
}, [2]: (e6, u10) => {
  var s18;
  let r10 = w5(e6), i10 = x(u10, { resolveItems: () => r10.items, resolveActiveIndex: () => r10.activeItemIndex, resolveId: (t15) => t15.id, resolveDisabled: (t15) => t15.dataRef.current.disabled });
  return { ...e6, ...r10, searchQuery: "", activeItemIndex: i10, activationTrigger: (s18 = u10.trigger) != null ? s18 : 1 };
}, [3]: (e6, u10) => {
  let i10 = e6.searchQuery !== "" ? 0 : 1, s18 = e6.searchQuery + u10.value.toLowerCase(), o13 = (e6.activeItemIndex !== null ? e6.items.slice(e6.activeItemIndex + i10).concat(e6.items.slice(0, e6.activeItemIndex + i10)) : e6.items).find((l11) => {
    var m12;
    return ((m12 = l11.dataRef.current.textValue) == null ? void 0 : m12.startsWith(s18)) && !l11.dataRef.current.disabled;
  }), a15 = o13 ? e6.items.indexOf(o13) : -1;
  return a15 === -1 || a15 === e6.activeItemIndex ? { ...e6, searchQuery: s18 } : { ...e6, searchQuery: s18, activeItemIndex: a15, activationTrigger: 1 };
}, [4](e6) {
  return e6.searchQuery === "" ? e6 : { ...e6, searchQuery: "", searchActiveItemIndex: null };
}, [5]: (e6, u10) => {
  let r10 = w5(e6, (i10) => [...i10, { id: u10.id, dataRef: u10.dataRef }]);
  return { ...e6, ...r10 };
}, [6]: (e6, u10) => {
  let r10 = w5(e6, (i10) => {
    let s18 = i10.findIndex((t15) => t15.id === u10.id);
    return s18 !== -1 && i10.splice(s18, 1), i10;
  });
  return { ...e6, ...r10, activationTrigger: 1 };
} };
var U3 = (0, import_react88.createContext)(null);
U3.displayName = "MenuContext";
function O2(e6) {
  let u10 = (0, import_react88.useContext)(U3);
  if (u10 === null) {
    let r10 = new Error(`<${e6} /> is missing a parent <Menu /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r10, O2), r10;
  }
  return u10;
}
function ye3(e6, u10) {
  return u(u10.type, Te, e6, u10);
}
var Ie2 = import_react88.Fragment;
function Me2(e6, u10) {
  let { __demoMode: r10 = false, ...i10 } = e6, s18 = (0, import_react88.useReducer)(ye3, { __demoMode: r10, menuState: r10 ? 0 : 1, buttonRef: (0, import_react88.createRef)(), itemsRef: (0, import_react88.createRef)(), items: [], searchQuery: "", activeItemIndex: null, activationTrigger: 1 }), [{ menuState: t15, itemsRef: o13, buttonRef: a15 }, l11] = s18, m12 = y2(u10);
  H2([a15, o13], (g5, R3) => {
    var p10;
    l11({ type: 1 }), h(R3, T.Loose) || (g5.preventDefault(), (p10 = a15.current) == null || p10.focus());
  }, t15 === 0);
  let I8 = o4(() => {
    l11({ type: 1 });
  }), A4 = (0, import_react88.useMemo)(() => ({ open: t15 === 0, close: I8 }), [t15, I8]), f13 = { ref: m12 };
  return import_react88.default.createElement(U3.Provider, { value: s18 }, import_react88.default.createElement(c7, { value: u(t15, { [0]: d5.Open, [1]: d5.Closed }) }, X({ ourProps: f13, theirProps: i10, slot: A4, defaultTag: Ie2, name: "Menu" })));
}
var ge4 = "button";
function Re(e6, u10) {
  var R3;
  let r10 = I(), { id: i10 = `headlessui-menu-button-${r10}`, ...s18 } = e6, [t15, o13] = O2("Menu.Button"), a15 = y2(t15.buttonRef, u10), l11 = p(), m12 = o4((p10) => {
    switch (p10.key) {
      case o8.Space:
      case o8.Enter:
      case o8.ArrowDown:
        p10.preventDefault(), p10.stopPropagation(), o13({ type: 0 }), l11.nextFrame(() => o13({ type: 2, focus: a3.First }));
        break;
      case o8.ArrowUp:
        p10.preventDefault(), p10.stopPropagation(), o13({ type: 0 }), l11.nextFrame(() => o13({ type: 2, focus: a3.Last }));
        break;
    }
  }), I8 = o4((p10) => {
    switch (p10.key) {
      case o8.Space:
        p10.preventDefault();
        break;
    }
  }), A4 = o4((p10) => {
    if (r3(p10.currentTarget))
      return p10.preventDefault();
    e6.disabled || (t15.menuState === 0 ? (o13({ type: 1 }), l11.nextFrame(() => {
      var M10;
      return (M10 = t15.buttonRef.current) == null ? void 0 : M10.focus({ preventScroll: true });
    })) : (p10.preventDefault(), o13({ type: 0 })));
  }), f13 = (0, import_react88.useMemo)(() => ({ open: t15.menuState === 0 }), [t15]), g5 = { ref: a15, id: i10, type: s6(e6, t15.buttonRef), "aria-haspopup": "menu", "aria-controls": (R3 = t15.itemsRef.current) == null ? void 0 : R3.id, "aria-expanded": e6.disabled ? void 0 : t15.menuState === 0, onKeyDown: m12, onKeyUp: I8, onClick: A4 };
  return X({ ourProps: g5, theirProps: s18, slot: f13, defaultTag: ge4, name: "Menu.Button" });
}
var Ae = "div";
var be2 = S2.RenderStrategy | S2.Static;
function Ee(e6, u10) {
  var M10, b7;
  let r10 = I(), { id: i10 = `headlessui-menu-items-${r10}`, ...s18 } = e6, [t15, o13] = O2("Menu.Items"), a15 = y2(t15.itemsRef, u10), l11 = n4(t15.itemsRef), m12 = p(), I8 = C(), A4 = (() => I8 !== null ? (I8 & d5.Open) === d5.Open : t15.menuState === 0)();
  (0, import_react88.useEffect)(() => {
    let n7 = t15.itemsRef.current;
    n7 && t15.menuState === 0 && n7 !== (l11 == null ? void 0 : l11.activeElement) && n7.focus({ preventScroll: true });
  }, [t15.menuState, t15.itemsRef, l11]), F2({ container: t15.itemsRef.current, enabled: t15.menuState === 0, accept(n7) {
    return n7.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : n7.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(n7) {
    n7.setAttribute("role", "none");
  } });
  let f13 = o4((n7) => {
    var E8, P6;
    switch (m12.dispose(), n7.key) {
      case o8.Space:
        if (t15.searchQuery !== "")
          return n7.preventDefault(), n7.stopPropagation(), o13({ type: 3, value: n7.key });
      case o8.Enter:
        if (n7.preventDefault(), n7.stopPropagation(), o13({ type: 1 }), t15.activeItemIndex !== null) {
          let { dataRef: S8 } = t15.items[t15.activeItemIndex];
          (P6 = (E8 = S8.current) == null ? void 0 : E8.domRef.current) == null || P6.click();
        }
        D(t15.buttonRef.current);
        break;
      case o8.ArrowDown:
        return n7.preventDefault(), n7.stopPropagation(), o13({ type: 2, focus: a3.Next });
      case o8.ArrowUp:
        return n7.preventDefault(), n7.stopPropagation(), o13({ type: 2, focus: a3.Previous });
      case o8.Home:
      case o8.PageUp:
        return n7.preventDefault(), n7.stopPropagation(), o13({ type: 2, focus: a3.First });
      case o8.End:
      case o8.PageDown:
        return n7.preventDefault(), n7.stopPropagation(), o13({ type: 2, focus: a3.Last });
      case o8.Escape:
        n7.preventDefault(), n7.stopPropagation(), o13({ type: 1 }), o2().nextFrame(() => {
          var S8;
          return (S8 = t15.buttonRef.current) == null ? void 0 : S8.focus({ preventScroll: true });
        });
        break;
      case o8.Tab:
        n7.preventDefault(), n7.stopPropagation(), o13({ type: 1 }), o2().nextFrame(() => {
          _(t15.buttonRef.current, n7.shiftKey ? M.Previous : M.Next);
        });
        break;
      default:
        n7.key.length === 1 && (o13({ type: 3, value: n7.key }), m12.setTimeout(() => o13({ type: 4 }), 350));
        break;
    }
  }), g5 = o4((n7) => {
    switch (n7.key) {
      case o8.Space:
        n7.preventDefault();
        break;
    }
  }), R3 = (0, import_react88.useMemo)(() => ({ open: t15.menuState === 0 }), [t15]), p10 = { "aria-activedescendant": t15.activeItemIndex === null || (M10 = t15.items[t15.activeItemIndex]) == null ? void 0 : M10.id, "aria-labelledby": (b7 = t15.buttonRef.current) == null ? void 0 : b7.id, id: i10, onKeyDown: f13, onKeyUp: g5, role: "menu", tabIndex: 0, ref: a15 };
  return X({ ourProps: p10, theirProps: s18, slot: R3, defaultTag: Ae, features: be2, visible: A4, name: "Menu.Items" });
}
var Se = import_react88.Fragment;
function Pe2(e6, u10) {
  let r10 = I(), { id: i10 = `headlessui-menu-item-${r10}`, disabled: s18 = false, ...t15 } = e6, [o13, a15] = O2("Menu.Item"), l11 = o13.activeItemIndex !== null ? o13.items[o13.activeItemIndex].id === i10 : false, m12 = (0, import_react88.useRef)(null), I8 = y2(u10, m12);
  l(() => {
    if (o13.__demoMode || o13.menuState !== 0 || !l11 || o13.activationTrigger === 0)
      return;
    let T8 = o2();
    return T8.requestAnimationFrame(() => {
      var v5, B3;
      (B3 = (v5 = m12.current) == null ? void 0 : v5.scrollIntoView) == null || B3.call(v5, { block: "nearest" });
    }), T8.dispose;
  }, [o13.__demoMode, m12, l11, o13.menuState, o13.activationTrigger, o13.activeItemIndex]);
  let A4 = b5(m12), f13 = (0, import_react88.useRef)({ disabled: s18, domRef: m12, get textValue() {
    return A4();
  } });
  l(() => {
    f13.current.disabled = s18;
  }, [f13, s18]), l(() => (a15({ type: 5, id: i10, dataRef: f13 }), () => a15({ type: 6, id: i10 })), [f13, i10]);
  let g5 = o4(() => {
    a15({ type: 1 });
  }), R3 = o4((T8) => {
    if (s18)
      return T8.preventDefault();
    a15({ type: 1 }), D(o13.buttonRef.current);
  }), p10 = o4(() => {
    if (s18)
      return a15({ type: 2, focus: a3.Nothing });
    a15({ type: 2, focus: a3.Specific, id: i10 });
  }), M10 = u3(), b7 = o4((T8) => M10.update(T8)), n7 = o4((T8) => {
    M10.wasMoved(T8) && (s18 || l11 || a15({ type: 2, focus: a3.Specific, id: i10, trigger: 0 }));
  }), E8 = o4((T8) => {
    M10.wasMoved(T8) && (s18 || l11 && a15({ type: 2, focus: a3.Nothing }));
  }), P6 = (0, import_react88.useMemo)(() => ({ active: l11, disabled: s18, close: g5 }), [l11, s18, g5]);
  return X({ ourProps: { id: i10, ref: I8, role: "menuitem", tabIndex: s18 === true ? void 0 : -1, "aria-disabled": s18 === true ? true : void 0, disabled: void 0, onClick: R3, onFocus: p10, onPointerEnter: b7, onMouseEnter: b7, onPointerMove: n7, onMouseMove: n7, onPointerLeave: E8, onMouseLeave: E8 }, theirProps: t15, slot: P6, defaultTag: Se, name: "Menu.Item" });
}
var ve2 = D2(Me2);
var xe3 = D2(Re);
var he = D2(Ee);
var De2 = D2(Pe2);
var it2 = Object.assign(ve2, { Button: xe3, Items: he, Item: De2 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/popover/popover.js
var import_react89 = __toESM(require_react(), 1);
var De3 = ((u10) => (u10[u10.Open = 0] = "Open", u10[u10.Closed = 1] = "Closed", u10))(De3 || {});
var he2 = ((e6) => (e6[e6.TogglePopover = 0] = "TogglePopover", e6[e6.ClosePopover = 1] = "ClosePopover", e6[e6.SetButton = 2] = "SetButton", e6[e6.SetButtonId = 3] = "SetButtonId", e6[e6.SetPanel = 4] = "SetPanel", e6[e6.SetPanelId = 5] = "SetPanelId", e6))(he2 || {});
var He4 = { [0]: (t15) => {
  let o13 = { ...t15, popoverState: u(t15.popoverState, { [0]: 1, [1]: 0 }) };
  return o13.popoverState === 0 && (o13.__demoMode = false), o13;
}, [1](t15) {
  return t15.popoverState === 1 ? t15 : { ...t15, popoverState: 1 };
}, [2](t15, o13) {
  return t15.button === o13.button ? t15 : { ...t15, button: o13.button };
}, [3](t15, o13) {
  return t15.buttonId === o13.buttonId ? t15 : { ...t15, buttonId: o13.buttonId };
}, [4](t15, o13) {
  return t15.panel === o13.panel ? t15 : { ...t15, panel: o13.panel };
}, [5](t15, o13) {
  return t15.panelId === o13.panelId ? t15 : { ...t15, panelId: o13.panelId };
} };
var ue2 = (0, import_react89.createContext)(null);
ue2.displayName = "PopoverContext";
function oe2(t15) {
  let o13 = (0, import_react89.useContext)(ue2);
  if (o13 === null) {
    let u10 = new Error(`<${t15} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(u10, oe2), u10;
  }
  return o13;
}
var ie3 = (0, import_react89.createContext)(null);
ie3.displayName = "PopoverAPIContext";
function fe2(t15) {
  let o13 = (0, import_react89.useContext)(ie3);
  if (o13 === null) {
    let u10 = new Error(`<${t15} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(u10, fe2), u10;
  }
  return o13;
}
var Pe3 = (0, import_react89.createContext)(null);
Pe3.displayName = "PopoverGroupContext";
function Ee2() {
  return (0, import_react89.useContext)(Pe3);
}
var re2 = (0, import_react89.createContext)(null);
re2.displayName = "PopoverPanelContext";
function _e2() {
  return (0, import_react89.useContext)(re2);
}
function Ge4(t15, o13) {
  return u(o13.type, He4, t15, o13);
}
var ke2 = "div";
function we3(t15, o13) {
  var I8;
  let { __demoMode: u10 = false, ...A4 } = t15, O4 = (0, import_react89.useRef)(null), n7 = y2(o13, T2((l11) => {
    O4.current = l11;
  })), e6 = (0, import_react89.useRef)([]), T8 = (0, import_react89.useReducer)(Ge4, { __demoMode: u10, popoverState: u10 ? 0 : 1, buttons: e6, button: null, buttonId: null, panel: null, panelId: null, beforePanelSentinel: (0, import_react89.createRef)(), afterPanelSentinel: (0, import_react89.createRef)() }), [{ popoverState: P6, button: p10, buttonId: F8, panel: a15, panelId: m12, beforePanelSentinel: y9, afterPanelSentinel: s18 }, i10] = T8, d14 = n4((I8 = O4.current) != null ? I8 : p10), g5 = (0, import_react89.useMemo)(() => {
    if (!p10 || !a15)
      return false;
    for (let K5 of document.querySelectorAll("body > *"))
      if (Number(K5 == null ? void 0 : K5.contains(p10)) ^ Number(K5 == null ? void 0 : K5.contains(a15)))
        return true;
    let l11 = f(), R3 = l11.indexOf(p10), q7 = (R3 + l11.length - 1) % l11.length, W2 = (R3 + 1) % l11.length, z7 = l11[q7], ge6 = l11[W2];
    return !a15.contains(z7) && !a15.contains(ge6);
  }, [p10, a15]), L3 = s2(F8), h10 = s2(m12), _5 = (0, import_react89.useMemo)(() => ({ buttonId: L3, panelId: h10, close: () => i10({ type: 1 }) }), [L3, h10, i10]), B3 = Ee2(), D7 = B3 == null ? void 0 : B3.registerPopover, f13 = o4(() => {
    var l11;
    return (l11 = B3 == null ? void 0 : B3.isFocusWithinPopoverGroup()) != null ? l11 : (d14 == null ? void 0 : d14.activeElement) && ((p10 == null ? void 0 : p10.contains(d14.activeElement)) || (a15 == null ? void 0 : a15.contains(d14.activeElement)));
  });
  (0, import_react89.useEffect)(() => D7 == null ? void 0 : D7(_5), [D7, _5]);
  let [E8, b7] = ae2(), c16 = p8({ portals: E8, defaultContainers: [p10, a15] });
  E3(d14 == null ? void 0 : d14.defaultView, "focus", (l11) => {
    var R3, q7, W2, z7;
    l11.target !== window && l11.target instanceof HTMLElement && P6 === 0 && (f13() || p10 && a15 && (c16.contains(l11.target) || (q7 = (R3 = y9.current) == null ? void 0 : R3.contains) != null && q7.call(R3, l11.target) || (z7 = (W2 = s18.current) == null ? void 0 : W2.contains) != null && z7.call(W2, l11.target) || i10({ type: 1 })));
  }, true), H2(c16.resolveContainers, (l11, R3) => {
    i10({ type: 1 }), h(R3, T.Loose) || (l11.preventDefault(), p10 == null || p10.focus());
  }, P6 === 0);
  let M10 = o4((l11) => {
    i10({ type: 1 });
    let R3 = (() => l11 ? l11 instanceof HTMLElement ? l11 : "current" in l11 && l11.current instanceof HTMLElement ? l11.current : p10 : p10)();
    R3 == null || R3.focus();
  }), r10 = (0, import_react89.useMemo)(() => ({ close: M10, isPortalled: g5 }), [M10, g5]), v5 = (0, import_react89.useMemo)(() => ({ open: P6 === 0, close: M10 }), [P6, M10]), x7 = { ref: n7 };
  return import_react89.default.createElement(re2.Provider, { value: null }, import_react89.default.createElement(ue2.Provider, { value: T8 }, import_react89.default.createElement(ie3.Provider, { value: r10 }, import_react89.default.createElement(c7, { value: u(P6, { [0]: d5.Open, [1]: d5.Closed }) }, import_react89.default.createElement(b7, null, X({ ourProps: x7, theirProps: A4, slot: v5, defaultTag: ke2, name: "Popover" }), import_react89.default.createElement(c16.MainTreeNode, null))))));
}
var Ne4 = "button";
function Ue3(t15, o13) {
  let u10 = I(), { id: A4 = `headlessui-popover-button-${u10}`, ...O4 } = t15, [n7, e6] = oe2("Popover.Button"), { isPortalled: T8 } = fe2("Popover.Button"), P6 = (0, import_react89.useRef)(null), p10 = `headlessui-focus-sentinel-${I()}`, F8 = Ee2(), a15 = F8 == null ? void 0 : F8.closeOthers, y9 = _e2() !== null;
  (0, import_react89.useEffect)(() => {
    if (!y9)
      return e6({ type: 3, buttonId: A4 }), () => {
        e6({ type: 3, buttonId: null });
      };
  }, [y9, A4, e6]);
  let [s18] = (0, import_react89.useState)(() => Symbol()), i10 = y2(P6, o13, y9 ? null : (r10) => {
    if (r10)
      n7.buttons.current.push(s18);
    else {
      let v5 = n7.buttons.current.indexOf(s18);
      v5 !== -1 && n7.buttons.current.splice(v5, 1);
    }
    n7.buttons.current.length > 1 && console.warn("You are already using a <Popover.Button /> but only 1 <Popover.Button /> is supported."), r10 && e6({ type: 2, button: r10 });
  }), d14 = y2(P6, o13), g5 = n4(P6), L3 = o4((r10) => {
    var v5, x7, I8;
    if (y9) {
      if (n7.popoverState === 1)
        return;
      switch (r10.key) {
        case o8.Space:
        case o8.Enter:
          r10.preventDefault(), (x7 = (v5 = r10.target).click) == null || x7.call(v5), e6({ type: 1 }), (I8 = n7.button) == null || I8.focus();
          break;
      }
    } else
      switch (r10.key) {
        case o8.Space:
        case o8.Enter:
          r10.preventDefault(), r10.stopPropagation(), n7.popoverState === 1 && (a15 == null || a15(n7.buttonId)), e6({ type: 0 });
          break;
        case o8.Escape:
          if (n7.popoverState !== 0)
            return a15 == null ? void 0 : a15(n7.buttonId);
          if (!P6.current || g5 != null && g5.activeElement && !P6.current.contains(g5.activeElement))
            return;
          r10.preventDefault(), r10.stopPropagation(), e6({ type: 1 });
          break;
      }
  }), h10 = o4((r10) => {
    y9 || r10.key === o8.Space && r10.preventDefault();
  }), _5 = o4((r10) => {
    var v5, x7;
    r3(r10.currentTarget) || t15.disabled || (y9 ? (e6({ type: 1 }), (v5 = n7.button) == null || v5.focus()) : (r10.preventDefault(), r10.stopPropagation(), n7.popoverState === 1 && (a15 == null || a15(n7.buttonId)), e6({ type: 0 }), (x7 = n7.button) == null || x7.focus()));
  }), B3 = o4((r10) => {
    r10.preventDefault(), r10.stopPropagation();
  }), D7 = n7.popoverState === 0, f13 = (0, import_react89.useMemo)(() => ({ open: D7 }), [D7]), E8 = s6(t15, P6), b7 = y9 ? { ref: d14, type: E8, onKeyDown: L3, onClick: _5 } : { ref: i10, id: n7.buttonId, type: E8, "aria-expanded": t15.disabled ? void 0 : n7.popoverState === 0, "aria-controls": n7.panel ? n7.panelId : void 0, onKeyDown: L3, onKeyUp: h10, onClick: _5, onMouseDown: B3 }, c16 = n3(), M10 = o4(() => {
    let r10 = n7.panel;
    if (!r10)
      return;
    function v5() {
      u(c16.current, { [s10.Forwards]: () => O(r10, M.First), [s10.Backwards]: () => O(r10, M.Last) }) === N.Error && O(f().filter((I8) => I8.dataset.headlessuiFocusGuard !== "true"), u(c16.current, { [s10.Forwards]: M.Next, [s10.Backwards]: M.Previous }), { relativeTo: n7.button });
    }
    v5();
  });
  return import_react89.default.createElement(import_react89.default.Fragment, null, X({ ourProps: b7, theirProps: O4, slot: f13, defaultTag: Ne4, name: "Popover.Button" }), D7 && !y9 && T8 && import_react89.default.createElement(c6, { id: p10, features: p3.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: M10 }));
}
var We4 = "div";
var Ke4 = S2.RenderStrategy | S2.Static;
function je4(t15, o13) {
  let u10 = I(), { id: A4 = `headlessui-popover-overlay-${u10}`, ...O4 } = t15, [{ popoverState: n7 }, e6] = oe2("Popover.Overlay"), T8 = y2(o13), P6 = C(), p10 = (() => P6 !== null ? (P6 & d5.Open) === d5.Open : n7 === 0)(), F8 = o4((y9) => {
    if (r3(y9.currentTarget))
      return y9.preventDefault();
    e6({ type: 1 });
  }), a15 = (0, import_react89.useMemo)(() => ({ open: n7 === 0 }), [n7]);
  return X({ ourProps: { ref: T8, id: A4, "aria-hidden": true, onClick: F8 }, theirProps: O4, slot: a15, defaultTag: We4, features: Ke4, visible: p10, name: "Popover.Overlay" });
}
var Ve3 = "div";
var $e4 = S2.RenderStrategy | S2.Static;
function Je4(t15, o13) {
  let u10 = I(), { id: A4 = `headlessui-popover-panel-${u10}`, focus: O4 = false, ...n7 } = t15, [e6, T8] = oe2("Popover.Panel"), { close: P6, isPortalled: p10 } = fe2("Popover.Panel"), F8 = `headlessui-focus-sentinel-before-${I()}`, a15 = `headlessui-focus-sentinel-after-${I()}`, m12 = (0, import_react89.useRef)(null), y9 = y2(m12, o13, (f13) => {
    T8({ type: 4, panel: f13 });
  }), s18 = n4(m12);
  l(() => (T8({ type: 5, panelId: A4 }), () => {
    T8({ type: 5, panelId: null });
  }), [A4, T8]);
  let i10 = C(), d14 = (() => i10 !== null ? (i10 & d5.Open) === d5.Open : e6.popoverState === 0)(), g5 = o4((f13) => {
    var E8;
    switch (f13.key) {
      case o8.Escape:
        if (e6.popoverState !== 0 || !m12.current || s18 != null && s18.activeElement && !m12.current.contains(s18.activeElement))
          return;
        f13.preventDefault(), f13.stopPropagation(), T8({ type: 1 }), (E8 = e6.button) == null || E8.focus();
        break;
    }
  });
  (0, import_react89.useEffect)(() => {
    var f13;
    t15.static || e6.popoverState === 1 && ((f13 = t15.unmount) == null || f13) && T8({ type: 4, panel: null });
  }, [e6.popoverState, t15.unmount, t15.static, T8]), (0, import_react89.useEffect)(() => {
    if (e6.__demoMode || !O4 || e6.popoverState !== 0 || !m12.current)
      return;
    let f13 = s18 == null ? void 0 : s18.activeElement;
    m12.current.contains(f13) || O(m12.current, M.First);
  }, [e6.__demoMode, O4, m12, e6.popoverState]);
  let L3 = (0, import_react89.useMemo)(() => ({ open: e6.popoverState === 0, close: P6 }), [e6, P6]), h10 = { ref: y9, id: A4, onKeyDown: g5, onBlur: O4 && e6.popoverState === 0 ? (f13) => {
    var b7, c16, M10, r10, v5;
    let E8 = f13.relatedTarget;
    E8 && m12.current && ((b7 = m12.current) != null && b7.contains(E8) || (T8({ type: 1 }), ((M10 = (c16 = e6.beforePanelSentinel.current) == null ? void 0 : c16.contains) != null && M10.call(c16, E8) || (v5 = (r10 = e6.afterPanelSentinel.current) == null ? void 0 : r10.contains) != null && v5.call(r10, E8)) && E8.focus({ preventScroll: true })));
  } : void 0, tabIndex: -1 }, _5 = n3(), B3 = o4(() => {
    let f13 = m12.current;
    if (!f13)
      return;
    function E8() {
      u(_5.current, { [s10.Forwards]: () => {
        var c16;
        O(f13, M.First) === N.Error && ((c16 = e6.afterPanelSentinel.current) == null || c16.focus());
      }, [s10.Backwards]: () => {
        var b7;
        (b7 = e6.button) == null || b7.focus({ preventScroll: true });
      } });
    }
    E8();
  }), D7 = o4(() => {
    let f13 = m12.current;
    if (!f13)
      return;
    function E8() {
      u(_5.current, { [s10.Forwards]: () => {
        var x7;
        if (!e6.button)
          return;
        let b7 = f(), c16 = b7.indexOf(e6.button), M10 = b7.slice(0, c16 + 1), v5 = [...b7.slice(c16 + 1), ...M10];
        for (let I8 of v5.slice())
          if (I8.dataset.headlessuiFocusGuard === "true" || (x7 = e6.panel) != null && x7.contains(I8)) {
            let l11 = v5.indexOf(I8);
            l11 !== -1 && v5.splice(l11, 1);
          }
        O(v5, M.First, { sorted: false });
      }, [s10.Backwards]: () => {
        var c16;
        O(f13, M.Previous) === N.Error && ((c16 = e6.button) == null || c16.focus());
      } });
    }
    E8();
  });
  return import_react89.default.createElement(re2.Provider, { value: A4 }, d14 && p10 && import_react89.default.createElement(c6, { id: F8, ref: e6.beforePanelSentinel, features: p3.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: B3 }), X({ ourProps: h10, theirProps: n7, slot: L3, defaultTag: Ve3, features: $e4, visible: d14, name: "Popover.Panel" }), d14 && p10 && import_react89.default.createElement(c6, { id: a15, ref: e6.afterPanelSentinel, features: p3.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: D7 }));
}
var Xe4 = "div";
function Ye4(t15, o13) {
  let u10 = (0, import_react89.useRef)(null), A4 = y2(u10, o13), [O4, n7] = (0, import_react89.useState)([]), e6 = o4((s18) => {
    n7((i10) => {
      let d14 = i10.indexOf(s18);
      if (d14 !== -1) {
        let g5 = i10.slice();
        return g5.splice(d14, 1), g5;
      }
      return i10;
    });
  }), T8 = o4((s18) => (n7((i10) => [...i10, s18]), () => e6(s18))), P6 = o4(() => {
    var d14;
    let s18 = e(u10);
    if (!s18)
      return false;
    let i10 = s18.activeElement;
    return (d14 = u10.current) != null && d14.contains(i10) ? true : O4.some((g5) => {
      var L3, h10;
      return ((L3 = s18.getElementById(g5.buttonId.current)) == null ? void 0 : L3.contains(i10)) || ((h10 = s18.getElementById(g5.panelId.current)) == null ? void 0 : h10.contains(i10));
    });
  }), p10 = o4((s18) => {
    for (let i10 of O4)
      i10.buttonId.current !== s18 && i10.close();
  }), F8 = (0, import_react89.useMemo)(() => ({ registerPopover: T8, unregisterPopover: e6, isFocusWithinPopoverGroup: P6, closeOthers: p10 }), [T8, e6, P6, p10]), a15 = (0, import_react89.useMemo)(() => ({}), []), m12 = t15, y9 = { ref: A4 };
  return import_react89.default.createElement(Pe3.Provider, { value: F8 }, X({ ourProps: y9, theirProps: m12, slot: a15, defaultTag: Xe4, name: "Popover.Group" }));
}
var qe4 = D2(we3);
var ze4 = D2(Ue3);
var Qe4 = D2(je4);
var Ze4 = D2(Je4);
var et2 = D2(Ye4);
var kt = Object.assign(qe4, { Button: ze4, Overlay: Qe4, Panel: Ze4, Group: et2 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
var import_react92 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-flags.js
var import_react90 = __toESM(require_react(), 1);
function c13(a15 = 0) {
  let [l11, r10] = (0, import_react90.useState)(a15), t15 = f6(), o13 = (0, import_react90.useCallback)((e6) => {
    t15.current && r10((u10) => u10 | e6);
  }, [l11, t15]), m12 = (0, import_react90.useCallback)((e6) => Boolean(l11 & e6), [l11]), s18 = (0, import_react90.useCallback)((e6) => {
    t15.current && r10((u10) => u10 & ~e6);
  }, [r10, t15]), g5 = (0, import_react90.useCallback)((e6) => {
    t15.current && r10((u10) => u10 ^ e6);
  }, [r10]);
  return { flags: l11, addFlag: o13, hasFlag: m12, removeFlag: s18, toggleFlag: g5 };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/label/label.js
var import_react91 = __toESM(require_react(), 1);
var d11 = (0, import_react91.createContext)(null);
function u9() {
  let o13 = (0, import_react91.useContext)(d11);
  if (o13 === null) {
    let t15 = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t15, u9), t15;
  }
  return o13;
}
function H7() {
  let [o13, t15] = (0, import_react91.useState)([]);
  return [o13.length > 0 ? o13.join(" ") : void 0, (0, import_react91.useMemo)(() => function(e6) {
    let s18 = o4((r10) => (t15((l11) => [...l11, r10]), () => t15((l11) => {
      let n7 = l11.slice(), p10 = n7.indexOf(r10);
      return p10 !== -1 && n7.splice(p10, 1), n7;
    }))), a15 = (0, import_react91.useMemo)(() => ({ register: s18, slot: e6.slot, name: e6.name, props: e6.props }), [s18, e6.slot, e6.name, e6.props]);
    return import_react91.default.createElement(d11.Provider, { value: a15 }, e6.children);
  }, [t15])];
}
var A = "label";
function h9(o13, t15) {
  let i10 = I(), { id: e6 = `headlessui-label-${i10}`, passive: s18 = false, ...a15 } = o13, r10 = u9(), l11 = y2(t15);
  l(() => r10.register(e6), [e6, r10.register]);
  let n7 = { ref: l11, ...r10.props, id: e6 };
  return s18 && ("onClick" in n7 && (delete n7.htmlFor, delete n7.onClick), "onClick" in a15 && delete a15.onClick), X({ ourProps: n7, theirProps: a15, slot: r10.slot || {}, defaultTag: A, name: r10.name || "Label" });
}
var v3 = D2(h9);
var M5 = Object.assign(v3, {});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
var Ce2 = ((t15) => (t15[t15.RegisterOption = 0] = "RegisterOption", t15[t15.UnregisterOption = 1] = "UnregisterOption", t15))(Ce2 || {});
var ke3 = { [0](r10, o13) {
  let t15 = [...r10.options, { id: o13.id, element: o13.element, propsRef: o13.propsRef }];
  return { ...r10, options: I2(t15, (p10) => p10.element.current) };
}, [1](r10, o13) {
  let t15 = r10.options.slice(), p10 = r10.options.findIndex((T8) => T8.id === o13.id);
  return p10 === -1 ? r10 : (t15.splice(p10, 1), { ...r10, options: t15 });
} };
var B2 = (0, import_react92.createContext)(null);
B2.displayName = "RadioGroupDataContext";
function oe3(r10) {
  let o13 = (0, import_react92.useContext)(B2);
  if (o13 === null) {
    let t15 = new Error(`<${r10} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t15, oe3), t15;
  }
  return o13;
}
var $3 = (0, import_react92.createContext)(null);
$3.displayName = "RadioGroupActionsContext";
function ne2(r10) {
  let o13 = (0, import_react92.useContext)($3);
  if (o13 === null) {
    let t15 = new Error(`<${r10} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t15, ne2), t15;
  }
  return o13;
}
function Le(r10, o13) {
  return u(o13.type, ke3, r10, o13);
}
var he3 = "div";
function Fe(r10, o13) {
  let t15 = I(), { id: p10 = `headlessui-radiogroup-${t15}`, value: T8, defaultValue: v5, form: S8, name: m12, onChange: M10, by: G3 = (e6, i10) => e6 === i10, disabled: C5 = false, ...H9 } = r10, y9 = o4(typeof G3 == "string" ? (e6, i10) => {
    let n7 = G3;
    return (e6 == null ? void 0 : e6[n7]) === (i10 == null ? void 0 : i10[n7]);
  } : G3), [P6, h10] = (0, import_react92.useReducer)(Le, { options: [] }), a15 = P6.options, [N6, R3] = H7(), [k2, U4] = M2(), L3 = (0, import_react92.useRef)(null), W2 = y2(L3, o13), [l11, s18] = T4(T8, M10, v5), b7 = (0, import_react92.useMemo)(() => a15.find((e6) => !e6.propsRef.current.disabled), [a15]), F8 = (0, import_react92.useMemo)(() => a15.some((e6) => y9(e6.propsRef.current.value, l11)), [a15, l11]), d14 = o4((e6) => {
    var n7;
    if (C5 || y9(e6, l11))
      return false;
    let i10 = (n7 = a15.find((f13) => y9(f13.propsRef.current.value, e6))) == null ? void 0 : n7.propsRef.current;
    return i10 != null && i10.disabled ? false : (s18 == null || s18(e6), true);
  });
  F2({ container: L3.current, accept(e6) {
    return e6.getAttribute("role") === "radio" ? NodeFilter.FILTER_REJECT : e6.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(e6) {
    e6.setAttribute("role", "none");
  } });
  let x7 = o4((e6) => {
    let i10 = L3.current;
    if (!i10)
      return;
    let n7 = e(i10), f13 = a15.filter((u10) => u10.propsRef.current.disabled === false).map((u10) => u10.element.current);
    switch (e6.key) {
      case o8.Enter:
        p2(e6.currentTarget);
        break;
      case o8.ArrowLeft:
      case o8.ArrowUp:
        if (e6.preventDefault(), e6.stopPropagation(), O(f13, M.Previous | M.WrapAround) === N.Success) {
          let g5 = a15.find((K5) => K5.element.current === (n7 == null ? void 0 : n7.activeElement));
          g5 && d14(g5.propsRef.current.value);
        }
        break;
      case o8.ArrowRight:
      case o8.ArrowDown:
        if (e6.preventDefault(), e6.stopPropagation(), O(f13, M.Next | M.WrapAround) === N.Success) {
          let g5 = a15.find((K5) => K5.element.current === (n7 == null ? void 0 : n7.activeElement));
          g5 && d14(g5.propsRef.current.value);
        }
        break;
      case o8.Space:
        {
          e6.preventDefault(), e6.stopPropagation();
          let u10 = a15.find((g5) => g5.element.current === (n7 == null ? void 0 : n7.activeElement));
          u10 && d14(u10.propsRef.current.value);
        }
        break;
    }
  }), c16 = o4((e6) => (h10({ type: 0, ...e6 }), () => h10({ type: 1, id: e6.id }))), _5 = (0, import_react92.useMemo)(() => ({ value: l11, firstOption: b7, containsCheckedOption: F8, disabled: C5, compare: y9, ...P6 }), [l11, b7, F8, C5, y9, P6]), ie6 = (0, import_react92.useMemo)(() => ({ registerOption: c16, change: d14 }), [c16, d14]), ae4 = { ref: W2, id: p10, role: "radiogroup", "aria-labelledby": N6, "aria-describedby": k2, onKeyDown: x7 }, pe4 = (0, import_react92.useMemo)(() => ({ value: l11 }), [l11]), w6 = (0, import_react92.useRef)(null), le4 = p();
  return (0, import_react92.useEffect)(() => {
    w6.current && v5 !== void 0 && le4.addEventListener(w6.current, "reset", () => {
      d14(v5);
    });
  }, [w6, d14]), import_react92.default.createElement(U4, { name: "RadioGroup.Description" }, import_react92.default.createElement(R3, { name: "RadioGroup.Label" }, import_react92.default.createElement($3.Provider, { value: ie6 }, import_react92.default.createElement(B2.Provider, { value: _5 }, m12 != null && l11 != null && e3({ [m12]: l11 }).map(([e6, i10], n7) => import_react92.default.createElement(c6, { features: p3.Hidden, ref: n7 === 0 ? (f13) => {
    var u10;
    w6.current = (u10 = f13 == null ? void 0 : f13.closest("form")) != null ? u10 : null;
  } : void 0, ...R({ key: e6, as: "input", type: "radio", checked: i10 != null, hidden: true, readOnly: true, form: S8, name: e6, value: i10 }) })), X({ ourProps: ae4, theirProps: H9, slot: pe4, defaultTag: he3, name: "RadioGroup" })))));
}
var xe4 = ((t15) => (t15[t15.Empty = 1] = "Empty", t15[t15.Active = 2] = "Active", t15))(xe4 || {});
var _e3 = "div";
function we4(r10, o13) {
  var x7;
  let t15 = I(), { id: p10 = `headlessui-radiogroup-option-${t15}`, value: T8, disabled: v5 = false, ...S8 } = r10, m12 = (0, import_react92.useRef)(null), M10 = y2(m12, o13), [G3, C5] = H7(), [H9, y9] = M2(), { addFlag: P6, removeFlag: h10, hasFlag: a15 } = c13(1), N6 = s2({ value: T8, disabled: v5 }), R3 = oe3("RadioGroup.Option"), k2 = ne2("RadioGroup.Option");
  l(() => k2.registerOption({ id: p10, element: m12, propsRef: N6 }), [p10, k2, m12, r10]);
  let U4 = o4((c16) => {
    var _5;
    if (r3(c16.currentTarget))
      return c16.preventDefault();
    k2.change(T8) && (P6(2), (_5 = m12.current) == null || _5.focus());
  }), L3 = o4((c16) => {
    if (r3(c16.currentTarget))
      return c16.preventDefault();
    P6(2);
  }), W2 = o4(() => h10(2)), l11 = ((x7 = R3.firstOption) == null ? void 0 : x7.id) === p10, s18 = R3.disabled || v5, b7 = R3.compare(R3.value, T8), F8 = { ref: M10, id: p10, role: "radio", "aria-checked": b7 ? "true" : "false", "aria-labelledby": G3, "aria-describedby": H9, "aria-disabled": s18 ? true : void 0, tabIndex: (() => s18 ? -1 : b7 || !R3.containsCheckedOption && l11 ? 0 : -1)(), onClick: s18 ? void 0 : U4, onFocus: s18 ? void 0 : L3, onBlur: s18 ? void 0 : W2 }, d14 = (0, import_react92.useMemo)(() => ({ checked: b7, disabled: s18, active: a15(2) }), [b7, s18, a15]);
  return import_react92.default.createElement(y9, { name: "RadioGroup.Description" }, import_react92.default.createElement(C5, { name: "RadioGroup.Label" }, X({ ourProps: F8, theirProps: S8, slot: d14, defaultTag: _e3, name: "RadioGroup.Option" })));
}
var Ie3 = D2(Fe);
var Se2 = D2(we4);
var yt = Object.assign(Ie3, { Option: Se2, Label: M5, Description: b3 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/switch/switch.js
var import_react93 = __toESM(require_react(), 1);
var y6 = (0, import_react93.createContext)(null);
y6.displayName = "GroupContext";
var Y3 = import_react93.Fragment;
function Z5(s18) {
  var d14;
  let [n7, p10] = (0, import_react93.useState)(null), [c16, f13] = H7(), [r10, h10] = M2(), l11 = (0, import_react93.useMemo)(() => ({ switch: n7, setSwitch: p10, labelledby: c16, describedby: r10 }), [n7, p10, c16, r10]), T8 = {}, b7 = s18;
  return import_react93.default.createElement(h10, { name: "Switch.Description" }, import_react93.default.createElement(f13, { name: "Switch.Label", props: { htmlFor: (d14 = l11.switch) == null ? void 0 : d14.id, onClick(t15) {
    n7 && (t15.currentTarget.tagName === "LABEL" && t15.preventDefault(), n7.click(), n7.focus({ preventScroll: true }));
  } } }, import_react93.default.createElement(y6.Provider, { value: l11 }, X({ ourProps: T8, theirProps: b7, defaultTag: Y3, name: "Switch.Group" }))));
}
var ee5 = "button";
function te3(s18, n7) {
  let p10 = I(), { id: c16 = `headlessui-switch-${p10}`, checked: f13, defaultChecked: r10 = false, onChange: h10, name: l11, value: T8, form: b7, ...d14 } = s18, t15 = (0, import_react93.useContext)(y6), u10 = (0, import_react93.useRef)(null), D7 = y2(u10, n7, t15 === null ? null : t15.setSwitch), [o13, a15] = T4(f13, h10, r10), S8 = o4(() => a15 == null ? void 0 : a15(!o13)), C5 = o4((e6) => {
    if (r3(e6.currentTarget))
      return e6.preventDefault();
    e6.preventDefault(), S8();
  }), L3 = o4((e6) => {
    e6.key === o8.Space ? (e6.preventDefault(), S8()) : e6.key === o8.Enter && p2(e6.currentTarget);
  }), v5 = o4((e6) => e6.preventDefault()), G3 = (0, import_react93.useMemo)(() => ({ checked: o13 }), [o13]), R3 = { id: c16, ref: D7, role: "switch", type: s6(s18, u10), tabIndex: 0, "aria-checked": o13, "aria-labelledby": t15 == null ? void 0 : t15.labelledby, "aria-describedby": t15 == null ? void 0 : t15.describedby, onClick: C5, onKeyUp: L3, onKeyPress: v5 }, k2 = p();
  return (0, import_react93.useEffect)(() => {
    var w6;
    let e6 = (w6 = u10.current) == null ? void 0 : w6.closest("form");
    e6 && r10 !== void 0 && k2.addEventListener(e6, "reset", () => {
      a15(r10);
    });
  }, [u10, a15]), import_react93.default.createElement(import_react93.default.Fragment, null, l11 != null && o13 && import_react93.default.createElement(c6, { features: p3.Hidden, ...R({ as: "input", type: "checkbox", hidden: true, readOnly: true, form: b7, checked: o13, name: l11, value: T8 }) }), X({ ourProps: R3, theirProps: d14, slot: G3, defaultTag: ee5, name: "Switch" }));
}
var ne3 = D2(te3);
var re3 = Z5;
var Ge5 = Object.assign(ne3, { Group: re3, Label: M5, Description: b3 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/tabs/tabs.js
var import_react95 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/focus-sentinel.js
var import_react94 = __toESM(require_react(), 1);
function p9({ onFocus: n7 }) {
  let [r10, o13] = (0, import_react94.useState)(true);
  return r10 ? import_react94.default.createElement(c6, { as: "button", type: "button", features: p3.Focusable, onFocus: (a15) => {
    a15.preventDefault();
    let e6, u10 = 50;
    function t15() {
      if (u10-- <= 0) {
        e6 && cancelAnimationFrame(e6);
        return;
      }
      if (n7()) {
        o13(false), cancelAnimationFrame(e6);
        return;
      }
      e6 = requestAnimationFrame(t15);
    }
    e6 = requestAnimationFrame(t15);
  } }) : null;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/stable-collection.js
var r9 = __toESM(require_react(), 1);
var s16 = r9.createContext(null);
function a13() {
  return { groups: /* @__PURE__ */ new Map(), get(n7, t15) {
    var c16;
    let e6 = this.groups.get(n7);
    e6 || (e6 = /* @__PURE__ */ new Map(), this.groups.set(n7, e6));
    let l11 = (c16 = e6.get(t15)) != null ? c16 : 0;
    e6.set(t15, l11 + 1);
    let o13 = Array.from(e6.keys()).indexOf(t15);
    function i10() {
      let u10 = e6.get(t15);
      u10 > 1 ? e6.set(t15, u10 - 1) : e6.delete(t15);
    }
    return [o13, i10];
  } };
}
function C4({ children: n7 }) {
  let t15 = r9.useRef(a13());
  return r9.createElement(s16.Provider, { value: t15 }, n7);
}
function d12(n7) {
  let t15 = r9.useContext(s16);
  if (!t15)
    throw new Error("You must wrap your component in a <StableCollection>");
  let e6 = f12(), [l11, o13] = t15.current.get(n7, e6);
  return r9.useEffect(() => o13, []), l11;
}
function f12() {
  var l11, o13, i10;
  let n7 = (i10 = (o13 = (l11 = r9.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) == null ? void 0 : l11.ReactCurrentOwner) == null ? void 0 : o13.current) != null ? i10 : null;
  if (!n7)
    return Symbol();
  let t15 = [], e6 = n7;
  for (; e6; )
    t15.push(e6.index), e6 = e6.return;
  return "$." + t15.join(".");
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/tabs/tabs.js
var ue4 = ((t15) => (t15[t15.Forwards = 0] = "Forwards", t15[t15.Backwards = 1] = "Backwards", t15))(ue4 || {});
var Te2 = ((o13) => (o13[o13.Less = -1] = "Less", o13[o13.Equal = 0] = "Equal", o13[o13.Greater = 1] = "Greater", o13))(Te2 || {});
var de3 = ((r10) => (r10[r10.SetSelectedIndex = 0] = "SetSelectedIndex", r10[r10.RegisterTab = 1] = "RegisterTab", r10[r10.UnregisterTab = 2] = "UnregisterTab", r10[r10.RegisterPanel = 3] = "RegisterPanel", r10[r10.UnregisterPanel = 4] = "UnregisterPanel", r10))(de3 || {});
var ce3 = { [0](e6, n7) {
  var u10;
  let t15 = I2(e6.tabs, (T8) => T8.current), o13 = I2(e6.panels, (T8) => T8.current), s18 = t15.filter((T8) => {
    var l11;
    return !((l11 = T8.current) != null && l11.hasAttribute("disabled"));
  }), r10 = { ...e6, tabs: t15, panels: o13 };
  if (n7.index < 0 || n7.index > t15.length - 1) {
    let T8 = u(Math.sign(n7.index - e6.selectedIndex), { [-1]: () => 1, [0]: () => u(Math.sign(n7.index), { [-1]: () => 0, [0]: () => 0, [1]: () => 1 }), [1]: () => 0 });
    return s18.length === 0 ? r10 : { ...r10, selectedIndex: u(T8, { [0]: () => t15.indexOf(s18[0]), [1]: () => t15.indexOf(s18[s18.length - 1]) }) };
  }
  let i10 = t15.slice(0, n7.index), b7 = [...t15.slice(n7.index), ...i10].find((T8) => s18.includes(T8));
  if (!b7)
    return r10;
  let c16 = (u10 = t15.indexOf(b7)) != null ? u10 : e6.selectedIndex;
  return c16 === -1 && (c16 = e6.selectedIndex), { ...r10, selectedIndex: c16 };
}, [1](e6, n7) {
  var r10;
  if (e6.tabs.includes(n7.tab))
    return e6;
  let t15 = e6.tabs[e6.selectedIndex], o13 = I2([...e6.tabs, n7.tab], (i10) => i10.current), s18 = (r10 = o13.indexOf(t15)) != null ? r10 : e6.selectedIndex;
  return s18 === -1 && (s18 = e6.selectedIndex), { ...e6, tabs: o13, selectedIndex: s18 };
}, [2](e6, n7) {
  return { ...e6, tabs: e6.tabs.filter((t15) => t15 !== n7.tab) };
}, [3](e6, n7) {
  return e6.panels.includes(n7.panel) ? e6 : { ...e6, panels: I2([...e6.panels, n7.panel], (t15) => t15.current) };
}, [4](e6, n7) {
  return { ...e6, panels: e6.panels.filter((t15) => t15 !== n7.panel) };
} };
var X4 = (0, import_react95.createContext)(null);
X4.displayName = "TabsDataContext";
function M7(e6) {
  let n7 = (0, import_react95.useContext)(X4);
  if (n7 === null) {
    let t15 = new Error(`<${e6} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t15, M7), t15;
  }
  return n7;
}
var $4 = (0, import_react95.createContext)(null);
$4.displayName = "TabsActionsContext";
function q5(e6) {
  let n7 = (0, import_react95.useContext)($4);
  if (n7 === null) {
    let t15 = new Error(`<${e6} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t15, q5), t15;
  }
  return n7;
}
function fe3(e6, n7) {
  return u(n7.type, ce3, e6, n7);
}
var be4 = import_react95.Fragment;
function me3(e6, n7) {
  let { defaultIndex: t15 = 0, vertical: o13 = false, manual: s18 = false, onChange: r10, selectedIndex: i10 = null, ...R3 } = e6;
  const b7 = o13 ? "vertical" : "horizontal", c16 = s18 ? "manual" : "auto";
  let u10 = i10 !== null, T8 = y2(n7), [l11, d14] = (0, import_react95.useReducer)(fe3, { selectedIndex: i10 != null ? i10 : t15, tabs: [], panels: [] }), y9 = (0, import_react95.useMemo)(() => ({ selectedIndex: l11.selectedIndex }), [l11.selectedIndex]), m12 = s2(r10 || (() => {
  })), x7 = s2(l11.tabs), E8 = (0, import_react95.useMemo)(() => ({ orientation: b7, activation: c16, ...l11 }), [b7, c16, l11]), S8 = o4((p10) => (d14({ type: 1, tab: p10 }), () => d14({ type: 2, tab: p10 }))), A4 = o4((p10) => (d14({ type: 3, panel: p10 }), () => d14({ type: 4, panel: p10 }))), L3 = o4((p10) => {
    C5.current !== p10 && m12.current(p10), u10 || d14({ type: 0, index: p10 });
  }), C5 = s2(u10 ? e6.selectedIndex : l11.selectedIndex), N6 = (0, import_react95.useMemo)(() => ({ registerTab: S8, registerPanel: A4, change: L3 }), []);
  l(() => {
    d14({ type: 0, index: i10 != null ? i10 : t15 });
  }, [i10]), l(() => {
    if (C5.current === void 0 || l11.tabs.length <= 0)
      return;
    let p10 = I2(l11.tabs, (a15) => a15.current);
    p10.some((a15, f13) => l11.tabs[f13] !== a15) && L3(p10.indexOf(l11.tabs[C5.current]));
  });
  let B3 = { ref: T8 };
  return import_react95.default.createElement(C4, null, import_react95.default.createElement($4.Provider, { value: N6 }, import_react95.default.createElement(X4.Provider, { value: E8 }, E8.tabs.length <= 0 && import_react95.default.createElement(p9, { onFocus: () => {
    var p10, I8;
    for (let a15 of x7.current)
      if (((p10 = a15.current) == null ? void 0 : p10.tabIndex) === 0)
        return (I8 = a15.current) == null || I8.focus(), true;
    return false;
  } }), X({ ourProps: B3, theirProps: R3, slot: y9, defaultTag: be4, name: "Tabs" }))));
}
var Pe4 = "div";
function ge5(e6, n7) {
  let { orientation: t15, selectedIndex: o13 } = M7("Tab.List"), s18 = y2(n7);
  return X({ ourProps: { ref: s18, role: "tablist", "aria-orientation": t15 }, theirProps: e6, slot: { selectedIndex: o13 }, defaultTag: Pe4, name: "Tabs.List" });
}
var ye4 = "button";
function xe5(e6, n7) {
  var p10, I8;
  let t15 = I(), { id: o13 = `headlessui-tabs-tab-${t15}`, ...s18 } = e6, { orientation: r10, activation: i10, selectedIndex: R3, tabs: b7, panels: c16 } = M7("Tab"), u10 = q5("Tab"), T8 = M7("Tab"), l11 = (0, import_react95.useRef)(null), d14 = y2(l11, n7);
  l(() => u10.registerTab(l11), [u10, l11]);
  let y9 = d12("tabs"), m12 = b7.indexOf(l11);
  m12 === -1 && (m12 = y9);
  let x7 = m12 === R3, E8 = o4((a15) => {
    var j7;
    let f13 = a15();
    if (f13 === N.Success && i10 === "auto") {
      let W2 = (j7 = e(l11)) == null ? void 0 : j7.activeElement, z7 = T8.tabs.findIndex((te5) => te5.current === W2);
      z7 !== -1 && u10.change(z7);
    }
    return f13;
  }), S8 = o4((a15) => {
    let f13 = b7.map((W2) => W2.current).filter(Boolean);
    if (a15.key === o8.Space || a15.key === o8.Enter) {
      a15.preventDefault(), a15.stopPropagation(), u10.change(m12);
      return;
    }
    switch (a15.key) {
      case o8.Home:
      case o8.PageUp:
        return a15.preventDefault(), a15.stopPropagation(), E8(() => O(f13, M.First));
      case o8.End:
      case o8.PageDown:
        return a15.preventDefault(), a15.stopPropagation(), E8(() => O(f13, M.Last));
    }
    if (E8(() => u(r10, { vertical() {
      return a15.key === o8.ArrowUp ? O(f13, M.Previous | M.WrapAround) : a15.key === o8.ArrowDown ? O(f13, M.Next | M.WrapAround) : N.Error;
    }, horizontal() {
      return a15.key === o8.ArrowLeft ? O(f13, M.Previous | M.WrapAround) : a15.key === o8.ArrowRight ? O(f13, M.Next | M.WrapAround) : N.Error;
    } })) === N.Success)
      return a15.preventDefault();
  }), A4 = (0, import_react95.useRef)(false), L3 = o4(() => {
    var a15;
    A4.current || (A4.current = true, (a15 = l11.current) == null || a15.focus(), u10.change(m12), t3(() => {
      A4.current = false;
    }));
  }), C5 = o4((a15) => {
    a15.preventDefault();
  }), N6 = (0, import_react95.useMemo)(() => ({ selected: x7 }), [x7]), B3 = { ref: d14, onKeyDown: S8, onMouseDown: C5, onClick: L3, id: o13, role: "tab", type: s6(e6, l11), "aria-controls": (I8 = (p10 = c16[m12]) == null ? void 0 : p10.current) == null ? void 0 : I8.id, "aria-selected": x7, tabIndex: x7 ? 0 : -1 };
  return X({ ourProps: B3, theirProps: s18, slot: N6, defaultTag: ye4, name: "Tabs.Tab" });
}
var Ee3 = "div";
function Ae2(e6, n7) {
  let { selectedIndex: t15 } = M7("Tab.Panels"), o13 = y2(n7), s18 = (0, import_react95.useMemo)(() => ({ selectedIndex: t15 }), [t15]);
  return X({ ourProps: { ref: o13 }, theirProps: e6, slot: s18, defaultTag: Ee3, name: "Tabs.Panels" });
}
var Re2 = "div";
var Le2 = S2.RenderStrategy | S2.Static;
function De4(e6, n7) {
  var E8, S8, A4, L3;
  let t15 = I(), { id: o13 = `headlessui-tabs-panel-${t15}`, tabIndex: s18 = 0, ...r10 } = e6, { selectedIndex: i10, tabs: R3, panels: b7 } = M7("Tab.Panel"), c16 = q5("Tab.Panel"), u10 = (0, import_react95.useRef)(null), T8 = y2(u10, n7);
  l(() => c16.registerPanel(u10), [c16, u10]);
  let l11 = d12("panels"), d14 = b7.indexOf(u10);
  d14 === -1 && (d14 = l11);
  let y9 = d14 === i10, m12 = (0, import_react95.useMemo)(() => ({ selected: y9 }), [y9]), x7 = { ref: T8, id: o13, role: "tabpanel", "aria-labelledby": (S8 = (E8 = R3[d14]) == null ? void 0 : E8.current) == null ? void 0 : S8.id, tabIndex: y9 ? s18 : -1 };
  return !y9 && ((A4 = r10.unmount) == null || A4) && !((L3 = r10.static) != null && L3) ? import_react95.default.createElement(c6, { as: "span", ...x7 }) : X({ ourProps: x7, theirProps: r10, slot: m12, defaultTag: Re2, features: Le2, visible: y9, name: "Tabs.Panel" });
}
var Se3 = D2(xe5);
var Ie4 = D2(me3);
var Fe2 = D2(ge5);
var he4 = D2(Ae2);
var Me3 = D2(De4);
var rt2 = Object.assign(Se3, { Group: Ie4, List: Fe2, Panels: he4, Panel: Me3 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/transitions/transition.js
var import_react96 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/once.js
function l10(r10) {
  let e6 = { called: false };
  return (...t15) => {
    if (!e6.called)
      return e6.called = true, r10(...t15);
  };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/transitions/utils/transition.js
function d13(t15, ...e6) {
  t15 && e6.length > 0 && t15.classList.add(...e6);
}
function v4(t15, ...e6) {
  t15 && e6.length > 0 && t15.classList.remove(...e6);
}
function F7(t15, e6) {
  let n7 = o2();
  if (!t15)
    return n7.dispose;
  let { transitionDuration: m12, transitionDelay: o13 } = getComputedStyle(t15), [u10, p10] = [m12, o13].map((a15) => {
    let [r10 = 0] = a15.split(",").filter(Boolean).map((i10) => i10.includes("ms") ? parseFloat(i10) : parseFloat(i10) * 1e3).sort((i10, f13) => f13 - i10);
    return r10;
  }), l11 = u10 + p10;
  if (l11 !== 0) {
    n7.group((r10) => {
      r10.setTimeout(() => {
        e6(), r10.dispose();
      }, l11), r10.addEventListener(t15, "transitionrun", (i10) => {
        i10.target === i10.currentTarget && r10.dispose();
      });
    });
    let a15 = n7.addEventListener(t15, "transitionend", (r10) => {
      r10.target === r10.currentTarget && (e6(), a15());
    });
  } else
    e6();
  return n7.add(() => e6()), n7.dispose;
}
function y7(t15, e6, n7, m12) {
  let o13 = n7 ? "enter" : "leave", u10 = o2(), p10 = m12 !== void 0 ? l10(m12) : () => {
  };
  o13 === "enter" && (t15.removeAttribute("hidden"), t15.style.display = "");
  let l11 = u(o13, { enter: () => e6.enter, leave: () => e6.leave }), a15 = u(o13, { enter: () => e6.enterTo, leave: () => e6.leaveTo }), r10 = u(o13, { enter: () => e6.enterFrom, leave: () => e6.leaveFrom });
  return v4(t15, ...e6.enter, ...e6.enterTo, ...e6.enterFrom, ...e6.leave, ...e6.leaveFrom, ...e6.leaveTo, ...e6.entered), d13(t15, ...l11, ...r10), u10.nextFrame(() => {
    v4(t15, ...r10), d13(t15, ...a15), F7(t15, () => (v4(t15, ...l11), d13(t15, ...e6.entered), p10()));
  }), u10.dispose;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-transition.js
function D6({ container: i10, direction: t15, classes: o13, onStart: s18, onStop: u10 }) {
  let a15 = f6(), c16 = p(), r10 = s2(t15);
  l(() => {
    let e6 = o2();
    c16.add(e6.dispose);
    let n7 = i10.current;
    if (n7 && r10.current !== "idle" && a15.current)
      return e6.dispose(), s18.current(r10.current), e6.add(y7(n7, o13.current, r10.current === "enter", () => {
        e6.dispose(), u10.current(r10.current);
      })), e6.dispose;
  }, [t15]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/transitions/transition.js
function x6(t15 = "") {
  return t15.split(" ").filter((n7) => n7.trim().length > 1);
}
var I6 = (0, import_react96.createContext)(null);
I6.displayName = "TransitionContext";
var Ce3 = ((r10) => (r10.Visible = "visible", r10.Hidden = "hidden", r10))(Ce3 || {});
function Ee4() {
  let t15 = (0, import_react96.useContext)(I6);
  if (t15 === null)
    throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return t15;
}
function be5() {
  let t15 = (0, import_react96.useContext)(_4);
  if (t15 === null)
    throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return t15;
}
var _4 = (0, import_react96.createContext)(null);
_4.displayName = "NestingContext";
function M8(t15) {
  return "children" in t15 ? M8(t15.children) : t15.current.filter(({ el: n7 }) => n7.current !== null).filter(({ state: n7 }) => n7 === "visible").length > 0;
}
function re5(t15, n7) {
  let r10 = s2(t15), o13 = (0, import_react96.useRef)([]), N6 = f6(), H9 = p(), p10 = o4((s18, e6 = j.Hidden) => {
    let a15 = o13.current.findIndex(({ el: i10 }) => i10 === s18);
    a15 !== -1 && (u(e6, { [j.Unmount]() {
      o13.current.splice(a15, 1);
    }, [j.Hidden]() {
      o13.current[a15].state = "hidden";
    } }), H9.microTask(() => {
      var i10;
      !M8(o13) && N6.current && ((i10 = r10.current) == null || i10.call(r10));
    }));
  }), P6 = o4((s18) => {
    let e6 = o13.current.find(({ el: a15 }) => a15 === s18);
    return e6 ? e6.state !== "visible" && (e6.state = "visible") : o13.current.push({ el: s18, state: "visible" }), () => p10(s18, j.Unmount);
  }), h10 = (0, import_react96.useRef)([]), v5 = (0, import_react96.useRef)(Promise.resolve()), T8 = (0, import_react96.useRef)({ enter: [], leave: [], idle: [] }), g5 = o4((s18, e6, a15) => {
    h10.current.splice(0), n7 && (n7.chains.current[e6] = n7.chains.current[e6].filter(([i10]) => i10 !== s18)), n7 == null || n7.chains.current[e6].push([s18, new Promise((i10) => {
      h10.current.push(i10);
    })]), n7 == null || n7.chains.current[e6].push([s18, new Promise((i10) => {
      Promise.all(T8.current[e6].map(([l11, R3]) => R3)).then(() => i10());
    })]), e6 === "enter" ? v5.current = v5.current.then(() => n7 == null ? void 0 : n7.wait.current).then(() => a15(e6)) : a15(e6);
  }), f13 = o4((s18, e6, a15) => {
    Promise.all(T8.current[e6].splice(0).map(([i10, l11]) => l11)).then(() => {
      var i10;
      (i10 = h10.current.shift()) == null || i10();
    }).then(() => a15(e6));
  });
  return (0, import_react96.useMemo)(() => ({ children: o13, register: P6, unregister: p10, onStart: g5, onStop: f13, wait: v5, chains: T8 }), [P6, p10, o13, g5, f13, T8, v5]);
}
function Se4() {
}
var xe6 = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
function ie4(t15) {
  var r10;
  let n7 = {};
  for (let o13 of xe6)
    n7[o13] = (r10 = t15[o13]) != null ? r10 : Se4;
  return n7;
}
function Pe5(t15) {
  let n7 = (0, import_react96.useRef)(ie4(t15));
  return (0, import_react96.useEffect)(() => {
    n7.current = ie4(t15);
  }, [t15]), n7;
}
var Re3 = "div";
var oe4 = S2.RenderStrategy;
function ye5(t15, n7) {
  let { beforeEnter: r10, afterEnter: o13, beforeLeave: N6, afterLeave: H9, enter: p10, enterFrom: P6, enterTo: h10, entered: v5, leave: T8, leaveFrom: g5, leaveTo: f13, ...s18 } = t15, e6 = (0, import_react96.useRef)(null), a15 = y2(e6, n7), i10 = s18.unmount ? j.Unmount : j.Hidden, { show: l11, appear: R3, initial: d14 } = Ee4(), [u10, U4] = (0, import_react96.useState)(l11 ? "visible" : "hidden"), K5 = be5(), { register: L3, unregister: w6 } = K5, j7 = (0, import_react96.useRef)(null);
  (0, import_react96.useEffect)(() => L3(e6), [L3, e6]), (0, import_react96.useEffect)(() => {
    if (i10 === j.Hidden && e6.current) {
      if (l11 && u10 !== "visible") {
        U4("visible");
        return;
      }
      return u(u10, { ["hidden"]: () => w6(e6), ["visible"]: () => L3(e6) });
    }
  }, [u10, e6, L3, w6, l11, i10]);
  let k2 = s2({ enter: x6(p10), enterFrom: x6(P6), enterTo: x6(h10), entered: x6(v5), leave: x6(T8), leaveFrom: x6(g5), leaveTo: x6(f13) }), O4 = Pe5({ beforeEnter: r10, afterEnter: o13, beforeLeave: N6, afterLeave: H9 }), G3 = l2();
  (0, import_react96.useEffect)(() => {
    if (G3 && u10 === "visible" && e6.current === null)
      throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [e6, u10, G3]);
  let B3 = d14 && !R3, ae4 = (() => !G3 || B3 || j7.current === l11 ? "idle" : l11 ? "enter" : "leave")(), D7 = c13(0), le4 = o4((C5) => u(C5, { enter: () => {
    D7.addFlag(d5.Opening), O4.current.beforeEnter();
  }, leave: () => {
    D7.addFlag(d5.Closing), O4.current.beforeLeave();
  }, idle: () => {
  } })), ue6 = o4((C5) => u(C5, { enter: () => {
    D7.removeFlag(d5.Opening), O4.current.afterEnter();
  }, leave: () => {
    D7.removeFlag(d5.Closing), O4.current.afterLeave();
  }, idle: () => {
  } })), V5 = re5(() => {
    U4("hidden"), w6(e6);
  }, K5);
  D6({ container: e6, classes: k2, direction: ae4, onStart: s2((C5) => {
    V5.onStart(e6, C5, le4);
  }), onStop: s2((C5) => {
    V5.onStop(e6, C5, ue6), C5 === "leave" && !M8(V5) && (U4("hidden"), w6(e6));
  }) }), (0, import_react96.useEffect)(() => {
    B3 && (i10 === j.Hidden ? j7.current = null : j7.current = l11);
  }, [l11, B3, u10]);
  let J6 = s18, Te4 = { ref: a15 };
  return R3 && l11 && d14 && (J6 = { ...J6, className: e2(s18.className, ...k2.current.enter, ...k2.current.enterFrom) }), import_react96.default.createElement(_4.Provider, { value: V5 }, import_react96.default.createElement(c7, { value: u(u10, { ["visible"]: d5.Open, ["hidden"]: d5.Closed }) | D7.flags }, X({ ourProps: Te4, theirProps: J6, defaultTag: Re3, features: oe4, visible: u10 === "visible", name: "Transition.Child" })));
}
function Ne5(t15, n7) {
  let { show: r10, appear: o13 = false, unmount: N6, ...H9 } = t15, p10 = (0, import_react96.useRef)(null), P6 = y2(p10, n7);
  l2();
  let h10 = C();
  if (r10 === void 0 && h10 !== null && (r10 = (h10 & d5.Open) === d5.Open), ![true, false].includes(r10))
    throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [v5, T8] = (0, import_react96.useState)(r10 ? "visible" : "hidden"), g5 = re5(() => {
    T8("hidden");
  }), [f13, s18] = (0, import_react96.useState)(true), e6 = (0, import_react96.useRef)([r10]);
  l(() => {
    f13 !== false && e6.current[e6.current.length - 1] !== r10 && (e6.current.push(r10), s18(false));
  }, [e6, r10]);
  let a15 = (0, import_react96.useMemo)(() => ({ show: r10, appear: o13, initial: f13 }), [r10, o13, f13]);
  (0, import_react96.useEffect)(() => {
    if (r10)
      T8("visible");
    else if (!M8(g5))
      T8("hidden");
    else {
      let d14 = p10.current;
      if (!d14)
        return;
      let u10 = d14.getBoundingClientRect();
      u10.x === 0 && u10.y === 0 && u10.width === 0 && u10.height === 0 && T8("hidden");
    }
  }, [r10, g5]);
  let i10 = { unmount: N6 }, l11 = o4(() => {
    var d14;
    f13 && s18(false), (d14 = t15.beforeEnter) == null || d14.call(t15);
  }), R3 = o4(() => {
    var d14;
    f13 && s18(false), (d14 = t15.beforeLeave) == null || d14.call(t15);
  });
  return import_react96.default.createElement(_4.Provider, { value: g5 }, import_react96.default.createElement(I6.Provider, { value: a15 }, X({ ourProps: { ...i10, as: import_react96.Fragment, children: import_react96.default.createElement(se4, { ref: P6, ...i10, ...H9, beforeEnter: l11, beforeLeave: R3 }) }, theirProps: {}, defaultTag: import_react96.Fragment, features: oe4, visible: v5 === "visible", name: "Transition" })));
}
function He5(t15, n7) {
  let r10 = (0, import_react96.useContext)(I6) !== null, o13 = C() !== null;
  return import_react96.default.createElement(import_react96.default.Fragment, null, !r10 && o13 ? import_react96.default.createElement(z5, { ref: n7, ...t15 }) : import_react96.default.createElement(se4, { ref: n7, ...t15 }));
}
var z5 = D2(Ne5);
var se4 = D2(ye5);
var De5 = D2(He5);
var $e5 = Object.assign(z5, { Child: De5, Root: z5 });

// node_modules/@graphiql/react/dist/index.mjs
var import_react_dom2 = __toESM(require_react_dom(), 1);
var cn = Object.defineProperty;
var s17 = (e6, t15) => cn(e6, "name", { value: t15, configurable: true });
function ce4(e6) {
  const t15 = (0, import_react97.createContext)(null);
  return t15.displayName = e6, t15;
}
s17(ce4, "createNullableContext");
function ue5(e6) {
  function t15(n7) {
    var l11;
    const r10 = (0, import_react97.useContext)(e6);
    if (r10 === null && (n7 != null && n7.nonNull))
      throw new Error(
        `Tried to use \`${((l11 = n7.caller) == null ? void 0 : l11.name) || t15.caller.name}\` without the necessary context. Make sure to render the \`${e6.displayName}Provider\` component higher up the tree.`
      );
    return r10;
  }
  return s17(t15, "useGivenContext"), Object.defineProperty(t15, "name", {
    value: `use${e6.displayName}`
  }), t15;
}
s17(ue5, "createContextHook");
var Ht = ce4("StorageContext");
function Fn(e6) {
  const t15 = (0, import_react97.useRef)(true), [n7, r10] = (0, import_react97.useState)(new StorageAPI(e6.storage));
  return (0, import_react97.useEffect)(() => {
    t15.current ? t15.current = false : r10(new StorageAPI(e6.storage));
  }, [e6.storage]), (0, import_jsx_runtime.jsx)(Ht.Provider, { value: n7, children: e6.children });
}
s17(Fn, "StorageContextProvider");
var de4 = ue5(Ht);
var Bn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z", stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("rect", { x: 6, y: 6, width: 2, height: 2, rx: 1, fill: "currentColor" })), "SvgArgument");
var Wn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 14 9", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", strokeWidth: 1.5 })), "SvgChevronDown");
var $n = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 7 10", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M6 1.04819L2 5.04819L6 9.04819", stroke: "currentColor", strokeWidth: 1.75 })), "SvgChevronLeft");
var _n = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 14 9", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M13 8L7 2L1 8", stroke: "currentColor", strokeWidth: 1.5 })), "SvgChevronUp");
var Zn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M1 1L12.9998 12.9997", stroke: "currentColor", strokeWidth: 1.5 }), a14.createElement("path", { d: "M13 1L1.00079 13.0003", stroke: "currentColor", strokeWidth: 1.5 })), "SvgClose");
var Gn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "-2 -2 22 22", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M11.25 14.2105V15.235C11.25 16.3479 10.3479 17.25 9.23501 17.25H2.76499C1.65214 17.25 0.75 16.3479 0.75 15.235L0.75 8.76499C0.75 7.65214 1.65214 6.75 2.76499 6.75L3.78947 6.75", stroke: "currentColor", strokeWidth: 1.5 }), a14.createElement("rect", { x: 6.75, y: 0.75, width: 10.5, height: 10.5, rx: 2.2069, stroke: "currentColor", strokeWidth: 1.5 })), "SvgCopy");
var Qn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z", stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("path", { d: "M5 9L9 5", stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("path", { d: "M5 5L9 9", stroke: "currentColor", strokeWidth: 1.2 })), "SvgDeprecatedArgument");
var jn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M4 8L8 4", stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("path", { d: "M4 4L8 8", stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.5 1.2H9C9.99411 1.2 10.8 2.00589 10.8 3V9C10.8 9.99411 9.99411 10.8 9 10.8H8.5V12H9C10.6569 12 12 10.6569 12 9V3C12 1.34315 10.6569 0 9 0H8.5V1.2ZM3.5 1.2V0H3C1.34315 0 0 1.34315 0 3V9C0 10.6569 1.34315 12 3 12H3.5V10.8H3C2.00589 10.8 1.2 9.99411 1.2 9V3C1.2 2.00589 2.00589 1.2 3 1.2H3.5Z", fill: "currentColor" })), "SvgDeprecatedEnumValue");
var zn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("rect", { x: 0.6, y: 0.6, width: 10.8, height: 10.8, rx: 3.4, stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("path", { d: "M4 8L8 4", stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("path", { d: "M4 4L8 8", stroke: "currentColor", strokeWidth: 1.2 })), "SvgDeprecatedField");
var Un = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0.5 12 12", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("rect", { x: 7, y: 5.5, width: 2, height: 2, rx: 1, transform: "rotate(90 7 5.5)", fill: "currentColor" }), a14.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M10.8 9L10.8 9.5C10.8 10.4941 9.99411 11.3 9 11.3L3 11.3C2.00589 11.3 1.2 10.4941 1.2 9.5L1.2 9L-3.71547e-07 9L-3.93402e-07 9.5C-4.65826e-07 11.1569 1.34314 12.5 3 12.5L9 12.5C10.6569 12.5 12 11.1569 12 9.5L12 9L10.8 9ZM10.8 4L12 4L12 3.5C12 1.84315 10.6569 0.5 9 0.5L3 0.5C1.34315 0.5 -5.87117e-08 1.84315 -1.31135e-07 3.5L-1.5299e-07 4L1.2 4L1.2 3.5C1.2 2.50589 2.00589 1.7 3 1.7L9 1.7C9.99411 1.7 10.8 2.50589 10.8 3.5L10.8 4Z", fill: "currentColor" })), "SvgDirective");
var Kn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H17.25C17.8023 0.75 18.25 1.19772 18.25 1.75V5.25", stroke: "currentColor", strokeWidth: 1.5 }), a14.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H18.25C18.8023 5.25 19.25 5.69771 19.25 6.25V22.25C19.25 22.8023 18.8023 23.25 18.25 23.25H3C1.75736 23.25 0.75 22.2426 0.75 21V3Z", stroke: "currentColor", strokeWidth: 1.5 }), a14.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M3 5.25C1.75736 5.25 0.75 4.24264 0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H3ZM13 11L6 11V12.5L13 12.5V11Z", fill: "currentColor" })), "SvgDocsFilled");
var Jn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H17.25M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H16.25C16.8023 0.75 17.25 1.19772 17.25 1.75V5.25M0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H17.25", stroke: "currentColor", strokeWidth: 1.5 }), a14.createElement("line", { x1: 13, y1: 11.75, x2: 6, y2: 11.75, stroke: "currentColor", strokeWidth: 1.5 })), "SvgDocs");
var Yn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("rect", { x: 5, y: 5, width: 2, height: 2, rx: 1, fill: "currentColor" }), a14.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.5 1.2H9C9.99411 1.2 10.8 2.00589 10.8 3V9C10.8 9.99411 9.99411 10.8 9 10.8H8.5V12H9C10.6569 12 12 10.6569 12 9V3C12 1.34315 10.6569 0 9 0H8.5V1.2ZM3.5 1.2V0H3C1.34315 0 0 1.34315 0 3V9C0 10.6569 1.34315 12 3 12H3.5V10.8H3C2.00589 10.8 1.2 9.99411 1.2 9V3C1.2 2.00589 2.00589 1.2 3 1.2H3.5Z", fill: "currentColor" })), "SvgEnumValue");
var Xn = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 12 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("rect", { x: 0.6, y: 1.1, width: 10.8, height: 10.8, rx: 2.4, stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("rect", { x: 5, y: 5.5, width: 2, height: 2, rx: 1, fill: "currentColor" })), "SvgField");
var er = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 24 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M1.59375 9.52344L4.87259 12.9944L8.07872 9.41249", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "square" }), a14.createElement("path", { d: "M13.75 5.25V10.75H18.75", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "square" }), a14.createElement("path", { d: "M4.95427 11.9332C4.55457 10.0629 4.74441 8.11477 5.49765 6.35686C6.25089 4.59894 7.5305 3.11772 9.16034 2.11709C10.7902 1.11647 12.6901 0.645626 14.5986 0.769388C16.5071 0.893151 18.3303 1.60543 19.8172 2.80818C21.3042 4.01093 22.3818 5.64501 22.9017 7.48548C23.4216 9.32595 23.3582 11.2823 22.7203 13.0853C22.0824 14.8883 20.9013 16.4492 19.3396 17.5532C17.778 18.6572 15.9125 19.25 14 19.25", stroke: "currentColor", strokeWidth: 1.5 })), "SvgHistory");
var tr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("circle", { cx: 6, cy: 6, r: 5.4, stroke: "currentColor", strokeWidth: 1.2, strokeDasharray: "4.241025 4.241025", transform: "rotate(22.5)", "transform-origin": "center" }), a14.createElement("circle", { cx: 6, cy: 6, r: 1, fill: "currentColor" })), "SvgImplements");
var nr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 19 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M1.5 14.5653C1.5 15.211 1.75652 15.8303 2.21314 16.2869C2.66975 16.7435 3.28905 17 3.9348 17C4.58054 17 5.19984 16.7435 5.65646 16.2869C6.11307 15.8303 6.36959 15.211 6.36959 14.5653V12.1305H3.9348C3.28905 12.1305 2.66975 12.387 2.21314 12.8437C1.75652 13.3003 1.5 13.9195 1.5 14.5653Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), a14.createElement("path", { d: "M3.9348 1.00063C3.28905 1.00063 2.66975 1.25715 2.21314 1.71375C1.75652 2.17035 1.5 2.78964 1.5 3.43537C1.5 4.0811 1.75652 4.70038 2.21314 5.15698C2.66975 5.61358 3.28905 5.8701 3.9348 5.8701H6.36959V3.43537C6.36959 2.78964 6.11307 2.17035 5.65646 1.71375C5.19984 1.25715 4.58054 1.00063 3.9348 1.00063Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), a14.createElement("path", { d: "M15.0652 12.1305H12.6304V14.5653C12.6304 15.0468 12.7732 15.5175 13.0407 15.9179C13.3083 16.3183 13.6885 16.6304 14.1334 16.8147C14.5783 16.9989 15.0679 17.0472 15.5402 16.9532C16.0125 16.8593 16.4464 16.6274 16.7869 16.2869C17.1274 15.9464 17.3593 15.5126 17.4532 15.0403C17.5472 14.568 17.4989 14.0784 17.3147 13.6335C17.1304 13.1886 16.8183 12.8084 16.4179 12.5409C16.0175 12.2733 15.5468 12.1305 15.0652 12.1305Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), a14.createElement("path", { d: "M12.6318 5.86775H6.36955V12.1285H12.6318V5.86775Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), a14.createElement("path", { d: "M17.5 3.43473C17.5 2.789 17.2435 2.16972 16.7869 1.71312C16.3303 1.25652 15.711 1 15.0652 1C14.4195 1 13.8002 1.25652 13.3435 1.71312C12.8869 2.16972 12.6304 2.789 12.6304 3.43473V5.86946H15.0652C15.711 5.86946 16.3303 5.61295 16.7869 5.15635C17.2435 4.69975 17.5 4.08046 17.5 3.43473Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" })), "SvgKeyboardShortcut");
var rr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("circle", { cx: 5, cy: 5, r: 4.35, stroke: "currentColor", strokeWidth: 1.3 }), a14.createElement("line", { x1: 8.45962, y1: 8.54038, x2: 11.7525, y2: 11.8333, stroke: "currentColor", strokeWidth: 1.3 })), "SvgMagnifyingGlass");
var or = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "-2 -2 22 22", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M17.2492 6V2.9569C17.2492 1.73806 16.2611 0.75 15.0423 0.75L2.9569 0.75C1.73806 0.75 0.75 1.73806 0.75 2.9569L0.75 6", stroke: "currentColor", strokeWidth: 1.5 }), a14.createElement("path", { d: "M0.749873 12V15.0431C0.749873 16.2619 1.73794 17.25 2.95677 17.25H15.0421C16.261 17.25 17.249 16.2619 17.249 15.0431V12", stroke: "currentColor", strokeWidth: 1.5 }), a14.createElement("path", { d: "M6 4.5L9 7.5L12 4.5", stroke: "currentColor", strokeWidth: 1.5 }), a14.createElement("path", { d: "M12 13.5L9 10.5L6 13.5", stroke: "currentColor", strokeWidth: 1.5 })), "SvgMerge");
var lr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M0.75 13.25L0.0554307 12.967C-0.0593528 13.2488 0.00743073 13.5719 0.224488 13.7851C0.441545 13.9983 0.765869 14.0592 1.04549 13.9393L0.75 13.25ZM12.8214 1.83253L12.2911 2.36286L12.2911 2.36286L12.8214 1.83253ZM12.8214 3.90194L13.3517 4.43227L12.8214 3.90194ZM10.0981 1.17859L9.56773 0.648259L10.0981 1.17859ZM12.1675 1.17859L12.6978 0.648258L12.6978 0.648257L12.1675 1.17859ZM2.58049 8.75697L3.27506 9.03994L2.58049 8.75697ZM2.70066 8.57599L3.23099 9.10632L2.70066 8.57599ZM5.2479 11.4195L4.95355 10.7297L5.2479 11.4195ZM5.42036 11.303L4.89003 10.7727L5.42036 11.303ZM4.95355 10.7297C4.08882 11.0987 3.41842 11.362 2.73535 11.6308C2.05146 11.9 1.35588 12.1743 0.454511 12.5607L1.04549 13.9393C1.92476 13.5624 2.60256 13.2951 3.28469 13.0266C3.96762 12.7578 4.65585 12.4876 5.54225 12.1093L4.95355 10.7297ZM1.44457 13.533L3.27506 9.03994L1.88592 8.474L0.0554307 12.967L1.44457 13.533ZM3.23099 9.10632L10.6284 1.70892L9.56773 0.648259L2.17033 8.04566L3.23099 9.10632ZM11.6371 1.70892L12.2911 2.36286L13.3517 1.3022L12.6978 0.648258L11.6371 1.70892ZM12.2911 3.37161L4.89003 10.7727L5.95069 11.8333L13.3517 4.43227L12.2911 3.37161ZM12.2911 2.36286C12.5696 2.64142 12.5696 3.09305 12.2911 3.37161L13.3517 4.43227C14.2161 3.56792 14.2161 2.16654 13.3517 1.3022L12.2911 2.36286ZM10.6284 1.70892C10.9069 1.43036 11.3586 1.43036 11.6371 1.70892L12.6978 0.648257C11.8335 -0.216088 10.4321 -0.216084 9.56773 0.648259L10.6284 1.70892ZM3.27506 9.03994C3.26494 9.06479 3.24996 9.08735 3.23099 9.10632L2.17033 8.04566C2.04793 8.16806 1.95123 8.31369 1.88592 8.474L3.27506 9.03994ZM5.54225 12.1093C5.69431 12.0444 5.83339 11.9506 5.95069 11.8333L4.89003 10.7727C4.90863 10.7541 4.92988 10.7398 4.95355 10.7297L5.54225 12.1093Z", fill: "currentColor" }), a14.createElement("path", { d: "M11.5 4.5L9.5 2.5", stroke: "currentColor", strokeWidth: 1.4026, strokeLinecap: "round", strokeLinejoin: "round" }), a14.createElement("path", { d: "M5.5 10.5L3.5 8.5", stroke: "currentColor", strokeWidth: 1.4026, strokeLinecap: "round", strokeLinejoin: "round" })), "SvgPen");
var ir = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 16 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M1.32226e-07 1.6609C7.22332e-08 0.907329 0.801887 0.424528 1.46789 0.777117L15.3306 8.11621C16.0401 8.49182 16.0401 9.50818 15.3306 9.88379L1.46789 17.2229C0.801886 17.5755 1.36076e-06 17.0927 1.30077e-06 16.3391L1.32226e-07 1.6609Z", fill: "currentColor" })), "SvgPlay");
var sr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 10 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M4.25 9.25V13.5H5.75V9.25L10 9.25V7.75L5.75 7.75V3.5H4.25V7.75L0 7.75V9.25L4.25 9.25Z", fill: "currentColor" })), "SvgPlus");
var ar = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { width: 25, height: 25, viewBox: "0 0 25 25", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M10.2852 24.0745L13.7139 18.0742", stroke: "currentColor", strokeWidth: 1.5625 }), a14.createElement("path", { d: "M14.5742 24.0749L17.1457 19.7891", stroke: "currentColor", strokeWidth: 1.5625 }), a14.createElement("path", { d: "M19.4868 24.0735L20.7229 21.7523C21.3259 20.6143 21.5457 19.3122 21.3496 18.0394C21.1535 16.7666 20.5519 15.591 19.6342 14.6874L23.7984 6.87853C24.0123 6.47728 24.0581 6.00748 23.9256 5.57249C23.7932 5.1375 23.4933 4.77294 23.0921 4.55901C22.6908 4.34509 22.221 4.29932 21.7861 4.43178C21.3511 4.56424 20.9865 4.86408 20.7726 5.26533L16.6084 13.0742C15.3474 12.8142 14.0362 12.9683 12.8699 13.5135C11.7035 14.0586 10.7443 14.9658 10.135 16.1L6 24.0735", stroke: "currentColor", strokeWidth: 1.5625 }), a14.createElement("path", { d: "M4 15L5 13L7 12L5 11L4 9L3 11L1 12L3 13L4 15Z", stroke: "currentColor", strokeWidth: 1.5625, strokeLinejoin: "round" }), a14.createElement("path", { d: "M11.5 8L12.6662 5.6662L15 4.5L12.6662 3.3338L11.5 1L10.3338 3.3338L8 4.5L10.3338 5.6662L11.5 8Z", stroke: "currentColor", strokeWidth: 1.5625, strokeLinejoin: "round" })), "SvgPrettify");
var cr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M4.75 9.25H1.25V12.75", stroke: "currentColor", strokeWidth: 1, strokeLinecap: "square" }), a14.createElement("path", { d: "M11.25 6.75H14.75V3.25", stroke: "currentColor", strokeWidth: 1, strokeLinecap: "square" }), a14.createElement("path", { d: "M14.1036 6.65539C13.8 5.27698 13.0387 4.04193 11.9437 3.15131C10.8487 2.26069 9.48447 1.76694 8.0731 1.75043C6.66173 1.73392 5.28633 2.19563 4.17079 3.0604C3.05526 3.92516 2.26529 5.14206 1.92947 6.513", stroke: "currentColor", strokeWidth: 1 }), a14.createElement("path", { d: "M1.89635 9.34461C2.20001 10.723 2.96131 11.9581 4.05631 12.8487C5.15131 13.7393 6.51553 14.2331 7.9269 14.2496C9.33827 14.2661 10.7137 13.8044 11.8292 12.9396C12.9447 12.0748 13.7347 10.8579 14.0705 9.487", stroke: "currentColor", strokeWidth: 1 })), "SvgReload");
var ur = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("rect", { x: 0.6, y: 0.6, width: 11.8, height: 11.8, rx: 5.9, stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("path", { d: "M4.25 7.5C4.25 6 5.75 5 6.5 6.5C7.25 8 8.75 7 8.75 5.5", stroke: "currentColor", strokeWidth: 1.2 })), "SvgRootType");
var dr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 21 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M9.29186 1.92702C9.06924 1.82745 8.87014 1.68202 8.70757 1.50024L7.86631 0.574931C7.62496 0.309957 7.30773 0.12592 6.95791 0.0479385C6.60809 -0.0300431 6.24274 0.00182978 5.91171 0.139208C5.58068 0.276585 5.3001 0.512774 5.10828 0.815537C4.91645 1.1183 4.82272 1.47288 4.83989 1.83089L4.90388 3.08019C4.91612 3.32348 4.87721 3.56662 4.78968 3.79394C4.70215 4.02126 4.56794 4.2277 4.39571 4.39994C4.22347 4.57219 4.01704 4.7064 3.78974 4.79394C3.56243 4.88147 3.3193 4.92038 3.07603 4.90814L1.8308 4.84414C1.47162 4.82563 1.11553 4.91881 0.811445 5.11086C0.507359 5.30292 0.270203 5.58443 0.132561 5.91671C-0.00508149 6.249 -0.0364554 6.61576 0.0427496 6.9666C0.121955 7.31744 0.307852 7.63514 0.5749 7.87606L1.50016 8.71204C1.68193 8.87461 1.82735 9.07373 1.92692 9.29636C2.02648 9.51898 2.07794 9.76012 2.07794 10.004C2.07794 10.2479 2.02648 10.489 1.92692 10.7116C1.82735 10.9343 1.68193 11.1334 1.50016 11.296L0.5749 12.1319C0.309856 12.3729 0.125575 12.6898 0.0471809 13.0393C-0.0312128 13.3888 9.64098e-05 13.754 0.13684 14.0851C0.273583 14.4162 0.509106 14.6971 0.811296 14.8894C1.11349 15.0817 1.46764 15.1762 1.82546 15.1599L3.0707 15.0959C3.31397 15.0836 3.5571 15.1225 3.7844 15.2101C4.01171 15.2976 4.21814 15.4318 4.39037 15.6041C4.56261 15.7763 4.69682 15.9827 4.78435 16.2101C4.87188 16.4374 4.91078 16.6805 4.89855 16.9238L4.83455 18.1691C4.81605 18.5283 4.90921 18.8844 5.10126 19.1885C5.2933 19.4926 5.5748 19.7298 5.90707 19.8674C6.23934 20.0051 6.60608 20.0365 6.9569 19.9572C7.30772 19.878 7.6254 19.6921 7.86631 19.4251L8.7129 18.4998C8.87547 18.318 9.07458 18.1725 9.29719 18.073C9.51981 17.9734 9.76093 17.9219 10.0048 17.9219C10.2487 17.9219 10.4898 17.9734 10.7124 18.073C10.935 18.1725 11.1341 18.318 11.2967 18.4998L12.1326 19.4251C12.3735 19.6921 12.6912 19.878 13.042 19.9572C13.3929 20.0365 13.7596 20.0051 14.0919 19.8674C14.4241 19.7298 14.7056 19.4926 14.8977 19.1885C15.0897 18.8844 15.1829 18.5283 15.1644 18.1691L15.1004 16.9238C15.0882 16.6805 15.1271 16.4374 15.2146 16.2101C15.3021 15.9827 15.4363 15.7763 15.6086 15.6041C15.7808 15.4318 15.9872 15.2976 16.2145 15.2101C16.4418 15.1225 16.685 15.0836 16.9282 15.0959L18.1735 15.1599C18.5326 15.1784 18.8887 15.0852 19.1928 14.8931C19.4969 14.7011 19.7341 14.4196 19.8717 14.0873C20.0093 13.755 20.0407 13.3882 19.9615 13.0374C19.8823 12.6866 19.6964 12.3689 19.4294 12.1279L18.5041 11.292C18.3223 11.1294 18.1769 10.9303 18.0774 10.7076C17.9778 10.485 17.9263 10.2439 17.9263 10C17.9263 9.75612 17.9778 9.51499 18.0774 9.29236C18.1769 9.06973 18.3223 8.87062 18.5041 8.70804L19.4294 7.87206C19.6964 7.63114 19.8823 7.31344 19.9615 6.9626C20.0407 6.61176 20.0093 6.245 19.8717 5.91271C19.7341 5.58043 19.4969 5.29892 19.1928 5.10686C18.8887 4.91481 18.5326 4.82163 18.1735 4.84014L16.9282 4.90414C16.685 4.91638 16.4418 4.87747 16.2145 4.78994C15.9872 4.7024 15.7808 4.56818 15.6086 4.39594C15.4363 4.2237 15.3021 4.01726 15.2146 3.78994C15.1271 3.56262 15.0882 3.31948 15.1004 3.07619L15.1644 1.83089C15.1829 1.4717 15.0897 1.11559 14.8977 0.811487C14.7056 0.507385 14.4241 0.270217 14.0919 0.132568C13.7596 -0.00508182 13.3929 -0.0364573 13.042 0.0427519C12.6912 0.121961 12.3735 0.307869 12.1326 0.574931L11.2914 1.50024C11.1288 1.68202 10.9297 1.82745 10.7071 1.92702C10.4845 2.02659 10.2433 2.07805 9.99947 2.07805C9.7556 2.07805 9.51448 2.02659 9.29186 1.92702ZM14.3745 10C14.3745 12.4162 12.4159 14.375 9.99977 14.375C7.58365 14.375 5.625 12.4162 5.625 10C5.625 7.58375 7.58365 5.625 9.99977 5.625C12.4159 5.625 14.3745 7.58375 14.3745 10Z", fill: "currentColor" })), "SvgSettings");
var hr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M6.5782 1.07092C6.71096 0.643026 7.28904 0.643027 7.4218 1.07092L8.59318 4.84622C8.65255 5.03758 8.82284 5.16714 9.01498 5.16714L12.8056 5.16714C13.2353 5.16714 13.4139 5.74287 13.0663 6.00732L9.99962 8.34058C9.84418 8.45885 9.77913 8.66848 9.83851 8.85984L11.0099 12.6351C11.1426 13.063 10.675 13.4189 10.3274 13.1544L7.26069 10.8211C7.10524 10.7029 6.89476 10.7029 6.73931 10.8211L3.6726 13.1544C3.32502 13.4189 2.85735 13.063 2.99012 12.6351L4.16149 8.85984C4.22087 8.66848 4.15582 8.45885 4.00038 8.34058L0.933671 6.00732C0.586087 5.74287 0.764722 5.16714 1.19436 5.16714L4.98502 5.16714C5.17716 5.16714 5.34745 5.03758 5.40682 4.84622L6.5782 1.07092Z", fill: "currentColor", stroke: "currentColor" })), "SvgStarFilled");
var mr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("path", { d: "M6.5782 1.07092C6.71096 0.643026 7.28904 0.643027 7.4218 1.07092L8.59318 4.84622C8.65255 5.03758 8.82284 5.16714 9.01498 5.16714L12.8056 5.16714C13.2353 5.16714 13.4139 5.74287 13.0663 6.00732L9.99962 8.34058C9.84418 8.45885 9.77913 8.66848 9.83851 8.85984L11.0099 12.6351C11.1426 13.063 10.675 13.4189 10.3274 13.1544L7.26069 10.8211C7.10524 10.7029 6.89476 10.7029 6.73931 10.8211L3.6726 13.1544C3.32502 13.4189 2.85735 13.063 2.99012 12.6351L4.16149 8.85984C4.22087 8.66848 4.15582 8.45885 4.00038 8.34058L0.933671 6.00732C0.586087 5.74287 0.764722 5.16714 1.19436 5.16714L4.98502 5.16714C5.17716 5.16714 5.34745 5.03758 5.40682 4.84622L6.5782 1.07092Z", stroke: "currentColor", strokeWidth: 1.5 })), "SvgStar");
var pr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("rect", { width: 16, height: 16, rx: 2, fill: "currentColor" })), "SvgStop");
var fr = s17(({
  title: e6,
  titleId: t15,
  ...n7
}) => a14.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t15, ...n7 }, e6 ? a14.createElement("title", { id: t15 }, e6) : null, a14.createElement("rect", { x: 0.6, y: 0.6, width: 11.8, height: 11.8, rx: 5.9, stroke: "currentColor", strokeWidth: 1.2 }), a14.createElement("rect", { x: 5.5, y: 5.5, width: 2, height: 2, rx: 1, fill: "currentColor" })), "SvgType");
var gr = q6(Bn);
var Uo = q6(Wn);
var Cr = q6($n);
var Ko = q6(_n);
var st = q6(Zn);
var Jo = q6(Gn);
var yr = q6(Qn);
var vr = q6(jn);
var br = q6(zn);
var wr = q6(Un);
var xr = q6(Kn, "filled docs icon");
var Er = q6(Jn);
var Lr = q6(Yn);
var Sr = q6(Xn);
var Nr = q6(er);
var kr = q6(tr);
var Yo = q6(nr);
var Tr = q6(rr);
var Xo = q6(or);
var Mr = q6(lr);
var Vr = q6(ir);
var el = q6(sr);
var tl = q6(ar);
var nl = q6(cr);
var Rr = q6(ur);
var rl = q6(dr);
var Hr = q6(hr, "filled star icon");
var Ar = q6(mr);
var Pr = q6(pr);
var ke4 = q6(fr);
function q6(e6, t15 = e6.name.replace("Svg", "").replaceAll(/([A-Z])/g, " $1").trimStart().toLowerCase() + " icon") {
  return e6.defaultProps = { title: t15 }, e6;
}
s17(q6, "generateIcon");
var X6 = (0, import_react97.forwardRef)((e6, t15) => (0, import_jsx_runtime.jsx)(
  "button",
  {
    ...e6,
    ref: t15,
    className: clsx("graphiql-un-styled", e6.className)
  }
));
X6.displayName = "UnStyledButton";
var Fe3 = (0, import_react97.forwardRef)((e6, t15) => (0, import_jsx_runtime.jsx)(
  "button",
  {
    ...e6,
    ref: t15,
    className: clsx(
      "graphiql-button",
      {
        success: "graphiql-button-success",
        error: "graphiql-button-error"
      }[e6.state],
      e6.className
    )
  }
));
Fe3.displayName = "Button";
var qr = (0, import_react97.forwardRef)((e6, t15) => (0, import_jsx_runtime.jsx)(
  "div",
  {
    ...e6,
    ref: t15,
    className: clsx("graphiql-button-group", e6.className)
  }
));
qr.displayName = "ButtonGroup";
var Le3 = s17((e6, t15) => Object.entries(t15).reduce((n7, [r10, l11]) => (n7[r10] = l11, n7), e6), "createComponentGroup");
var At = (0, import_react97.forwardRef)((e6, t15) => (0, import_jsx_runtime.jsx)($5d3850c4d0b4e6c7$export$f39c2d165cd861fe, { asChild: true, children: (0, import_jsx_runtime.jsxs)(
  X6,
  {
    ...e6,
    ref: t15,
    type: "button",
    className: clsx("graphiql-dialog-close", e6.className),
    children: [
      (0, import_jsx_runtime.jsx)($ea1ef594cf570d83$export$be92b6f5f03c0fe9, { children: "Close dialog" }),
      (0, import_jsx_runtime.jsx)(st, {})
    ]
  }
) }));
At.displayName = "Dialog.Close";
function Dr({
  children: e6,
  ...t15
}) {
  return (0, import_jsx_runtime.jsx)($5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9, { ...t15, children: (0, import_jsx_runtime.jsxs)($5d3850c4d0b4e6c7$export$602eac185826482c, { children: [
    (0, import_jsx_runtime.jsx)($5d3850c4d0b4e6c7$export$c6fdb837b070b4ff, { className: "graphiql-dialog-overlay" }),
    (0, import_jsx_runtime.jsx)($5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2, { className: "graphiql-dialog", children: e6 })
  ] }) });
}
s17(Dr, "DialogRoot");
var ol = Le3(Dr, {
  Close: At,
  Title: $5d3850c4d0b4e6c7$export$f99233281efd08a0,
  Trigger: $5d3850c4d0b4e6c7$export$41fb9f06171c75f4,
  Description: $5d3850c4d0b4e6c7$export$393edc798c47379d
});
var Pt = (0, import_react97.forwardRef)(
  (e6, t15) => (0, import_jsx_runtime.jsx)($d08ef79370b62062$export$41fb9f06171c75f4, { asChild: true, children: (0, import_jsx_runtime.jsx)(
    "button",
    {
      ...e6,
      ref: t15,
      className: clsx("graphiql-un-styled", e6.className)
    }
  ) })
);
Pt.displayName = "DropdownMenuButton";
function Ir({
  children: e6,
  align: t15 = "start",
  sideOffset: n7 = 5,
  className: r10,
  ...l11
}) {
  return (0, import_jsx_runtime.jsx)($d08ef79370b62062$export$602eac185826482c, { children: (0, import_jsx_runtime.jsx)(
    $d08ef79370b62062$export$7c6e2c02157bb7d2,
    {
      align: t15,
      sideOffset: n7,
      className: clsx("graphiql-dropdown-content", r10),
      ...l11,
      children: e6
    }
  ) });
}
s17(Ir, "Content");
var Or = s17(({ className: e6, children: t15, ...n7 }) => (0, import_jsx_runtime.jsx)($d08ef79370b62062$export$6d08773d2e66f8f2, { className: clsx("graphiql-dropdown-item", e6), ...n7, children: t15 }), "Item");
var le3 = Le3($d08ef79370b62062$export$be92b6f5f03c0fe9, {
  Button: Pt,
  Item: Or,
  Content: Ir
});
var Ae3 = new import_markdown_it.default({
  breaks: true,
  linkify: true
});
var ne5 = (0, import_react97.forwardRef)(({ children: e6, onlyShowFirstChild: t15, type: n7, ...r10 }, l11) => (0, import_jsx_runtime.jsx)(
  "div",
  {
    ...r10,
    ref: l11,
    className: clsx(
      `graphiql-markdown-${n7}`,
      t15 && "graphiql-markdown-preview",
      r10.className
    ),
    dangerouslySetInnerHTML: { __html: Ae3.render(e6) }
  }
));
ne5.displayName = "MarkdownContent";
var qt = (0, import_react97.forwardRef)(
  (e6, t15) => (0, import_jsx_runtime.jsx)(
    "div",
    {
      ...e6,
      ref: t15,
      className: clsx("graphiql-spinner", e6.className)
    }
  )
);
qt.displayName = "Spinner";
function Fr({
  children: e6,
  align: t15 = "start",
  side: n7 = "bottom",
  sideOffset: r10 = 5,
  label: l11
}) {
  return (0, import_jsx_runtime.jsxs)($a093c7e1ec25a057$export$be92b6f5f03c0fe9, { children: [
    (0, import_jsx_runtime.jsx)($a093c7e1ec25a057$export$41fb9f06171c75f4, { asChild: true, children: e6 }),
    (0, import_jsx_runtime.jsx)($a093c7e1ec25a057$export$602eac185826482c, { children: (0, import_jsx_runtime.jsx)(
      $a093c7e1ec25a057$export$7c6e2c02157bb7d2,
      {
        className: "graphiql-tooltip",
        align: t15,
        side: n7,
        sideOffset: r10,
        children: l11
      }
    ) })
  ] });
}
s17(Fr, "TooltipRoot");
var ae3 = Le3(Fr, {
  Provider: $a093c7e1ec25a057$export$2881499e37b75b9a
});
var Dt = (0, import_react97.forwardRef)(
  ({ isActive: e6, value: t15, children: n7, className: r10, ...l11 }, c16) => (0, import_jsx_runtime.jsx)(
    Reorder.Item,
    {
      ...l11,
      ref: c16,
      value: t15,
      "aria-selected": e6 ? "true" : void 0,
      role: "tab",
      className: clsx(
        "graphiql-tab",
        e6 && "graphiql-tab-active",
        r10
      ),
      children: n7
    }
  )
);
Dt.displayName = "Tab";
var It = (0, import_react97.forwardRef)((e6, t15) => (0, import_jsx_runtime.jsx)(
  X6,
  {
    ...e6,
    ref: t15,
    type: "button",
    className: clsx("graphiql-tab-button", e6.className),
    children: e6.children
  }
));
It.displayName = "Tab.Button";
var Ot = (0, import_react97.forwardRef)(
  (e6, t15) => (0, import_jsx_runtime.jsx)(ae3, { label: "Close Tab", children: (0, import_jsx_runtime.jsx)(
    X6,
    {
      "aria-label": "Close Tab",
      ...e6,
      ref: t15,
      type: "button",
      className: clsx("graphiql-tab-close", e6.className),
      children: (0, import_jsx_runtime.jsx)(st, {})
    }
  ) })
);
Ot.displayName = "Tab.Close";
var ll = Le3(Dt, {
  Button: It,
  Close: Ot
});
var Br = (0, import_react97.forwardRef)(
  ({ values: e6, onReorder: t15, children: n7, className: r10, ...l11 }, c16) => (0, import_jsx_runtime.jsx)(
    Reorder.Group,
    {
      ...l11,
      ref: c16,
      values: e6,
      onReorder: t15,
      axis: "x",
      role: "tablist",
      className: clsx("graphiql-tabs", r10),
      children: n7
    }
  )
);
Br.displayName = "Tabs";
var Ft = ce4("HistoryContext");
function Wr(e6) {
  var p10;
  const t15 = de4(), n7 = (0, import_react97.useRef)(
    new HistoryStore(
      // Fall back to a noop storage when the StorageContext is empty
      t15 || new StorageAPI(null),
      e6.maxHistoryLength || $r
    )
  ), [r10, l11] = (0, import_react97.useState)(((p10 = n7.current) == null ? void 0 : p10.queries) || []), c16 = (0, import_react97.useCallback)(
    ({ query: m12, variables: y9, headers: u10, operationName: g5 }) => {
      var C5;
      (C5 = n7.current) == null || C5.updateHistory(
        m12,
        y9,
        u10,
        g5
      ), l11(n7.current.queries);
    },
    []
  ), i10 = (0, import_react97.useCallback)(
    ({ query: m12, variables: y9, headers: u10, operationName: g5, label: C5, favorite: d14 }) => {
      n7.current.editLabel(
        m12,
        y9,
        u10,
        g5,
        C5,
        d14
      ), l11(n7.current.queries);
    },
    []
  ), h10 = (0, import_react97.useCallback)(
    ({ query: m12, variables: y9, headers: u10, operationName: g5, label: C5, favorite: d14 }) => {
      n7.current.toggleFavorite(
        m12,
        y9,
        u10,
        g5,
        C5,
        d14
      ), l11(n7.current.queries);
    },
    []
  ), f13 = (0, import_react97.useMemo)(
    () => ({ addToHistory: c16, editLabel: i10, items: r10, toggleFavorite: h10 }),
    [c16, i10, r10, h10]
  );
  return (0, import_jsx_runtime.jsx)(Ft.Provider, { value: f13, children: e6.children });
}
s17(Wr, "HistoryContextProvider");
var Be3 = ue5(Ft);
var $r = 20;
function _r() {
  const { items: e6 } = Be3({ nonNull: true }), t15 = e6.slice().reverse();
  return (0, import_jsx_runtime.jsxs)("section", { "aria-label": "History", className: "graphiql-history", children: [
    (0, import_jsx_runtime.jsx)("div", { className: "graphiql-history-header", children: "History" }),
    (0, import_jsx_runtime.jsx)("ul", { className: "graphiql-history-items", children: t15.map((n7, r10) => (0, import_jsx_runtime.jsxs)(import_react97.Fragment, { children: [
      (0, import_jsx_runtime.jsx)(Xe5, { item: n7 }),
      n7.favorite && t15[r10 + 1] && !t15[r10 + 1].favorite ? (0, import_jsx_runtime.jsx)("div", { className: "graphiql-history-item-spacer" }) : null
    ] }, `${r10}:${n7.label || n7.query}`)) })
  ] });
}
s17(_r, "History");
function Xe5(e6) {
  const { editLabel: t15, toggleFavorite: n7 } = Be3({
    nonNull: true,
    caller: Xe5
  }), { headerEditor: r10, queryEditor: l11, variableEditor: c16 } = j6({
    nonNull: true,
    caller: Xe5
  }), i10 = (0, import_react97.useRef)(null), h10 = (0, import_react97.useRef)(null), [f13, p10] = (0, import_react97.useState)(false);
  (0, import_react97.useEffect)(() => {
    var b7;
    f13 && ((b7 = i10.current) == null || b7.focus());
  }, [f13]);
  const m12 = e6.item.label || e6.item.operationName || Zr(e6.item.query), y9 = (0, import_react97.useCallback)(() => {
    var b7;
    p10(false), t15({ ...e6.item, label: (b7 = i10.current) == null ? void 0 : b7.value });
  }, [t15, e6.item]), u10 = (0, import_react97.useCallback)(() => {
    p10(false);
  }, []), g5 = (0, import_react97.useCallback)(
    (b7) => {
      b7.stopPropagation(), p10(true);
    },
    []
  ), C5 = (0, import_react97.useCallback)(() => {
    const { query: b7, variables: N6, headers: L3 } = e6.item;
    l11 == null || l11.setValue(b7 ?? ""), c16 == null || c16.setValue(N6 ?? ""), r10 == null || r10.setValue(L3 ?? "");
  }, [e6.item, l11, c16, r10]), d14 = (0, import_react97.useCallback)(
    (b7) => {
      b7.stopPropagation(), n7(e6.item);
    },
    [e6.item, n7]
  );
  return (0, import_jsx_runtime.jsx)("li", { className: clsx("graphiql-history-item", f13 && "editable"), children: f13 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)(
      "input",
      {
        type: "text",
        defaultValue: e6.item.label,
        ref: i10,
        onKeyDown: (b7) => {
          b7.key === "Esc" ? p10(false) : b7.key === "Enter" && (p10(false), t15({ ...e6.item, label: b7.currentTarget.value }));
        },
        placeholder: "Type a label"
      }
    ),
    (0, import_jsx_runtime.jsx)(X6, { type: "button", ref: h10, onClick: y9, children: "Save" }),
    (0, import_jsx_runtime.jsx)(X6, { type: "button", ref: h10, onClick: u10, children: (0, import_jsx_runtime.jsx)(st, {}) })
  ] }) : (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)(
      X6,
      {
        type: "button",
        className: "graphiql-history-item-label",
        onClick: C5,
        children: m12
      }
    ),
    (0, import_jsx_runtime.jsx)(ae3, { label: "Edit label", children: (0, import_jsx_runtime.jsx)(
      X6,
      {
        type: "button",
        className: "graphiql-history-item-action",
        onClick: g5,
        "aria-label": "Edit label",
        children: (0, import_jsx_runtime.jsx)(Mr, { "aria-hidden": "true" })
      }
    ) }),
    (0, import_jsx_runtime.jsx)(
      ae3,
      {
        label: e6.item.favorite ? "Remove favorite" : "Add favorite",
        children: (0, import_jsx_runtime.jsx)(
          X6,
          {
            type: "button",
            className: "graphiql-history-item-action",
            onClick: d14,
            "aria-label": e6.item.favorite ? "Remove favorite" : "Add favorite",
            children: e6.item.favorite ? (0, import_jsx_runtime.jsx)(Hr, { "aria-hidden": "true" }) : (0, import_jsx_runtime.jsx)(Ar, { "aria-hidden": "true" })
          }
        )
      }
    )
  ] }) });
}
s17(Xe5, "HistoryItem");
function Zr(e6) {
  return e6 == null ? void 0 : e6.split(`
`).map((t15) => t15.replace(/#(.*)/, "")).join(" ").replaceAll("{", " { ").replaceAll("}", " } ").replaceAll(/[\s]{2,}/g, " ");
}
s17(Zr, "formatQuery");
var Bt = ce4("ExecutionContext");
function et3({
  fetcher: e6,
  getDefaultFieldNames: t15,
  children: n7,
  operationName: r10
}) {
  if (!e6)
    throw new TypeError(
      "The `ExecutionContextProvider` component requires a `fetcher` function to be passed as prop."
    );
  const {
    externalFragments: l11,
    headerEditor: c16,
    queryEditor: i10,
    responseEditor: h10,
    variableEditor: f13,
    updateActiveTabValues: p10
  } = j6({ nonNull: true, caller: et3 }), m12 = Be3(), y9 = ot2({
    getDefaultFieldNames: t15,
    caller: et3
  }), [u10, g5] = (0, import_react97.useState)(false), [C5, d14] = (0, import_react97.useState)(null), b7 = (0, import_react97.useRef)(0), N6 = (0, import_react97.useCallback)(() => {
    C5 == null || C5.unsubscribe(), g5(false), d14(null);
  }, [C5]), L3 = (0, import_react97.useCallback)(async () => {
    if (!i10 || !h10)
      return;
    if (C5) {
      N6();
      return;
    }
    const V5 = s17((k2) => {
      h10.setValue(k2), p10({ response: k2 });
    }, "setResponse");
    b7.current += 1;
    const B3 = b7.current;
    let _5 = y9() || i10.getValue();
    const D7 = f13 == null ? void 0 : f13.getValue();
    let O4;
    try {
      O4 = gt({
        json: D7,
        errorMessageParse: "Variables are invalid JSON",
        errorMessageType: "Variables are not a JSON object."
      });
    } catch (k2) {
      V5(k2 instanceof Error ? k2.message : `${k2}`);
      return;
    }
    const W2 = c16 == null ? void 0 : c16.getValue();
    let F8;
    try {
      F8 = gt({
        json: W2,
        errorMessageParse: "Headers are invalid JSON",
        errorMessageType: "Headers are not a JSON object."
      });
    } catch (k2) {
      V5(k2 instanceof Error ? k2.message : `${k2}`);
      return;
    }
    if (l11) {
      const k2 = i10.documentAST ? getFragmentDependenciesForAST(
        i10.documentAST,
        l11
      ) : [];
      k2.length > 0 && (_5 += `
` + k2.map((H9) => print(H9)).join(`
`));
    }
    V5(""), g5(true);
    const A4 = r10 ?? i10.operationName ?? void 0;
    m12 == null || m12.addToHistory({
      query: _5,
      variables: D7,
      headers: W2,
      operationName: A4
    });
    try {
      let k2 = { data: {} };
      const H9 = s17((v5) => {
        if (B3 !== b7.current)
          return;
        let S8 = Array.isArray(v5) ? v5 : false;
        if (!S8 && typeof v5 == "object" && v5 !== null && "hasNext" in v5 && (S8 = [v5]), S8) {
          const R3 = {
            data: k2.data
          }, U4 = [
            ...(k2 == null ? void 0 : k2.errors) || [],
            ...S8.flatMap((Y5) => Y5.errors).filter(Boolean)
          ];
          U4.length && (R3.errors = U4);
          for (const Y5 of S8) {
            const { path: dt, data: Ne6, errors: Ao, ...an } = Y5;
            if (dt) {
              if (!Ne6)
                throw new Error(
                  `Expected part to contain a data property, but got ${Y5}`
                );
              (0, import_set_value.default)(R3.data, dt, Ne6, { merge: true });
            } else
              Ne6 && (R3.data = Ne6);
            k2 = {
              ...R3,
              ...an
            };
          }
          g5(false), V5(formatResult(k2));
        } else {
          const R3 = formatResult(v5);
          g5(false), V5(R3);
        }
      }, "handleResponse"), E8 = e6(
        {
          query: _5,
          variables: O4,
          operationName: A4
        },
        {
          headers: F8 ?? void 0,
          documentAST: i10.documentAST ?? void 0
        }
      ), Z7 = await Promise.resolve(E8);
      if (isObservable(Z7))
        d14(
          Z7.subscribe({
            next(v5) {
              H9(v5);
            },
            error(v5) {
              g5(false), v5 && V5(formatError(v5)), d14(null);
            },
            complete() {
              g5(false), d14(null);
            }
          })
        );
      else if (isAsyncIterable(Z7)) {
        d14({
          unsubscribe: () => {
            var v5, S8;
            return (S8 = (v5 = Z7[Symbol.asyncIterator]()).return) == null ? void 0 : S8.call(v5);
          }
        });
        for await (const v5 of Z7)
          H9(v5);
        g5(false), d14(null);
      } else
        H9(Z7);
    } catch (k2) {
      g5(false), V5(formatError(k2)), d14(null);
    }
  }, [
    y9,
    l11,
    e6,
    c16,
    m12,
    r10,
    i10,
    h10,
    N6,
    C5,
    p10,
    f13
  ]), x7 = !!C5, w6 = (0, import_react97.useMemo)(
    () => ({
      isFetching: u10,
      isSubscribed: x7,
      operationName: r10 ?? null,
      run: L3,
      stop: N6
    }),
    [u10, x7, r10, L3, N6]
  );
  return (0, import_jsx_runtime.jsx)(Bt.Provider, { value: w6, children: n7 });
}
s17(et3, "ExecutionContextProvider");
var We5 = ue5(Bt);
function gt({
  json: e6,
  errorMessageParse: t15,
  errorMessageType: n7
}) {
  let r10;
  try {
    r10 = e6 && e6.trim() !== "" ? JSON.parse(e6) : void 0;
  } catch (c16) {
    throw new Error(
      `${t15}: ${c16 instanceof Error ? c16.message : c16}.`
    );
  }
  const l11 = typeof r10 == "object" && r10 !== null && !Array.isArray(r10);
  if (r10 !== void 0 && !l11)
    throw new Error(n7);
  return r10;
}
s17(gt, "tryParseJsonObject");
var $e6 = "graphiql";
var _e4 = "sublime";
var Wt = false;
typeof window == "object" && (Wt = window.navigator.platform.toLowerCase().indexOf("mac") === 0);
var Ze5 = {
  // Persistent search box in Query Editor
  [Wt ? "Cmd-F" : "Ctrl-F"]: "findPersistent",
  "Cmd-G": "findPersistent",
  "Ctrl-G": "findPersistent",
  // Editor improvements
  "Ctrl-Left": "goSubwordLeft",
  "Ctrl-Right": "goSubwordRight",
  "Alt-Left": "goGroupLeft",
  "Alt-Right": "goGroupRight"
};
async function Se5(e6, t15) {
  const n7 = await import("./codemirror.es-M2WZOEST.js").then((r10) => r10.c).then(
    (r10) => (
      // Depending on bundler and settings the dynamic import either returns a
      // function (e.g. parcel) or an object containing a `default` property
      typeof r10 == "function" ? r10 : r10.default
    )
  );
  return await Promise.all(
    (t15 == null ? void 0 : t15.useCommonAddons) === false ? e6 : [
      import("./show-hint.es-AHCMXGN2.js").then((r10) => r10.s),
      import("./matchbrackets.es-CVNY2XYA.js").then((r10) => r10.m),
      import("./closebrackets.es-PCJJRZFX.js").then((r10) => r10.c),
      import("./brace-fold.es-LATEURTW.js").then((r10) => r10.b),
      import("./foldgutter.es-VHUJSCMX.js").then((r10) => r10.f),
      import("./lint.es-ABBSUF4X.js").then((r10) => r10.l),
      import("./searchcursor.es-YZM3KNZZ.js").then((r10) => r10.s),
      import("./jump-to-line.es-JVGNG6HE.js").then((r10) => r10.j),
      import("./dialog.es-NEX57C4B.js").then((r10) => r10.d),
      // @ts-expect-error
      import("./sublime.es-H6RA4ZFU.js").then((r10) => r10.s),
      ...e6
    ]
  ), n7;
}
s17(Se5, "importCodeMirror");
var Gr = s17((e6) => e6 ? print(e6) : "", "printDefault");
function $t({ field: e6 }) {
  if (!("defaultValue" in e6) || e6.defaultValue === void 0)
    return null;
  const t15 = astFromValue(e6.defaultValue, e6.type);
  return t15 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    " = ",
    (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-default-value", children: Gr(t15) })
  ] }) : null;
}
s17($t, "DefaultValue");
var _t2 = ce4("SchemaContext");
function Zt(e6) {
  if (!e6.fetcher)
    throw new TypeError(
      "The `SchemaContextProvider` component requires a `fetcher` function to be passed as prop."
    );
  const { initialHeaders: t15, headerEditor: n7 } = j6({
    nonNull: true,
    caller: Zt
  }), [r10, l11] = (0, import_react97.useState)(), [c16, i10] = (0, import_react97.useState)(false), [h10, f13] = (0, import_react97.useState)(null), p10 = (0, import_react97.useRef)(0);
  (0, import_react97.useEffect)(() => {
    l11(
      isSchema(e6.schema) || e6.schema === null || e6.schema === void 0 ? e6.schema : void 0
    ), p10.current++;
  }, [e6.schema]);
  const m12 = (0, import_react97.useRef)(t15);
  (0, import_react97.useEffect)(() => {
    n7 && (m12.current = n7.getValue());
  });
  const {
    introspectionQuery: y9,
    introspectionQueryName: u10,
    introspectionQuerySansSubscriptions: g5
  } = Qr({
    inputValueDeprecation: e6.inputValueDeprecation,
    introspectionQueryName: e6.introspectionQueryName,
    schemaDescription: e6.schemaDescription
  }), { fetcher: C5, onSchemaChange: d14, dangerouslyAssumeSchemaIsValid: b7, children: N6 } = e6, L3 = (0, import_react97.useCallback)(() => {
    if (isSchema(e6.schema) || e6.schema === null)
      return;
    const V5 = ++p10.current, B3 = e6.schema;
    async function _5() {
      if (B3)
        return B3;
      const D7 = jr(m12.current);
      if (!D7.isValidJSON) {
        f13("Introspection failed as headers are invalid.");
        return;
      }
      const O4 = D7.headers ? { headers: D7.headers } : {}, W2 = fetcherReturnToPromise(
        C5(
          {
            query: y9,
            operationName: u10
          },
          O4
        )
      );
      if (!isPromise(W2)) {
        f13("Fetcher did not return a Promise for introspection.");
        return;
      }
      i10(true), f13(null);
      let F8 = await W2;
      if (typeof F8 != "object" || F8 === null || !("data" in F8)) {
        const k2 = fetcherReturnToPromise(
          C5(
            {
              query: g5,
              operationName: u10
            },
            O4
          )
        );
        if (!isPromise(k2))
          throw new Error(
            "Fetcher did not return a Promise for introspection."
          );
        F8 = await k2;
      }
      if (i10(false), F8 != null && F8.data && "__schema" in F8.data)
        return F8.data;
      const A4 = typeof F8 == "string" ? F8 : formatResult(F8);
      f13(A4);
    }
    s17(_5, "fetchIntrospectionData"), _5().then((D7) => {
      if (!(V5 !== p10.current || !D7))
        try {
          const O4 = buildClientSchema(D7);
          l11(O4), d14 == null || d14(O4);
        } catch (O4) {
          f13(formatError(O4));
        }
    }).catch((D7) => {
      V5 === p10.current && (f13(formatError(D7)), i10(false));
    });
  }, [
    C5,
    u10,
    y9,
    g5,
    d14,
    e6.schema
  ]);
  (0, import_react97.useEffect)(() => {
    L3();
  }, [L3]), (0, import_react97.useEffect)(() => {
    function V5(B3) {
      B3.ctrlKey && B3.key === "R" && L3();
    }
    return s17(V5, "triggerIntrospection"), window.addEventListener("keydown", V5), () => window.removeEventListener("keydown", V5);
  });
  const x7 = (0, import_react97.useMemo)(() => !r10 || b7 ? [] : validateSchema(r10), [r10, b7]), w6 = (0, import_react97.useMemo)(
    () => ({
      fetchError: h10,
      introspect: L3,
      isFetching: c16,
      schema: r10,
      validationErrors: x7
    }),
    [h10, L3, c16, r10, x7]
  );
  return (0, import_jsx_runtime.jsx)(_t2.Provider, { value: w6, children: N6 });
}
s17(Zt, "SchemaContextProvider");
var re6 = ue5(_t2);
function Qr({
  inputValueDeprecation: e6,
  introspectionQueryName: t15,
  schemaDescription: n7
}) {
  return (0, import_react97.useMemo)(() => {
    const r10 = t15 || "IntrospectionQuery";
    let l11 = getIntrospectionQuery({
      inputValueDeprecation: e6,
      schemaDescription: n7
    });
    t15 && (l11 = l11.replace("query IntrospectionQuery", `query ${r10}`));
    const c16 = l11.replace(
      "subscriptionType { name }",
      ""
    );
    return {
      introspectionQueryName: r10,
      introspectionQuery: l11,
      introspectionQuerySansSubscriptions: c16
    };
  }, [e6, t15, n7]);
}
s17(Qr, "useIntrospectionQuery");
function jr(e6) {
  let t15 = null, n7 = true;
  try {
    e6 && (t15 = JSON.parse(e6));
  } catch {
    n7 = false;
  }
  return { headers: t15, isValidJSON: n7 };
}
s17(jr, "parseHeaderString");
var Te3 = { name: "Docs" };
var Gt = ce4("ExplorerContext");
function Qt(e6) {
  const { schema: t15, validationErrors: n7 } = re6({
    nonNull: true,
    caller: Qt
  }), [r10, l11] = (0, import_react97.useState)([
    Te3
  ]), c16 = (0, import_react97.useCallback)((p10) => {
    l11((m12) => m12.at(-1).def === p10.def ? (
      // Avoid pushing duplicate items
      m12
    ) : [...m12, p10]);
  }, []), i10 = (0, import_react97.useCallback)(() => {
    l11(
      (p10) => p10.length > 1 ? p10.slice(0, -1) : p10
    );
  }, []), h10 = (0, import_react97.useCallback)(() => {
    l11(
      (p10) => p10.length === 1 ? p10 : [Te3]
    );
  }, []);
  (0, import_react97.useEffect)(() => {
    t15 == null || n7.length > 0 ? h10() : l11((p10) => {
      if (p10.length === 1)
        return p10;
      const m12 = [Te3];
      let y9 = null;
      for (const u10 of p10)
        if (u10 !== Te3)
          if (u10.def)
            if (isNamedType(u10.def)) {
              const g5 = t15.getType(u10.def.name);
              if (g5)
                m12.push({
                  name: u10.name,
                  def: g5
                }), y9 = g5;
              else
                break;
            } else {
              if (y9 === null)
                break;
              if (isObjectType(y9) || isInputObjectType(y9)) {
                const g5 = y9.getFields()[u10.name];
                if (g5)
                  m12.push({
                    name: u10.name,
                    def: g5
                  });
                else
                  break;
              } else {
                if (isScalarType(y9) || isEnumType(y9) || isInterfaceType(y9) || isUnionType(y9))
                  break;
                {
                  const g5 = y9;
                  if (g5.args.find((d14) => d14.name === u10.name))
                    m12.push({
                      name: u10.name,
                      def: g5
                    });
                  else
                    break;
                }
              }
            }
          else
            y9 = null, m12.push(u10);
      return m12;
    });
  }, [h10, t15, n7]);
  const f13 = (0, import_react97.useMemo)(
    () => ({ explorerNavStack: r10, push: c16, pop: i10, reset: h10 }),
    [r10, c16, i10, h10]
  );
  return (0, import_jsx_runtime.jsx)(Gt.Provider, { value: f13, children: e6.children });
}
s17(Qt, "ExplorerContextProvider");
var ie5 = ue5(Gt);
function Pe6(e6, t15) {
  return isNonNullType(e6) ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    Pe6(e6.ofType, t15),
    "!"
  ] }) : isListType(e6) ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    "[",
    Pe6(e6.ofType, t15),
    "]"
  ] }) : t15(e6);
}
s17(Pe6, "renderType");
function ee6(e6) {
  const { push: t15 } = ie5({ nonNull: true, caller: ee6 });
  return e6.type ? Pe6(e6.type, (n7) => (0, import_jsx_runtime.jsx)(
    "a",
    {
      className: "graphiql-doc-explorer-type-name",
      onClick: (r10) => {
        r10.preventDefault(), t15({ name: n7.name, def: n7 });
      },
      href: "#",
      children: n7.name
    }
  )) : null;
}
s17(ee6, "TypeLink");
function qe5({ arg: e6, showDefaultValue: t15, inline: n7 }) {
  const r10 = (0, import_jsx_runtime.jsxs)("span", { children: [
    (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-argument-name", children: e6.name }),
    ": ",
    (0, import_jsx_runtime.jsx)(ee6, { type: e6.type }),
    t15 !== false && (0, import_jsx_runtime.jsx)($t, { field: e6 })
  ] });
  return n7 ? r10 : (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-argument", children: [
    r10,
    e6.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e6.description }) : null,
    e6.deprecationReason ? (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-argument-deprecation", children: [
      (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-argument-deprecation-label", children: "Deprecated" }),
      (0, import_jsx_runtime.jsx)(ne5, { type: "deprecation", children: e6.deprecationReason })
    ] }) : null
  ] });
}
s17(qe5, "Argument");
function jt(e6) {
  return e6.children ? (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-deprecation", children: [
    (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-deprecation-label", children: "Deprecated" }),
    (0, import_jsx_runtime.jsx)(ne5, { type: "deprecation", onlyShowFirstChild: true, children: e6.children })
  ] }) : null;
}
s17(jt, "DeprecationReason");
function zr({ directive: e6 }) {
  return (0, import_jsx_runtime.jsxs)("span", { className: "graphiql-doc-explorer-directive", children: [
    "@",
    e6.name.value
  ] });
}
s17(zr, "Directive");
function K4(e6) {
  const t15 = Ur[e6.title];
  return (0, import_jsx_runtime.jsxs)("div", { children: [
    (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-section-title", children: [
      (0, import_jsx_runtime.jsx)(t15, {}),
      e6.title
    ] }),
    (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-section-content", children: e6.children })
  ] });
}
s17(K4, "ExplorerSection");
var Ur = {
  Arguments: gr,
  "Deprecated Arguments": yr,
  "Deprecated Enum Values": vr,
  "Deprecated Fields": br,
  Directives: wr,
  "Enum Values": Lr,
  Fields: Sr,
  Implements: kr,
  Implementations: ke4,
  "Possible Types": ke4,
  "Root Types": Rr,
  Type: ke4,
  "All Schema Types": ke4
};
function Kr(e6) {
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    e6.field.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e6.field.description }) : null,
    (0, import_jsx_runtime.jsx)(jt, { children: e6.field.deprecationReason }),
    (0, import_jsx_runtime.jsx)(K4, { title: "Type", children: (0, import_jsx_runtime.jsx)(ee6, { type: e6.field.type }) }),
    (0, import_jsx_runtime.jsx)(Jr, { field: e6.field }),
    (0, import_jsx_runtime.jsx)(Yr, { field: e6.field })
  ] });
}
s17(Kr, "FieldDocumentation");
function Jr({ field: e6 }) {
  const [t15, n7] = (0, import_react97.useState)(false), r10 = (0, import_react97.useCallback)(() => {
    n7(true);
  }, []);
  if (!("args" in e6))
    return null;
  const l11 = [], c16 = [];
  for (const i10 of e6.args)
    i10.deprecationReason ? c16.push(i10) : l11.push(i10);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    l11.length > 0 ? (0, import_jsx_runtime.jsx)(K4, { title: "Arguments", children: l11.map((i10) => (0, import_jsx_runtime.jsx)(qe5, { arg: i10 }, i10.name)) }) : null,
    c16.length > 0 ? t15 || l11.length === 0 ? (0, import_jsx_runtime.jsx)(K4, { title: "Deprecated Arguments", children: c16.map((i10) => (0, import_jsx_runtime.jsx)(qe5, { arg: i10 }, i10.name)) }) : (0, import_jsx_runtime.jsx)(Fe3, { type: "button", onClick: r10, children: "Show Deprecated Arguments" }) : null
  ] });
}
s17(Jr, "Arguments");
function Yr({ field: e6 }) {
  var n7;
  const t15 = ((n7 = e6.astNode) == null ? void 0 : n7.directives) || [];
  return !t15 || t15.length === 0 ? null : (0, import_jsx_runtime.jsx)(K4, { title: "Directives", children: t15.map((r10) => (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(zr, { directive: r10 }) }, r10.name.value)) });
}
s17(Yr, "Directives");
function Xr(e6) {
  var i10, h10, f13, p10;
  const t15 = e6.schema.getQueryType(), n7 = (h10 = (i10 = e6.schema).getMutationType) == null ? void 0 : h10.call(i10), r10 = (p10 = (f13 = e6.schema).getSubscriptionType) == null ? void 0 : p10.call(f13), l11 = e6.schema.getTypeMap(), c16 = [
    t15 == null ? void 0 : t15.name,
    n7 == null ? void 0 : n7.name,
    r10 == null ? void 0 : r10.name
  ];
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e6.schema.description || "A GraphQL schema provides a root type for each kind of operation." }),
    (0, import_jsx_runtime.jsxs)(K4, { title: "Root Types", children: [
      t15 ? (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "query" }),
        ": ",
        (0, import_jsx_runtime.jsx)(ee6, { type: t15 })
      ] }) : null,
      n7 && (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "mutation" }),
        ": ",
        (0, import_jsx_runtime.jsx)(ee6, { type: n7 })
      ] }),
      r10 && (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "subscription" }),
        ": ",
        (0, import_jsx_runtime.jsx)(ee6, { type: r10 })
      ] })
    ] }),
    (0, import_jsx_runtime.jsx)(K4, { title: "All Schema Types", children: l11 && (0, import_jsx_runtime.jsx)("div", { children: Object.values(l11).map((m12) => c16.includes(m12.name) || m12.name.startsWith("__") ? null : (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(ee6, { type: m12 }) }, m12.name)) }) })
  ] });
}
s17(Xr, "SchemaDocumentation");
function pe3(e6, t15) {
  let n7;
  return function(...r10) {
    n7 && window.clearTimeout(n7), n7 = window.setTimeout(() => {
      n7 = null, t15(...r10);
    }, e6);
  };
}
s17(pe3, "debounce");
function zt() {
  const { explorerNavStack: e6, push: t15 } = ie5({
    nonNull: true,
    caller: zt
  }), n7 = (0, import_react97.useRef)(null), r10 = tt2(), [l11, c16] = (0, import_react97.useState)(""), [i10, h10] = (0, import_react97.useState)(r10(l11)), f13 = (0, import_react97.useMemo)(
    () => pe3(200, (d14) => {
      h10(r10(d14));
    }),
    [r10]
  );
  (0, import_react97.useEffect)(() => {
    f13(l11);
  }, [f13, l11]), (0, import_react97.useEffect)(() => {
    function d14(b7) {
      var N6;
      b7.metaKey && b7.key === "k" && ((N6 = n7.current) == null || N6.focus());
    }
    return s17(d14, "handleKeyDown"), window.addEventListener("keydown", d14), () => window.removeEventListener("keydown", d14);
  }, []);
  const p10 = e6.at(-1), m12 = (0, import_react97.useCallback)(
    (d14) => {
      t15(
        "field" in d14 ? { name: d14.field.name, def: d14.field } : { name: d14.type.name, def: d14.type }
      );
    },
    [t15]
  ), [y9, u10] = (0, import_react97.useState)(false), g5 = (0, import_react97.useCallback)((d14) => {
    u10(d14.type === "focus");
  }, []);
  return e6.length === 1 || isObjectType(p10.def) || isInterfaceType(p10.def) || isInputObjectType(p10.def) ? (0, import_jsx_runtime.jsxs)(
    Wo,
    {
      as: "div",
      className: "graphiql-doc-explorer-search",
      onChange: m12,
      "data-state": y9 ? void 0 : "idle",
      "aria-label": `Search ${p10.name}...`,
      children: [
        (0, import_jsx_runtime.jsxs)(
          "div",
          {
            className: "graphiql-doc-explorer-search-input",
            onClick: () => {
              var d14;
              (d14 = n7.current) == null || d14.focus();
            },
            children: [
              (0, import_jsx_runtime.jsx)(Tr, {}),
              (0, import_jsx_runtime.jsx)(
                Wo.Input,
                {
                  autoComplete: "off",
                  onFocus: g5,
                  onBlur: g5,
                  onChange: (d14) => c16(d14.target.value),
                  placeholder: "⌘ K",
                  ref: n7,
                  value: l11,
                  "data-cy": "doc-explorer-input"
                }
              )
            ]
          }
        ),
        y9 && (0, import_jsx_runtime.jsxs)(Wo.Options, { "data-cy": "doc-explorer-list", children: [
          i10.within.length + i10.types.length + i10.fields.length === 0 ? (0, import_jsx_runtime.jsx)("li", { className: "graphiql-doc-explorer-search-empty", children: "No results found" }) : i10.within.map((d14, b7) => (0, import_jsx_runtime.jsx)(
            Wo.Option,
            {
              value: d14,
              "data-cy": "doc-explorer-option",
              children: (0, import_jsx_runtime.jsx)(Ct, { field: d14.field, argument: d14.argument })
            },
            `within-${b7}`
          )),
          i10.within.length > 0 && i10.types.length + i10.fields.length > 0 ? (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-search-divider", children: "Other results" }) : null,
          i10.types.map((d14, b7) => (0, import_jsx_runtime.jsx)(
            Wo.Option,
            {
              value: d14,
              "data-cy": "doc-explorer-option",
              children: (0, import_jsx_runtime.jsx)(nt2, { type: d14.type })
            },
            `type-${b7}`
          )),
          i10.fields.map((d14, b7) => (0, import_jsx_runtime.jsxs)(
            Wo.Option,
            {
              value: d14,
              "data-cy": "doc-explorer-option",
              children: [
                (0, import_jsx_runtime.jsx)(nt2, { type: d14.type }),
                ".",
                (0, import_jsx_runtime.jsx)(Ct, { field: d14.field, argument: d14.argument })
              ]
            },
            `field-${b7}`
          ))
        ] })
      ]
    }
  ) : null;
}
s17(zt, "Search");
function tt2(e6) {
  const { explorerNavStack: t15 } = ie5({
    nonNull: true,
    caller: e6 || tt2
  }), { schema: n7 } = re6({
    nonNull: true,
    caller: e6 || tt2
  }), r10 = t15.at(-1);
  return (0, import_react97.useCallback)(
    (l11) => {
      const c16 = {
        within: [],
        types: [],
        fields: []
      };
      if (!n7)
        return c16;
      const i10 = r10.def, h10 = n7.getTypeMap();
      let f13 = Object.keys(h10);
      i10 && (f13 = f13.filter((p10) => p10 !== i10.name), f13.unshift(i10.name));
      for (const p10 of f13) {
        if (c16.within.length + c16.types.length + c16.fields.length >= 100)
          break;
        const m12 = h10[p10];
        if (i10 !== m12 && je5(p10, l11) && c16.types.push({ type: m12 }), !isObjectType(m12) && !isInterfaceType(m12) && !isInputObjectType(m12))
          continue;
        const y9 = m12.getFields();
        for (const u10 in y9) {
          const g5 = y9[u10];
          let C5;
          if (!je5(u10, l11))
            if ("args" in g5) {
              if (C5 = g5.args.filter(
                (d14) => je5(d14.name, l11)
              ), C5.length === 0)
                continue;
            } else
              continue;
          c16[i10 === m12 ? "within" : "fields"].push(
            ...C5 ? C5.map((d14) => ({ type: m12, field: g5, argument: d14 })) : [{ type: m12, field: g5 }]
          );
        }
      }
      return c16;
    },
    [r10.def, n7]
  );
}
s17(tt2, "useSearchResults");
function je5(e6, t15) {
  try {
    const n7 = t15.replaceAll(/[^_0-9A-Za-z]/g, (r10) => "\\" + r10);
    return e6.search(new RegExp(n7, "i")) !== -1;
  } catch {
    return e6.toLowerCase().includes(t15.toLowerCase());
  }
}
s17(je5, "isMatch");
function nt2(e6) {
  return (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-type", children: e6.type.name });
}
s17(nt2, "Type");
function Ct({ field: e6, argument: t15 }) {
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-field", children: e6.name }),
    t15 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      "(",
      (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-argument", children: t15.name }),
      ":",
      " ",
      Pe6(t15.type, (n7) => (0, import_jsx_runtime.jsx)(nt2, { type: n7 })),
      ")"
    ] }) : null
  ] });
}
s17(Ct, "Field$1");
function eo2(e6) {
  const { push: t15 } = ie5({ nonNull: true });
  return (0, import_jsx_runtime.jsx)(
    "a",
    {
      className: "graphiql-doc-explorer-field-name",
      onClick: (n7) => {
        n7.preventDefault(), t15({ name: e6.field.name, def: e6.field });
      },
      href: "#",
      children: e6.field.name
    }
  );
}
s17(eo2, "FieldLink");
function to2(e6) {
  return isNamedType(e6.type) ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    e6.type.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e6.type.description }) : null,
    (0, import_jsx_runtime.jsx)(no2, { type: e6.type }),
    (0, import_jsx_runtime.jsx)(ro2, { type: e6.type }),
    (0, import_jsx_runtime.jsx)(oo2, { type: e6.type }),
    (0, import_jsx_runtime.jsx)(lo2, { type: e6.type })
  ] }) : null;
}
s17(to2, "TypeDocumentation");
function no2({ type: e6 }) {
  return isObjectType(e6) && e6.getInterfaces().length > 0 ? (0, import_jsx_runtime.jsx)(K4, { title: "Implements", children: e6.getInterfaces().map((n7) => (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(ee6, { type: n7 }) }, n7.name)) }) : null;
}
s17(no2, "ImplementsInterfaces");
function ro2({ type: e6 }) {
  const [t15, n7] = (0, import_react97.useState)(false), r10 = (0, import_react97.useCallback)(() => {
    n7(true);
  }, []);
  if (!isObjectType(e6) && !isInterfaceType(e6) && !isInputObjectType(e6))
    return null;
  const l11 = e6.getFields(), c16 = [], i10 = [];
  for (const h10 of Object.keys(l11).map((f13) => l11[f13]))
    h10.deprecationReason ? i10.push(h10) : c16.push(h10);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    c16.length > 0 ? (0, import_jsx_runtime.jsx)(K4, { title: "Fields", children: c16.map((h10) => (0, import_jsx_runtime.jsx)(yt2, { field: h10 }, h10.name)) }) : null,
    i10.length > 0 ? t15 || c16.length === 0 ? (0, import_jsx_runtime.jsx)(K4, { title: "Deprecated Fields", children: i10.map((h10) => (0, import_jsx_runtime.jsx)(yt2, { field: h10 }, h10.name)) }) : (0, import_jsx_runtime.jsx)(Fe3, { type: "button", onClick: r10, children: "Show Deprecated Fields" }) : null
  ] });
}
s17(ro2, "Fields");
function yt2({ field: e6 }) {
  const t15 = "args" in e6 ? e6.args.filter((n7) => !n7.deprecationReason) : [];
  return (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-item", children: [
    (0, import_jsx_runtime.jsxs)("div", { children: [
      (0, import_jsx_runtime.jsx)(eo2, { field: e6 }),
      t15.length > 0 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
        "(",
        (0, import_jsx_runtime.jsx)("span", { children: t15.map(
          (n7) => t15.length === 1 ? (0, import_jsx_runtime.jsx)(qe5, { arg: n7, inline: true }, n7.name) : (0, import_jsx_runtime.jsx)(
            "div",
            {
              className: "graphiql-doc-explorer-argument-multiple",
              children: (0, import_jsx_runtime.jsx)(qe5, { arg: n7, inline: true })
            },
            n7.name
          )
        ) }),
        ")"
      ] }) : null,
      ": ",
      (0, import_jsx_runtime.jsx)(ee6, { type: e6.type }),
      (0, import_jsx_runtime.jsx)($t, { field: e6 })
    ] }),
    e6.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", onlyShowFirstChild: true, children: e6.description }) : null,
    (0, import_jsx_runtime.jsx)(jt, { children: e6.deprecationReason })
  ] });
}
s17(yt2, "Field");
function oo2({ type: e6 }) {
  const [t15, n7] = (0, import_react97.useState)(false), r10 = (0, import_react97.useCallback)(() => {
    n7(true);
  }, []);
  if (!isEnumType(e6))
    return null;
  const l11 = [], c16 = [];
  for (const i10 of e6.getValues())
    i10.deprecationReason ? c16.push(i10) : l11.push(i10);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    l11.length > 0 ? (0, import_jsx_runtime.jsx)(K4, { title: "Enum Values", children: l11.map((i10) => (0, import_jsx_runtime.jsx)(vt, { value: i10 }, i10.name)) }) : null,
    c16.length > 0 ? t15 || l11.length === 0 ? (0, import_jsx_runtime.jsx)(K4, { title: "Deprecated Enum Values", children: c16.map((i10) => (0, import_jsx_runtime.jsx)(vt, { value: i10 }, i10.name)) }) : (0, import_jsx_runtime.jsx)(Fe3, { type: "button", onClick: r10, children: "Show Deprecated Values" }) : null
  ] });
}
s17(oo2, "EnumValues");
function vt({ value: e6 }) {
  return (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-item", children: [
    (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-enum-value", children: e6.name }),
    e6.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e6.description }) : null,
    e6.deprecationReason ? (0, import_jsx_runtime.jsx)(ne5, { type: "deprecation", children: e6.deprecationReason }) : null
  ] });
}
s17(vt, "EnumValue");
function lo2({ type: e6 }) {
  const { schema: t15 } = re6({ nonNull: true });
  return !t15 || !isAbstractType(e6) ? null : (0, import_jsx_runtime.jsx)(
    K4,
    {
      title: isInterfaceType(e6) ? "Implementations" : "Possible Types",
      children: t15.getPossibleTypes(e6).map((n7) => (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(ee6, { type: n7 }) }, n7.name))
    }
  );
}
s17(lo2, "PossibleTypes");
function rt3() {
  const { fetchError: e6, isFetching: t15, schema: n7, validationErrors: r10 } = re6(
    { nonNull: true, caller: rt3 }
  ), { explorerNavStack: l11, pop: c16 } = ie5({
    nonNull: true,
    caller: rt3
  }), i10 = l11.at(-1);
  let h10 = null;
  e6 ? h10 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-error", children: "Error fetching schema" }) : r10.length > 0 ? h10 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-error", children: [
    "Schema is invalid: ",
    r10[0].message
  ] }) : t15 ? h10 = (0, import_jsx_runtime.jsx)(qt, {}) : n7 ? l11.length === 1 ? h10 = (0, import_jsx_runtime.jsx)(Xr, { schema: n7 }) : isType(i10.def) ? h10 = (0, import_jsx_runtime.jsx)(to2, { type: i10.def }) : i10.def && (h10 = (0, import_jsx_runtime.jsx)(Kr, { field: i10.def })) : h10 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-error", children: "No GraphQL schema available" });
  let f13;
  return l11.length > 1 && (f13 = l11.at(-2).name), (0, import_jsx_runtime.jsxs)(
    "section",
    {
      className: "graphiql-doc-explorer",
      "aria-label": "Documentation Explorer",
      children: [
        (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-header", children: [
          (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-header-content", children: [
            f13 && (0, import_jsx_runtime.jsxs)(
              "a",
              {
                href: "#",
                className: "graphiql-doc-explorer-back",
                onClick: (p10) => {
                  p10.preventDefault(), c16();
                },
                "aria-label": `Go back to ${f13}`,
                children: [
                  (0, import_jsx_runtime.jsx)(Cr, {}),
                  f13
                ]
              }
            ),
            (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-title", children: i10.name })
          ] }),
          (0, import_jsx_runtime.jsx)(zt, {}, i10.name)
        ] }),
        (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-content", children: h10 })
      ]
    }
  );
}
s17(rt3, "DocExplorer");
var ve3 = {
  title: "Documentation Explorer",
  icon: s17(function() {
    const t15 = at();
    return (t15 == null ? void 0 : t15.visiblePlugin) === ve3 ? (0, import_jsx_runtime.jsx)(xr, {}) : (0, import_jsx_runtime.jsx)(Er, {});
  }, "Icon"),
  content: rt3
};
var bt = {
  title: "History",
  icon: Nr,
  content: _r
};
var Ut = ce4("PluginContext");
function io2(e6) {
  const t15 = de4(), n7 = ie5(), r10 = Be3(), l11 = !!n7, c16 = !!r10, i10 = (0, import_react97.useMemo)(() => {
    const g5 = [], C5 = {};
    l11 && (g5.push(ve3), C5[ve3.title] = true), c16 && (g5.push(bt), C5[bt.title] = true);
    for (const d14 of e6.plugins || []) {
      if (typeof d14.title != "string" || !d14.title)
        throw new Error("All GraphiQL plugins must have a unique title");
      if (C5[d14.title])
        throw new Error(
          `All GraphiQL plugins must have a unique title, found two plugins with the title '${d14.title}'`
        );
      g5.push(d14), C5[d14.title] = true;
    }
    return g5;
  }, [l11, c16, e6.plugins]), [h10, f13] = (0, import_react97.useState)(() => {
    const g5 = t15 == null ? void 0 : t15.get(wt), C5 = i10.find(
      (d14) => d14.title === g5
    );
    return C5 || (g5 && (t15 == null || t15.set(wt, "")), e6.visiblePlugin && i10.find(
      (d14) => (typeof e6.visiblePlugin == "string" ? d14.title : d14) === e6.visiblePlugin
    ) || null);
  }), { onTogglePluginVisibility: p10, children: m12 } = e6, y9 = (0, import_react97.useCallback)(
    (g5) => {
      const C5 = g5 && i10.find(
        (d14) => (typeof g5 == "string" ? d14.title : d14) === g5
      ) || null;
      f13((d14) => C5 === d14 ? d14 : (p10 == null || p10(C5), C5));
    },
    [p10, i10]
  );
  (0, import_react97.useEffect)(() => {
    e6.visiblePlugin && y9(e6.visiblePlugin);
  }, [i10, e6.visiblePlugin, y9]);
  const u10 = (0, import_react97.useMemo)(
    () => ({ plugins: i10, setVisiblePlugin: y9, visiblePlugin: h10 }),
    [i10, y9, h10]
  );
  return (0, import_jsx_runtime.jsx)(Ut.Provider, { value: u10, children: m12 });
}
s17(io2, "PluginContextProvider");
var at = ue5(Ut);
var wt = "visiblePlugin";
function so(e6, t15, n7, r10, l11, c16) {
  Se5([], { useCommonAddons: false }).then((h10) => {
    let f13, p10, m12, y9, u10, g5, C5, d14, b7;
    h10.on(
      t15,
      "select",
      // @ts-expect-error
      (N6, L3) => {
        if (!f13) {
          const x7 = L3.parentNode;
          f13 = document.createElement("div"), f13.className = "CodeMirror-hint-information", x7.append(f13);
          const w6 = document.createElement("header");
          w6.className = "CodeMirror-hint-information-header", f13.append(w6), p10 = document.createElement("span"), p10.className = "CodeMirror-hint-information-field-name", w6.append(p10), m12 = document.createElement("span"), m12.className = "CodeMirror-hint-information-type-name-pill", w6.append(m12), y9 = document.createElement("span"), m12.append(y9), u10 = document.createElement("a"), u10.className = "CodeMirror-hint-information-type-name", u10.href = "javascript:void 0", u10.addEventListener("click", i10), m12.append(u10), g5 = document.createElement("span"), m12.append(g5), C5 = document.createElement("div"), C5.className = "CodeMirror-hint-information-description", f13.append(C5), d14 = document.createElement("div"), d14.className = "CodeMirror-hint-information-deprecation", f13.append(d14);
          const V5 = document.createElement("span");
          V5.className = "CodeMirror-hint-information-deprecation-label", V5.textContent = "Deprecated", d14.append(V5), b7 = document.createElement("div"), b7.className = "CodeMirror-hint-information-deprecation-reason", d14.append(b7);
          const B3 = parseInt(
            window.getComputedStyle(f13).paddingBottom.replace(/px$/, ""),
            10
          ) || 0, _5 = parseInt(
            window.getComputedStyle(f13).maxHeight.replace(/px$/, ""),
            10
          ) || 0, D7 = s17(() => {
            f13 && (f13.style.paddingTop = x7.scrollTop + B3 + "px", f13.style.maxHeight = x7.scrollTop + _5 + "px");
          }, "handleScroll");
          x7.addEventListener("scroll", D7);
          let O4;
          x7.addEventListener(
            "DOMNodeRemoved",
            O4 = s17((W2) => {
              W2.target === x7 && (x7.removeEventListener("scroll", D7), x7.removeEventListener("DOMNodeRemoved", O4), f13 && f13.removeEventListener(
                "click",
                i10
              ), f13 = null, p10 = null, m12 = null, y9 = null, u10 = null, g5 = null, C5 = null, d14 = null, b7 = null, O4 = null);
            }, "onRemoveFn")
          );
        }
        if (p10 && (p10.textContent = N6.text), m12 && y9 && u10 && g5)
          if (N6.type) {
            m12.style.display = "inline";
            const x7 = s17((w6) => {
              isNonNullType(w6) ? (g5.textContent = "!" + g5.textContent, x7(w6.ofType)) : isListType(w6) ? (y9.textContent += "[", g5.textContent = "]" + g5.textContent, x7(w6.ofType)) : u10.textContent = w6.name;
            }, "renderType");
            y9.textContent = "", g5.textContent = "", x7(N6.type);
          } else
            y9.textContent = "", u10.textContent = "", g5.textContent = "", m12.style.display = "none";
        C5 && (N6.description ? (C5.style.display = "block", C5.innerHTML = Ae3.render(N6.description)) : (C5.style.display = "none", C5.innerHTML = "")), d14 && b7 && (N6.deprecationReason ? (d14.style.display = "block", b7.innerHTML = Ae3.render(
          N6.deprecationReason
        )) : (d14.style.display = "none", b7.innerHTML = ""));
      }
    );
  });
  function i10(h10) {
    if (!n7 || !r10 || !l11 || !(h10.currentTarget instanceof HTMLElement))
      return;
    const f13 = h10.currentTarget.textContent || "", p10 = n7.getType(f13);
    p10 && (l11.setVisiblePlugin(ve3), r10.push({ name: p10.name, def: p10 }), c16 == null || c16(p10));
  }
  s17(i10, "onClickHintInformation");
}
s17(so, "onHasCompletion");
function Me4(e6, t15) {
  (0, import_react97.useEffect)(() => {
    e6 && typeof t15 == "string" && t15 !== e6.getValue() && e6.setValue(t15);
  }, [e6, t15]);
}
s17(Me4, "useSynchronizeValue");
function Ge6(e6, t15, n7) {
  (0, import_react97.useEffect)(() => {
    e6 && e6.setOption(t15, n7);
  }, [e6, t15, n7]);
}
s17(Ge6, "useSynchronizeOption");
function Kt(e6, t15, n7, r10, l11) {
  const { updateActiveTabValues: c16 } = j6({ nonNull: true, caller: l11 }), i10 = de4();
  (0, import_react97.useEffect)(() => {
    if (!e6)
      return;
    const h10 = pe3(500, (m12) => {
      !i10 || n7 === null || i10.set(n7, m12);
    }), f13 = pe3(100, (m12) => {
      c16({ [r10]: m12 });
    }), p10 = s17((m12, y9) => {
      if (!y9)
        return;
      const u10 = m12.getValue();
      h10(u10), f13(u10), t15 == null || t15(u10);
    }, "handleChange");
    return e6.on("change", p10), () => e6.off("change", p10);
  }, [
    t15,
    e6,
    i10,
    n7,
    r10,
    c16
  ]);
}
s17(Kt, "useChangeHandler");
function Jt(e6, t15, n7) {
  const { schema: r10 } = re6({ nonNull: true, caller: n7 }), l11 = ie5(), c16 = at();
  (0, import_react97.useEffect)(() => {
    if (!e6)
      return;
    const i10 = s17((h10, f13) => {
      so(h10, f13, r10, l11, c16, (p10) => {
        t15 == null || t15({ kind: "Type", type: p10, schema: r10 || void 0 });
      });
    }, "handleCompletion");
    return e6.on(
      // @ts-expect-error @TODO additional args for hasCompletion event
      "hasCompletion",
      i10
    ), () => e6.off(
      // @ts-expect-error @TODO additional args for hasCompletion event
      "hasCompletion",
      i10
    );
  }, [t15, e6, l11, c16, r10]);
}
s17(Jt, "useCompletion");
function te4(e6, t15, n7) {
  (0, import_react97.useEffect)(() => {
    if (e6) {
      for (const r10 of t15)
        e6.removeKeyMap(r10);
      if (n7) {
        const r10 = {};
        for (const l11 of t15)
          r10[l11] = () => n7();
        e6.addKeyMap(r10);
      }
    }
  }, [e6, t15, n7]);
}
s17(te4, "useKeyMap");
function Yt({ caller: e6, onCopyQuery: t15 } = {}) {
  const { queryEditor: n7 } = j6({
    nonNull: true,
    caller: e6 || Yt
  });
  return (0, import_react97.useCallback)(() => {
    if (!n7)
      return;
    const r10 = n7.getValue();
    (0, import_copy_to_clipboard.default)(r10), t15 == null || t15(r10);
  }, [n7, t15]);
}
s17(Yt, "useCopyQuery");
function be6({ caller: e6 } = {}) {
  const { queryEditor: t15 } = j6({
    nonNull: true,
    caller: e6 || be6
  }), { schema: n7 } = re6({ nonNull: true, caller: be6 });
  return (0, import_react97.useCallback)(() => {
    const r10 = t15 == null ? void 0 : t15.documentAST, l11 = t15 == null ? void 0 : t15.getValue();
    !r10 || !l11 || t15.setValue(print(mergeAst(r10, n7)));
  }, [t15, n7]);
}
s17(be6, "useMergeQuery");
function Qe5({ caller: e6 } = {}) {
  const { queryEditor: t15, headerEditor: n7, variableEditor: r10 } = j6({
    nonNull: true,
    caller: e6 || Qe5
  });
  return (0, import_react97.useCallback)(() => {
    if (r10) {
      const l11 = r10.getValue();
      try {
        const c16 = JSON.stringify(
          JSON.parse(l11),
          null,
          2
        );
        c16 !== l11 && r10.setValue(c16);
      } catch {
      }
    }
    if (n7) {
      const l11 = n7.getValue();
      try {
        const c16 = JSON.stringify(
          JSON.parse(l11),
          null,
          2
        );
        c16 !== l11 && n7.setValue(c16);
      } catch {
      }
    }
    if (t15) {
      const l11 = t15.getValue(), c16 = print(parse(l11));
      c16 !== l11 && t15.setValue(c16);
    }
  }, [t15, r10, n7]);
}
s17(Qe5, "usePrettifyEditors");
function ot2({
  getDefaultFieldNames: e6,
  caller: t15
} = {}) {
  const { schema: n7 } = re6({
    nonNull: true,
    caller: t15 || ot2
  }), { queryEditor: r10 } = j6({
    nonNull: true,
    caller: t15 || ot2
  });
  return (0, import_react97.useCallback)(() => {
    if (!r10)
      return;
    const l11 = r10.getValue(), { insertions: c16, result: i10 } = fillLeafs(
      n7,
      l11,
      e6
    );
    return c16 && c16.length > 0 && r10.operation(() => {
      const h10 = r10.getCursor(), f13 = r10.indexFromPos(h10);
      r10.setValue(i10 || "");
      let p10 = 0;
      const m12 = c16.map(
        ({ index: u10, string: g5 }) => r10.markText(
          r10.posFromIndex(u10 + p10),
          r10.posFromIndex(u10 + (p10 += g5.length)),
          {
            className: "auto-inserted-leaf",
            clearOnEnter: true,
            title: "Automatically added leaf fields"
          }
        )
      );
      setTimeout(() => {
        for (const u10 of m12)
          u10.clear();
      }, 7e3);
      let y9 = f13;
      for (const { index: u10, string: g5 } of c16)
        u10 < f13 && (y9 += g5.length);
      r10.setCursor(r10.posFromIndex(y9));
    }), i10;
  }, [e6, r10, n7]);
}
s17(ot2, "useAutoCompleteLeafs");
function Ce4({
  editorTheme: e6 = $e6,
  keyMap: t15 = _e4,
  onEdit: n7,
  readOnly: r10 = false
} = {}, l11) {
  const {
    initialHeaders: c16,
    headerEditor: i10,
    setHeaderEditor: h10,
    shouldPersistHeaders: f13
  } = j6({
    nonNull: true,
    caller: l11 || Ce4
  }), p10 = We5(), m12 = be6({ caller: l11 || Ce4 }), y9 = Qe5({ caller: l11 || Ce4 }), u10 = (0, import_react97.useRef)(null);
  return (0, import_react97.useEffect)(() => {
    let g5 = true;
    return Se5([
      // @ts-expect-error
      import("./javascript.es-Y477E5M3.js").then((C5) => C5.j)
    ]).then((C5) => {
      if (!g5)
        return;
      const d14 = u10.current;
      if (!d14)
        return;
      const b7 = C5(d14, {
        value: c16,
        lineNumbers: true,
        tabSize: 2,
        mode: { name: "javascript", json: true },
        theme: e6,
        autoCloseBrackets: true,
        matchBrackets: true,
        showCursorWhenSelecting: true,
        readOnly: r10 ? "nocursor" : false,
        foldGutter: true,
        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
        extraKeys: Ze5
      });
      b7.addKeyMap({
        "Cmd-Space"() {
          b7.showHint({ completeSingle: false, container: d14 });
        },
        "Ctrl-Space"() {
          b7.showHint({ completeSingle: false, container: d14 });
        },
        "Alt-Space"() {
          b7.showHint({ completeSingle: false, container: d14 });
        },
        "Shift-Space"() {
          b7.showHint({ completeSingle: false, container: d14 });
        }
      }), b7.on("keyup", (N6, L3) => {
        const { code: x7, key: w6, shiftKey: V5 } = L3, B3 = x7.startsWith("Key"), _5 = !V5 && x7.startsWith("Digit");
        (B3 || _5 || w6 === "_" || w6 === '"') && N6.execCommand("autocomplete");
      }), h10(b7);
    }), () => {
      g5 = false;
    };
  }, [e6, c16, r10, h10]), Ge6(i10, "keyMap", t15), Kt(
    i10,
    n7,
    f13 ? He6 : null,
    "headers",
    Ce4
  ), te4(i10, ["Cmd-Enter", "Ctrl-Enter"], p10 == null ? void 0 : p10.run), te4(i10, ["Shift-Ctrl-P"], y9), te4(i10, ["Shift-Ctrl-M"], m12), u10;
}
s17(Ce4, "useHeaderEditor");
var He6 = "headers";
var ao2 = Array.from({ length: 11 }, (e6, t15) => String.fromCharCode(8192 + t15)).concat(["\u2028", "\u2029", " ", " "]);
var co = new RegExp("[" + ao2.join("") + "]", "g");
function uo(e6) {
  return e6.replace(co, " ");
}
s17(uo, "normalizeWhitespace");
function se5({
  editorTheme: e6 = $e6,
  keyMap: t15 = _e4,
  onClickReference: n7,
  onCopyQuery: r10,
  onEdit: l11,
  readOnly: c16 = false
} = {}, i10) {
  const { schema: h10 } = re6({
    nonNull: true,
    caller: i10 || se5
  }), {
    externalFragments: f13,
    initialQuery: p10,
    queryEditor: m12,
    setOperationName: y9,
    setQueryEditor: u10,
    validationRules: g5,
    variableEditor: C5,
    updateActiveTabValues: d14
  } = j6({
    nonNull: true,
    caller: i10 || se5
  }), b7 = We5(), N6 = de4(), L3 = ie5(), x7 = at(), w6 = Yt({ caller: i10 || se5, onCopyQuery: r10 }), V5 = be6({ caller: i10 || se5 }), B3 = Qe5({ caller: i10 || se5 }), _5 = (0, import_react97.useRef)(null), D7 = (0, import_react97.useRef)(), O4 = (0, import_react97.useRef)(() => {
  });
  (0, import_react97.useEffect)(() => {
    O4.current = (A4) => {
      if (!(!L3 || !x7)) {
        switch (x7.setVisiblePlugin(ve3), A4.kind) {
          case "Type": {
            L3.push({ name: A4.type.name, def: A4.type });
            break;
          }
          case "Field": {
            L3.push({ name: A4.field.name, def: A4.field });
            break;
          }
          case "Argument": {
            A4.field && L3.push({ name: A4.field.name, def: A4.field });
            break;
          }
          case "EnumValue": {
            A4.type && L3.push({ name: A4.type.name, def: A4.type });
            break;
          }
        }
        n7 == null || n7(A4);
      }
    };
  }, [L3, n7, x7]), (0, import_react97.useEffect)(() => {
    let A4 = true;
    return Se5([
      import("./comment.es-JPNOSWLK.js").then((k2) => k2.c),
      import("./search.es-E5G3JV2E.js").then((k2) => k2.s),
      import("./hint.es-HVH7IKFD.js"),
      import("./lint.es2-GQFBZIV6.js"),
      import("./info.es-TONOLKAI.js"),
      import("./jump.es-D2J6JA6E.js"),
      import("./mode.es-44XUZRKY.js")
    ]).then((k2) => {
      if (!A4)
        return;
      D7.current = k2;
      const H9 = _5.current;
      if (!H9)
        return;
      const E8 = k2(H9, {
        value: p10,
        lineNumbers: true,
        tabSize: 2,
        foldGutter: true,
        mode: "graphql",
        theme: e6,
        autoCloseBrackets: true,
        matchBrackets: true,
        showCursorWhenSelecting: true,
        readOnly: c16 ? "nocursor" : false,
        lint: {
          // @ts-expect-error
          schema: void 0,
          validationRules: null,
          // linting accepts string or FragmentDefinitionNode[]
          externalFragments: void 0
        },
        hintOptions: {
          // @ts-expect-error
          schema: void 0,
          closeOnUnfocus: false,
          completeSingle: false,
          container: H9,
          externalFragments: void 0
        },
        info: {
          schema: void 0,
          renderDescription: (v5) => Ae3.render(v5),
          onClick: (v5) => {
            O4.current(v5);
          }
        },
        jump: {
          schema: void 0,
          onClick: (v5) => {
            O4.current(v5);
          }
        },
        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
        extraKeys: {
          ...Ze5,
          "Cmd-S"() {
          },
          "Ctrl-S"() {
          }
        }
      });
      E8.addKeyMap({
        "Cmd-Space"() {
          E8.showHint({ completeSingle: true, container: H9 });
        },
        "Ctrl-Space"() {
          E8.showHint({ completeSingle: true, container: H9 });
        },
        "Alt-Space"() {
          E8.showHint({ completeSingle: true, container: H9 });
        },
        "Shift-Space"() {
          E8.showHint({ completeSingle: true, container: H9 });
        },
        "Shift-Alt-Space"() {
          E8.showHint({ completeSingle: true, container: H9 });
        }
      }), E8.on("keyup", (v5, S8) => {
        fo.test(S8.key) && v5.execCommand("autocomplete");
      });
      let Z7 = false;
      E8.on("startCompletion", () => {
        Z7 = true;
      }), E8.on("endCompletion", () => {
        Z7 = false;
      }), E8.on("keydown", (v5, S8) => {
        S8.key === "Escape" && Z7 && S8.stopPropagation();
      }), E8.on("beforeChange", (v5, S8) => {
        var R3;
        if (S8.origin === "paste") {
          const U4 = S8.text.map(uo);
          (R3 = S8.update) == null || R3.call(S8, S8.from, S8.to, U4);
        }
      }), E8.documentAST = null, E8.operationName = null, E8.operations = null, E8.variableToType = null, u10(E8);
    }), () => {
      A4 = false;
    };
  }, [e6, p10, c16, u10]), Ge6(m12, "keyMap", t15), (0, import_react97.useEffect)(() => {
    if (!m12)
      return;
    function A4(H9) {
      var v5;
      const E8 = getOperationFacts(
        h10,
        H9.getValue()
      ), Z7 = getSelectedOperationName(
        H9.operations ?? void 0,
        H9.operationName ?? void 0,
        E8 == null ? void 0 : E8.operations
      );
      return H9.documentAST = (E8 == null ? void 0 : E8.documentAST) ?? null, H9.operationName = Z7 ?? null, H9.operations = (E8 == null ? void 0 : E8.operations) ?? null, C5 && (C5.state.lint.linterOptions.variableToType = E8 == null ? void 0 : E8.variableToType, C5.options.lint.variableToType = E8 == null ? void 0 : E8.variableToType, C5.options.hintOptions.variableToType = E8 == null ? void 0 : E8.variableToType, (v5 = D7.current) == null || v5.signal(C5, "change", C5)), E8 ? { ...E8, operationName: Z7 } : null;
    }
    s17(A4, "getAndUpdateOperationFacts");
    const k2 = pe3(
      100,
      (H9) => {
        const E8 = H9.getValue();
        N6 == null || N6.set(Xt, E8);
        const Z7 = H9.operationName, v5 = A4(H9);
        (v5 == null ? void 0 : v5.operationName) !== void 0 && (N6 == null || N6.set(
          go,
          v5.operationName
        )), l11 == null || l11(E8, v5 == null ? void 0 : v5.documentAST), v5 != null && v5.operationName && Z7 !== v5.operationName && y9(v5.operationName), d14({
          query: E8,
          operationName: (v5 == null ? void 0 : v5.operationName) ?? null
        });
      }
    );
    return A4(m12), m12.on("change", k2), () => m12.off("change", k2);
  }, [
    l11,
    m12,
    h10,
    y9,
    N6,
    C5,
    d14
  ]), ho(m12, h10 ?? null, D7), mo(
    m12,
    g5 ?? null,
    D7
  ), po(
    m12,
    f13,
    D7
  ), Jt(m12, n7 || null, se5);
  const W2 = b7 == null ? void 0 : b7.run, F8 = (0, import_react97.useCallback)(() => {
    var H9;
    if (!W2 || !m12 || !m12.operations || !m12.hasFocus()) {
      W2 == null || W2();
      return;
    }
    const A4 = m12.indexFromPos(m12.getCursor());
    let k2;
    for (const E8 of m12.operations)
      E8.loc && E8.loc.start <= A4 && E8.loc.end >= A4 && (k2 = (H9 = E8.name) == null ? void 0 : H9.value);
    k2 && k2 !== m12.operationName && y9(k2), W2();
  }, [m12, W2, y9]);
  return te4(m12, ["Cmd-Enter", "Ctrl-Enter"], F8), te4(m12, ["Shift-Ctrl-C"], w6), te4(
    m12,
    [
      "Shift-Ctrl-P",
      // Shift-Ctrl-P is hard coded in Firefox for private browsing so adding an alternative to prettify
      "Shift-Ctrl-F"
    ],
    B3
  ), te4(m12, ["Shift-Ctrl-M"], V5), _5;
}
s17(se5, "useQueryEditor");
function ho(e6, t15, n7) {
  (0, import_react97.useEffect)(() => {
    if (!e6)
      return;
    const r10 = e6.options.lint.schema !== t15;
    e6.state.lint.linterOptions.schema = t15, e6.options.lint.schema = t15, e6.options.hintOptions.schema = t15, e6.options.info.schema = t15, e6.options.jump.schema = t15, r10 && n7.current && n7.current.signal(e6, "change", e6);
  }, [e6, t15, n7]);
}
s17(ho, "useSynchronizeSchema");
function mo(e6, t15, n7) {
  (0, import_react97.useEffect)(() => {
    if (!e6)
      return;
    const r10 = e6.options.lint.validationRules !== t15;
    e6.state.lint.linterOptions.validationRules = t15, e6.options.lint.validationRules = t15, r10 && n7.current && n7.current.signal(e6, "change", e6);
  }, [e6, t15, n7]);
}
s17(mo, "useSynchronizeValidationRules");
function po(e6, t15, n7) {
  const r10 = (0, import_react97.useMemo)(
    () => [...t15.values()],
    [t15]
  );
  (0, import_react97.useEffect)(() => {
    if (!e6)
      return;
    const l11 = e6.options.lint.externalFragments !== r10;
    e6.state.lint.linterOptions.externalFragments = r10, e6.options.lint.externalFragments = r10, e6.options.hintOptions.externalFragments = r10, l11 && n7.current && n7.current.signal(e6, "change", e6);
  }, [e6, r10, n7]);
}
s17(po, "useSynchronizeExternalFragments");
var fo = /^[a-zA-Z0-9_@(]$/;
var Xt = "query";
var go = "operationName";
function Co({
  defaultQuery: e6,
  defaultHeaders: t15,
  headers: n7,
  defaultTabs: r10,
  query: l11,
  variables: c16,
  storage: i10
}) {
  const h10 = i10 == null ? void 0 : i10.get(we5);
  try {
    if (!h10)
      throw new Error("Storage for tabs is empty");
    const f13 = JSON.parse(h10);
    if (yo(f13)) {
      const p10 = De6({ query: l11, variables: c16, headers: n7 });
      let m12 = -1;
      for (let y9 = 0; y9 < f13.tabs.length; y9++) {
        const u10 = f13.tabs[y9];
        u10.hash = De6({
          query: u10.query,
          variables: u10.variables,
          headers: u10.headers
        }), u10.hash === p10 && (m12 = y9);
      }
      if (m12 >= 0)
        f13.activeTabIndex = m12;
      else {
        const y9 = l11 ? ct(l11) : null;
        f13.tabs.push({
          id: rn(),
          hash: p10,
          title: y9 || ut,
          query: l11,
          variables: c16,
          headers: n7,
          operationName: y9,
          response: null
        }), f13.activeTabIndex = f13.tabs.length - 1;
      }
      return f13;
    }
    throw new Error("Storage for tabs is invalid");
  } catch {
    return {
      activeTabIndex: 0,
      tabs: (r10 || [
        {
          query: l11 ?? e6,
          variables: c16,
          headers: n7 ?? t15
        }
      ]).map(tn)
    };
  }
}
s17(Co, "getDefaultTabState");
function yo(e6) {
  return e6 && typeof e6 == "object" && !Array.isArray(e6) && bo(e6, "activeTabIndex") && "tabs" in e6 && Array.isArray(e6.tabs) && e6.tabs.every(vo);
}
s17(yo, "isTabsState");
function vo(e6) {
  return e6 && typeof e6 == "object" && !Array.isArray(e6) && xt(e6, "id") && xt(e6, "title") && fe4(e6, "query") && fe4(e6, "variables") && fe4(e6, "headers") && fe4(e6, "operationName") && fe4(e6, "response");
}
s17(vo, "isTabState");
function bo(e6, t15) {
  return t15 in e6 && typeof e6[t15] == "number";
}
s17(bo, "hasNumberKey");
function xt(e6, t15) {
  return t15 in e6 && typeof e6[t15] == "string";
}
s17(xt, "hasStringKey");
function fe4(e6, t15) {
  return t15 in e6 && (typeof e6[t15] == "string" || e6[t15] === null);
}
s17(fe4, "hasStringOrNullKey");
function wo({
  queryEditor: e6,
  variableEditor: t15,
  headerEditor: n7,
  responseEditor: r10
}) {
  return (0, import_react97.useCallback)(
    (l11) => {
      const c16 = (e6 == null ? void 0 : e6.getValue()) ?? null, i10 = (t15 == null ? void 0 : t15.getValue()) ?? null, h10 = (n7 == null ? void 0 : n7.getValue()) ?? null, f13 = (e6 == null ? void 0 : e6.operationName) ?? null, p10 = (r10 == null ? void 0 : r10.getValue()) ?? null;
      return nn(l11, {
        query: c16,
        variables: i10,
        headers: h10,
        response: p10,
        operationName: f13
      });
    },
    [e6, t15, n7, r10]
  );
}
s17(wo, "useSynchronizeActiveTabValues");
function en(e6, t15 = false) {
  return JSON.stringify(
    e6,
    (n7, r10) => n7 === "hash" || n7 === "response" || !t15 && n7 === "headers" ? null : r10
  );
}
s17(en, "serializeTabState");
function xo({
  storage: e6,
  shouldPersistHeaders: t15
}) {
  const n7 = (0, import_react97.useMemo)(
    () => pe3(500, (r10) => {
      e6 == null || e6.set(we5, r10);
    }),
    [e6]
  );
  return (0, import_react97.useCallback)(
    (r10) => {
      n7(en(r10, t15));
    },
    [t15, n7]
  );
}
s17(xo, "useStoreTabs");
function Eo({
  queryEditor: e6,
  variableEditor: t15,
  headerEditor: n7,
  responseEditor: r10
}) {
  return (0, import_react97.useCallback)(
    ({
      query: l11,
      variables: c16,
      headers: i10,
      response: h10
    }) => {
      e6 == null || e6.setValue(l11 ?? ""), t15 == null || t15.setValue(c16 ?? ""), n7 == null || n7.setValue(i10 ?? ""), r10 == null || r10.setValue(h10 ?? "");
    },
    [n7, e6, r10, t15]
  );
}
s17(Eo, "useSetEditorValues");
function tn({
  query: e6 = null,
  variables: t15 = null,
  headers: n7 = null
} = {}) {
  return {
    id: rn(),
    hash: De6({ query: e6, variables: t15, headers: n7 }),
    title: e6 && ct(e6) || ut,
    query: e6,
    variables: t15,
    headers: n7,
    operationName: null,
    response: null
  };
}
s17(tn, "createTab");
function nn(e6, t15) {
  return {
    ...e6,
    tabs: e6.tabs.map((n7, r10) => {
      if (r10 !== e6.activeTabIndex)
        return n7;
      const l11 = { ...n7, ...t15 };
      return {
        ...l11,
        hash: De6(l11),
        title: l11.operationName || (l11.query ? ct(l11.query) : void 0) || ut
      };
    })
  };
}
s17(nn, "setPropertiesInActiveTab");
function rn() {
  const e6 = s17(() => Math.floor((1 + Math.random()) * 65536).toString(16).slice(1), "s4");
  return `${e6()}${e6()}-${e6()}-${e6()}-${e6()}-${e6()}${e6()}${e6()}`;
}
s17(rn, "guid");
function De6(e6) {
  return [e6.query ?? "", e6.variables ?? "", e6.headers ?? ""].join("|");
}
s17(De6, "hashFromTabContents");
function ct(e6) {
  const n7 = /^(?!#).*(query|subscription|mutation)\s+([a-zA-Z0-9_]+)/m.exec(e6);
  return (n7 == null ? void 0 : n7[2]) ?? null;
}
s17(ct, "fuzzyExtractOperationName");
function Lo(e6) {
  const t15 = e6 == null ? void 0 : e6.get(we5);
  if (t15) {
    const n7 = JSON.parse(t15);
    e6 == null || e6.set(
      we5,
      JSON.stringify(
        n7,
        (r10, l11) => r10 === "headers" ? null : l11
      )
    );
  }
}
s17(Lo, "clearHeadersFromTabs");
var ut = "<untitled>";
var we5 = "tabState";
function me4({
  editorTheme: e6 = $e6,
  keyMap: t15 = _e4,
  onClickReference: n7,
  onEdit: r10,
  readOnly: l11 = false
} = {}, c16) {
  const { initialVariables: i10, variableEditor: h10, setVariableEditor: f13 } = j6({
    nonNull: true,
    caller: c16 || me4
  }), p10 = We5(), m12 = be6({ caller: c16 || me4 }), y9 = Qe5({ caller: c16 || me4 }), u10 = (0, import_react97.useRef)(null), g5 = (0, import_react97.useRef)();
  return (0, import_react97.useEffect)(() => {
    let C5 = true;
    return Se5([
      import("./hint.es2-4SNDD7FM.js"),
      import("./lint.es3-UWDFH3SV.js"),
      import("./mode.es2-MKTM4SZZ.js")
    ]).then((d14) => {
      if (!C5)
        return;
      g5.current = d14;
      const b7 = u10.current;
      if (!b7)
        return;
      const N6 = d14(b7, {
        value: i10,
        lineNumbers: true,
        tabSize: 2,
        mode: "graphql-variables",
        theme: e6,
        autoCloseBrackets: true,
        matchBrackets: true,
        showCursorWhenSelecting: true,
        readOnly: l11 ? "nocursor" : false,
        foldGutter: true,
        lint: {
          // @ts-expect-error
          variableToType: void 0
        },
        hintOptions: {
          closeOnUnfocus: false,
          completeSingle: false,
          container: b7,
          // @ts-expect-error
          variableToType: void 0
        },
        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
        extraKeys: Ze5
      });
      N6.addKeyMap({
        "Cmd-Space"() {
          N6.showHint({ completeSingle: false, container: b7 });
        },
        "Ctrl-Space"() {
          N6.showHint({ completeSingle: false, container: b7 });
        },
        "Alt-Space"() {
          N6.showHint({ completeSingle: false, container: b7 });
        },
        "Shift-Space"() {
          N6.showHint({ completeSingle: false, container: b7 });
        }
      }), N6.on("keyup", (L3, x7) => {
        const { code: w6, key: V5, shiftKey: B3 } = x7, _5 = w6.startsWith("Key"), D7 = !B3 && w6.startsWith("Digit");
        (_5 || D7 || V5 === "_" || V5 === '"') && L3.execCommand("autocomplete");
      }), f13(N6);
    }), () => {
      C5 = false;
    };
  }, [e6, i10, l11, f13]), Ge6(h10, "keyMap", t15), Kt(
    h10,
    r10,
    on,
    "variables",
    me4
  ), Jt(h10, n7 || null, me4), te4(h10, ["Cmd-Enter", "Ctrl-Enter"], p10 == null ? void 0 : p10.run), te4(h10, ["Shift-Ctrl-P"], y9), te4(h10, ["Shift-Ctrl-M"], m12), u10;
}
s17(me4, "useVariableEditor");
var on = "variables";
var ln = ce4("EditorContext");
function So(e6) {
  const t15 = de4(), [n7, r10] = (0, import_react97.useState)(
    null
  ), [l11, c16] = (0, import_react97.useState)(null), [i10, h10] = (0, import_react97.useState)(
    null
  ), [f13, p10] = (0, import_react97.useState)(
    null
  ), [m12, y9] = (0, import_react97.useState)(
    () => {
      const v5 = (t15 == null ? void 0 : t15.get(ze5)) !== null;
      return e6.shouldPersistHeaders !== false && v5 ? (t15 == null ? void 0 : t15.get(ze5)) === "true" : !!e6.shouldPersistHeaders;
    }
  );
  Me4(n7, e6.headers), Me4(l11, e6.query), Me4(i10, e6.response), Me4(f13, e6.variables);
  const u10 = xo({
    storage: t15,
    shouldPersistHeaders: m12
  }), [g5] = (0, import_react97.useState)(() => {
    const v5 = e6.query ?? (t15 == null ? void 0 : t15.get(Xt)) ?? null, S8 = e6.variables ?? (t15 == null ? void 0 : t15.get(on)) ?? null, R3 = e6.headers ?? (t15 == null ? void 0 : t15.get(He6)) ?? null, U4 = e6.response ?? "", Y5 = Co({
      query: v5,
      variables: S8,
      headers: R3,
      defaultTabs: e6.defaultTabs,
      defaultQuery: e6.defaultQuery || No,
      defaultHeaders: e6.defaultHeaders,
      storage: t15
    });
    return u10(Y5), {
      query: v5 ?? (Y5.activeTabIndex === 0 ? Y5.tabs[0].query : null) ?? "",
      variables: S8 ?? "",
      headers: R3 ?? e6.defaultHeaders ?? "",
      response: U4,
      tabState: Y5
    };
  }), [C5, d14] = (0, import_react97.useState)(g5.tabState), b7 = (0, import_react97.useCallback)(
    (v5) => {
      if (v5) {
        t15 == null || t15.set(He6, (n7 == null ? void 0 : n7.getValue()) ?? "");
        const S8 = en(C5, true);
        t15 == null || t15.set(we5, S8);
      } else
        t15 == null || t15.set(He6, ""), Lo(t15);
      y9(v5), t15 == null || t15.set(ze5, v5.toString());
    },
    [t15, C5, n7]
  ), N6 = (0, import_react97.useRef)();
  (0, import_react97.useEffect)(() => {
    const v5 = !!e6.shouldPersistHeaders;
    N6.current !== v5 && (b7(v5), N6.current = v5);
  }, [e6.shouldPersistHeaders, b7]);
  const L3 = wo({
    queryEditor: l11,
    variableEditor: f13,
    headerEditor: n7,
    responseEditor: i10
  }), x7 = Eo({
    queryEditor: l11,
    variableEditor: f13,
    headerEditor: n7,
    responseEditor: i10
  }), { onTabChange: w6, defaultHeaders: V5, children: B3 } = e6, _5 = (0, import_react97.useCallback)(() => {
    d14((v5) => {
      const S8 = L3(v5), R3 = {
        tabs: [...S8.tabs, tn({ headers: V5 })],
        activeTabIndex: S8.tabs.length
      };
      return u10(R3), x7(R3.tabs[R3.activeTabIndex]), w6 == null || w6(R3), R3;
    });
  }, [
    V5,
    w6,
    x7,
    u10,
    L3
  ]), D7 = (0, import_react97.useCallback)(
    (v5) => {
      d14((S8) => {
        const R3 = {
          ...S8,
          activeTabIndex: v5
        };
        return u10(R3), x7(R3.tabs[R3.activeTabIndex]), w6 == null || w6(R3), R3;
      });
    },
    [w6, x7, u10]
  ), O4 = (0, import_react97.useCallback)(
    (v5) => {
      d14((S8) => {
        const R3 = S8.tabs[S8.activeTabIndex], U4 = {
          tabs: v5,
          activeTabIndex: v5.indexOf(R3)
        };
        return u10(U4), x7(U4.tabs[U4.activeTabIndex]), w6 == null || w6(U4), U4;
      });
    },
    [w6, x7, u10]
  ), W2 = (0, import_react97.useCallback)(
    (v5) => {
      d14((S8) => {
        const R3 = {
          tabs: S8.tabs.filter((U4, Y5) => v5 !== Y5),
          activeTabIndex: Math.max(S8.activeTabIndex - 1, 0)
        };
        return u10(R3), x7(R3.tabs[R3.activeTabIndex]), w6 == null || w6(R3), R3;
      });
    },
    [w6, x7, u10]
  ), F8 = (0, import_react97.useCallback)(
    (v5) => {
      d14((S8) => {
        const R3 = nn(S8, v5);
        return u10(R3), w6 == null || w6(R3), R3;
      });
    },
    [w6, u10]
  ), { onEditOperationName: A4 } = e6, k2 = (0, import_react97.useCallback)(
    (v5) => {
      l11 && (l11.operationName = v5, F8({ operationName: v5 }), A4 == null || A4(v5));
    },
    [A4, l11, F8]
  ), H9 = (0, import_react97.useMemo)(() => {
    const v5 = /* @__PURE__ */ new Map();
    if (Array.isArray(e6.externalFragments))
      for (const S8 of e6.externalFragments)
        v5.set(S8.name.value, S8);
    else if (typeof e6.externalFragments == "string")
      visit(parse(e6.externalFragments, {}), {
        FragmentDefinition(S8) {
          v5.set(S8.name.value, S8);
        }
      });
    else if (e6.externalFragments)
      throw new Error(
        "The `externalFragments` prop must either be a string that contains the fragment definitions in SDL or a list of FragmentDefinitionNode objects."
      );
    return v5;
  }, [e6.externalFragments]), E8 = (0, import_react97.useMemo)(
    () => e6.validationRules || [],
    [e6.validationRules]
  ), Z7 = (0, import_react97.useMemo)(
    () => ({
      ...C5,
      addTab: _5,
      changeTab: D7,
      moveTab: O4,
      closeTab: W2,
      updateActiveTabValues: F8,
      headerEditor: n7,
      queryEditor: l11,
      responseEditor: i10,
      variableEditor: f13,
      setHeaderEditor: r10,
      setQueryEditor: c16,
      setResponseEditor: h10,
      setVariableEditor: p10,
      setOperationName: k2,
      initialQuery: g5.query,
      initialVariables: g5.variables,
      initialHeaders: g5.headers,
      initialResponse: g5.response,
      externalFragments: H9,
      validationRules: E8,
      shouldPersistHeaders: m12,
      setShouldPersistHeaders: b7
    }),
    [
      C5,
      _5,
      D7,
      O4,
      W2,
      F8,
      n7,
      l11,
      i10,
      f13,
      k2,
      g5,
      H9,
      E8,
      m12,
      b7
    ]
  );
  return (0, import_jsx_runtime.jsx)(ln.Provider, { value: Z7, children: B3 });
}
s17(So, "EditorContextProvider");
var j6 = ue5(ln);
var ze5 = "shouldPersistHeaders";
var No = `# Welcome to GraphiQL
#
# GraphiQL is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# Type queries into this side of the screen, and you will see intelligent
# typeaheads aware of the current GraphQL type schema and live syntax and
# validation errors highlighted within the text.
#
# GraphQL queries typically start with a "{" character. Lines that start
# with a # are ignored.
#
# An example GraphQL query might look like:
#
#     {
#       field(arg: "value") {
#         subField
#       }
#     }
#
# Keyboard shortcuts:
#
#   Prettify query:  Shift-Ctrl-P (or press the prettify button)
#
#  Merge fragments:  Shift-Ctrl-M (or press the merge button)
#
#        Run Query:  Ctrl-Enter (or press the play button)
#
#    Auto Complete:  Ctrl-Space (or just start typing)
#

`;
function Et({ isHidden: e6, ...t15 }) {
  const { headerEditor: n7 } = j6({
    nonNull: true,
    caller: Et
  }), r10 = Ce4(t15, Et);
  return (0, import_react97.useEffect)(() => {
    e6 || n7 == null || n7.refresh();
  }, [n7, e6]), (0, import_jsx_runtime.jsx)("div", { className: clsx("graphiql-editor", e6 && "hidden"), ref: r10 });
}
s17(Et, "HeaderEditor");
function lt(e6) {
  var f13;
  const [t15, n7] = (0, import_react97.useState)({
    width: null,
    height: null
  }), [r10, l11] = (0, import_react97.useState)(null), c16 = (0, import_react97.useRef)(null), i10 = (f13 = sn(e6.token)) == null ? void 0 : f13.href;
  (0, import_react97.useEffect)(() => {
    if (c16.current) {
      if (!i10) {
        n7({ width: null, height: null }), l11(null);
        return;
      }
      fetch(i10, { method: "HEAD" }).then((p10) => {
        l11(p10.headers.get("Content-Type"));
      }).catch(() => {
        l11(null);
      });
    }
  }, [i10]);
  const h10 = t15.width !== null && t15.height !== null ? (0, import_jsx_runtime.jsxs)("div", { children: [
    t15.width,
    "x",
    t15.height,
    r10 === null ? null : " " + r10
  ] }) : null;
  return (0, import_jsx_runtime.jsxs)("div", { children: [
    (0, import_jsx_runtime.jsx)(
      "img",
      {
        onLoad: () => {
          var p10, m12;
          n7({
            width: ((p10 = c16.current) == null ? void 0 : p10.naturalWidth) ?? null,
            height: ((m12 = c16.current) == null ? void 0 : m12.naturalHeight) ?? null
          });
        },
        ref: c16,
        src: i10
      }
    ),
    h10
  ] });
}
s17(lt, "ImagePreview");
lt.shouldRender = s17(function(t15) {
  const n7 = sn(t15);
  return n7 ? ko(n7) : false;
}, "shouldRender");
function sn(e6) {
  if (e6.type !== "string")
    return;
  const t15 = e6.string.slice(1).slice(0, -1).trim();
  try {
    const { location: n7 } = window;
    return new URL(t15, n7.protocol + "//" + n7.host);
  } catch {
    return;
  }
}
s17(sn, "tokenToURL");
function ko(e6) {
  return /(bmp|gif|jpeg|jpg|png|svg)$/.test(e6.pathname);
}
s17(ko, "isImageURL");
function To(e6) {
  const t15 = se5(e6, To);
  return (0, import_jsx_runtime.jsx)("div", { className: "graphiql-editor", ref: t15 });
}
s17(To, "QueryEditor");
function it3({
  responseTooltip: e6,
  editorTheme: t15 = $e6,
  keyMap: n7 = _e4
} = {}, r10) {
  const { fetchError: l11, validationErrors: c16 } = re6({
    nonNull: true,
    caller: r10 || it3
  }), { initialResponse: i10, responseEditor: h10, setResponseEditor: f13 } = j6({
    nonNull: true,
    caller: r10 || it3
  }), p10 = (0, import_react97.useRef)(null), m12 = (0, import_react97.useRef)(
    e6
  );
  return (0, import_react97.useEffect)(() => {
    m12.current = e6;
  }, [e6]), (0, import_react97.useEffect)(() => {
    let y9 = true;
    return Se5(
      [
        import("./foldgutter.es-VHUJSCMX.js").then((u10) => u10.f),
        import("./brace-fold.es-LATEURTW.js").then((u10) => u10.b),
        import("./dialog.es-NEX57C4B.js").then((u10) => u10.d),
        import("./search.es-E5G3JV2E.js").then((u10) => u10.s),
        import("./searchcursor.es-YZM3KNZZ.js").then((u10) => u10.s),
        import("./jump-to-line.es-JVGNG6HE.js").then((u10) => u10.j),
        // @ts-expect-error
        import("./sublime.es-H6RA4ZFU.js").then((u10) => u10.s),
        import("./mode.es3-56LCZ7FG.js"),
        import("./info-addon.es-T4LQP5E4.js")
      ],
      { useCommonAddons: false }
    ).then((u10) => {
      if (!y9)
        return;
      const g5 = document.createElement("div");
      u10.registerHelper(
        "info",
        "graphql-results",
        (b7, N6, L3, x7) => {
          const w6 = [], V5 = m12.current;
          return V5 && w6.push(
            (0, import_jsx_runtime.jsx)(V5, { pos: x7, token: b7 })
          ), lt.shouldRender(b7) && w6.push(
            (0, import_jsx_runtime.jsx)(lt, { token: b7 }, "image-preview")
          ), w6.length ? (import_react_dom2.default.render(w6, g5), g5) : (import_react_dom2.default.unmountComponentAtNode(g5), null);
        }
      );
      const C5 = p10.current;
      if (!C5)
        return;
      const d14 = u10(C5, {
        value: i10,
        lineWrapping: true,
        readOnly: true,
        theme: t15,
        mode: "graphql-results",
        foldGutter: true,
        gutters: ["CodeMirror-foldgutter"],
        // @ts-expect-error
        info: true,
        extraKeys: Ze5
      });
      f13(d14);
    }), () => {
      y9 = false;
    };
  }, [t15, i10, f13]), Ge6(h10, "keyMap", n7), (0, import_react97.useEffect)(() => {
    l11 && (h10 == null || h10.setValue(l11)), c16.length > 0 && (h10 == null || h10.setValue(formatError(c16)));
  }, [h10, l11, c16]), p10;
}
s17(it3, "useResponseEditor");
function Mo(e6) {
  const t15 = it3(e6, Mo);
  return (0, import_jsx_runtime.jsx)(
    "section",
    {
      className: "result-window",
      "aria-label": "Result Window",
      "aria-live": "polite",
      "aria-atomic": "true",
      ref: t15
    }
  );
}
s17(Mo, "ResponseEditor");
function Lt({ isHidden: e6, ...t15 }) {
  const { variableEditor: n7 } = j6({
    nonNull: true,
    caller: Lt
  }), r10 = me4(t15, Lt);
  return (0, import_react97.useEffect)(() => {
    n7 && !e6 && n7.refresh();
  }, [n7, e6]), (0, import_jsx_runtime.jsx)("div", { className: clsx("graphiql-editor", e6 && "hidden"), ref: r10 });
}
s17(Lt, "VariableEditor");
function il({
  children: e6,
  dangerouslyAssumeSchemaIsValid: t15,
  defaultQuery: n7,
  defaultHeaders: r10,
  defaultTabs: l11,
  externalFragments: c16,
  fetcher: i10,
  getDefaultFieldNames: h10,
  headers: f13,
  inputValueDeprecation: p10,
  introspectionQueryName: m12,
  maxHistoryLength: y9,
  onEditOperationName: u10,
  onSchemaChange: g5,
  onTabChange: C5,
  onTogglePluginVisibility: d14,
  operationName: b7,
  plugins: N6,
  query: L3,
  response: x7,
  schema: w6,
  schemaDescription: V5,
  shouldPersistHeaders: B3,
  storage: _5,
  validationRules: D7,
  variables: O4,
  visiblePlugin: W2
}) {
  return (0, import_jsx_runtime.jsx)(Fn, { storage: _5, children: (0, import_jsx_runtime.jsx)(Wr, { maxHistoryLength: y9, children: (0, import_jsx_runtime.jsx)(
    So,
    {
      defaultQuery: n7,
      defaultHeaders: r10,
      defaultTabs: l11,
      externalFragments: c16,
      headers: f13,
      onEditOperationName: u10,
      onTabChange: C5,
      query: L3,
      response: x7,
      shouldPersistHeaders: B3,
      validationRules: D7,
      variables: O4,
      children: (0, import_jsx_runtime.jsx)(
        Zt,
        {
          dangerouslyAssumeSchemaIsValid: t15,
          fetcher: i10,
          inputValueDeprecation: p10,
          introspectionQueryName: m12,
          onSchemaChange: g5,
          schema: w6,
          schemaDescription: V5,
          children: (0, import_jsx_runtime.jsx)(
            et3,
            {
              getDefaultFieldNames: h10,
              fetcher: i10,
              operationName: b7,
              children: (0, import_jsx_runtime.jsx)(Qt, { children: (0, import_jsx_runtime.jsx)(
                io2,
                {
                  onTogglePluginVisibility: d14,
                  plugins: N6,
                  visiblePlugin: W2,
                  children: e6
                }
              ) })
            }
          )
        }
      )
    }
  ) }) });
}
s17(il, "GraphiQLProvider");
function sl() {
  const e6 = de4(), [t15, n7] = (0, import_react97.useState)(() => {
    if (!e6)
      return null;
    const l11 = e6.get(Ue4);
    switch (l11) {
      case "light":
        return "light";
      case "dark":
        return "dark";
      default:
        return typeof l11 == "string" && e6.set(Ue4, ""), null;
    }
  });
  (0, import_react97.useLayoutEffect)(() => {
    typeof window > "u" || (document.body.classList.remove("graphiql-light", "graphiql-dark"), t15 && document.body.classList.add(`graphiql-${t15}`));
  }, [t15]);
  const r10 = (0, import_react97.useCallback)(
    (l11) => {
      e6 == null || e6.set(Ue4, l11 || ""), n7(l11);
    },
    [e6]
  );
  return (0, import_react97.useMemo)(() => ({ theme: t15, setTheme: r10 }), [t15, r10]);
}
s17(sl, "useTheme");
var Ue4 = "theme";
function al({
  defaultSizeRelation: e6 = Vo,
  direction: t15,
  initiallyHidden: n7,
  onHiddenElementChange: r10,
  sizeThresholdFirst: l11 = 100,
  sizeThresholdSecond: c16 = 100,
  storageKey: i10
}) {
  const h10 = de4(), f13 = (0, import_react97.useMemo)(
    () => pe3(500, (L3) => {
      i10 && (h10 == null || h10.set(i10, L3));
    }),
    [h10, i10]
  ), [p10, m12] = (0, import_react97.useState)(
    () => {
      const L3 = i10 && (h10 == null ? void 0 : h10.get(i10));
      return L3 === Ve4 || n7 === "first" ? "first" : L3 === Re4 || n7 === "second" ? "second" : null;
    }
  ), y9 = (0, import_react97.useCallback)(
    (L3) => {
      L3 !== p10 && (m12(L3), r10 == null || r10(L3));
    },
    [p10, r10]
  ), u10 = (0, import_react97.useRef)(null), g5 = (0, import_react97.useRef)(null), C5 = (0, import_react97.useRef)(null), d14 = (0, import_react97.useRef)(`${e6}`);
  (0, import_react97.useLayoutEffect)(() => {
    const L3 = i10 && (h10 == null ? void 0 : h10.get(i10)) || d14.current;
    u10.current && (u10.current.style.display = "flex", u10.current.style.flex = L3 === Ve4 || L3 === Re4 ? d14.current : L3), C5.current && (C5.current.style.display = "flex", C5.current.style.flex = "1"), g5.current && (g5.current.style.display = "flex");
  }, [t15, h10, i10]);
  const b7 = (0, import_react97.useCallback)((L3) => {
    const x7 = L3 === "first" ? u10.current : C5.current;
    if (x7 && (x7.style.left = "-1000px", x7.style.position = "absolute", x7.style.opacity = "0", x7.style.height = "500px", x7.style.width = "500px", u10.current)) {
      const w6 = parseFloat(u10.current.style.flex);
      (!Number.isFinite(w6) || w6 < 1) && (u10.current.style.flex = "1");
    }
  }, []), N6 = (0, import_react97.useCallback)(
    (L3) => {
      const x7 = L3 === "first" ? u10.current : C5.current;
      if (x7 && (x7.style.width = "", x7.style.height = "", x7.style.opacity = "", x7.style.position = "", x7.style.left = "", h10 && i10)) {
        const w6 = h10.get(i10);
        u10.current && w6 !== Ve4 && w6 !== Re4 && (u10.current.style.flex = w6 || d14.current);
      }
    },
    [h10, i10]
  );
  return (0, import_react97.useLayoutEffect)(() => {
    p10 === "first" ? b7("first") : N6("first"), p10 === "second" ? b7("second") : N6("second");
  }, [p10, b7, N6]), (0, import_react97.useEffect)(() => {
    if (!g5.current || !u10.current || !C5.current)
      return;
    const L3 = g5.current, x7 = u10.current, w6 = x7.parentElement, V5 = t15 === "horizontal" ? "clientX" : "clientY", B3 = t15 === "horizontal" ? "left" : "top", _5 = t15 === "horizontal" ? "right" : "bottom", D7 = t15 === "horizontal" ? "clientWidth" : "clientHeight";
    function O4(F8) {
      F8.preventDefault();
      const A4 = F8[V5] - L3.getBoundingClientRect()[B3];
      function k2(E8) {
        if (E8.buttons === 0)
          return H9();
        const Z7 = E8[V5] - w6.getBoundingClientRect()[B3] - A4, v5 = w6.getBoundingClientRect()[_5] - E8[V5] + A4 - L3[D7];
        if (Z7 < l11)
          y9("first"), f13(Ve4);
        else if (v5 < c16)
          y9("second"), f13(Re4);
        else {
          y9(null);
          const S8 = `${Z7 / v5}`;
          x7.style.flex = S8, f13(S8);
        }
      }
      s17(k2, "handleMouseMove");
      function H9() {
        document.removeEventListener("mousemove", k2), document.removeEventListener("mouseup", H9);
      }
      s17(H9, "handleMouseUp"), document.addEventListener("mousemove", k2), document.addEventListener("mouseup", H9);
    }
    s17(O4, "handleMouseDown"), L3.addEventListener("mousedown", O4);
    function W2() {
      u10.current && (u10.current.style.flex = d14.current), f13(d14.current), y9(null);
    }
    return s17(W2, "reset"), L3.addEventListener("dblclick", W2), () => {
      L3.removeEventListener("mousedown", O4), L3.removeEventListener("dblclick", W2);
    };
  }, [
    t15,
    y9,
    l11,
    c16,
    f13
  ]), (0, import_react97.useMemo)(
    () => ({
      dragBarRef: g5,
      hiddenElement: p10,
      firstRef: u10,
      setHiddenElement: m12,
      secondRef: C5
    }),
    [p10, m12]
  );
}
s17(al, "useDragResize");
var Vo = 1;
var Ve4 = "hide-first";
var Re4 = "hide-second";
var Ro = (0, import_react97.forwardRef)(({ label: e6, onClick: t15, ...n7 }, r10) => {
  const [l11, c16] = (0, import_react97.useState)(null), i10 = (0, import_react97.useCallback)(
    (h10) => {
      try {
        t15 == null || t15(h10), c16(null);
      } catch (f13) {
        c16(
          f13 instanceof Error ? f13 : new Error(`Toolbar button click failed: ${f13}`)
        );
      }
    },
    [t15]
  );
  return (0, import_jsx_runtime.jsx)(ae3, { label: e6, children: (0, import_jsx_runtime.jsx)(
    X6,
    {
      ...n7,
      ref: r10,
      type: "button",
      className: clsx(
        "graphiql-toolbar-button",
        l11 && "error",
        n7.className
      ),
      onClick: i10,
      "aria-label": l11 ? l11.message : e6,
      "aria-invalid": l11 ? "true" : n7["aria-invalid"]
    }
  ) });
});
Ro.displayName = "ToolbarButton";
function St() {
  const { queryEditor: e6, setOperationName: t15 } = j6({
    nonNull: true,
    caller: St
  }), { isFetching: n7, isSubscribed: r10, operationName: l11, run: c16, stop: i10 } = We5({
    nonNull: true,
    caller: St
  }), h10 = (e6 == null ? void 0 : e6.operations) || [], f13 = h10.length > 1 && typeof l11 != "string", p10 = n7 || r10, m12 = `${p10 ? "Stop" : "Execute"} query (Ctrl-Enter)`, y9 = {
    type: "button",
    className: "graphiql-execute-button",
    children: p10 ? (0, import_jsx_runtime.jsx)(Pr, {}) : (0, import_jsx_runtime.jsx)(Vr, {}),
    "aria-label": m12
  };
  return f13 && !p10 ? (0, import_jsx_runtime.jsxs)(le3, { children: [
    (0, import_jsx_runtime.jsx)(ae3, { label: m12, children: (0, import_jsx_runtime.jsx)(le3.Button, { ...y9 }) }),
    (0, import_jsx_runtime.jsx)(le3.Content, { children: h10.map((u10, g5) => {
      const C5 = u10.name ? u10.name.value : `<Unnamed ${u10.operation}>`;
      return (0, import_jsx_runtime.jsx)(
        le3.Item,
        {
          onSelect: () => {
            var b7;
            const d14 = (b7 = u10.name) == null ? void 0 : b7.value;
            e6 && d14 && d14 !== e6.operationName && t15(d14), c16();
          },
          children: C5
        },
        `${C5}-${g5}`
      );
    }) })
  ] }) : (0, import_jsx_runtime.jsx)(ae3, { label: m12, children: (0, import_jsx_runtime.jsx)(
    "button",
    {
      ...y9,
      onClick: () => {
        p10 ? i10() : c16();
      }
    }
  ) });
}
s17(St, "ExecuteButton");
var Ho = s17(({
  button: e6,
  children: t15,
  label: n7,
  ...r10
}) => (0, import_jsx_runtime.jsxs)(le3, { ...r10, children: [
  (0, import_jsx_runtime.jsx)(ae3, { label: n7, children: (0, import_jsx_runtime.jsx)(
    le3.Button,
    {
      className: clsx(
        "graphiql-un-styled graphiql-toolbar-menu",
        r10.className
      ),
      "aria-label": n7,
      children: e6
    }
  ) }),
  (0, import_jsx_runtime.jsx)(le3.Content, { children: t15 })
] }), "ToolbarMenuRoot");
var cl = Le3(Ho, {
  Item: le3.Item
});

// node_modules/graphiql/esm/components/GraphiQL.js
var import_react99 = __toESM(require_react());
var __assign2 = function() {
  __assign2 = Object.assign || function(t15) {
    for (var s18, i10 = 1, n7 = arguments.length; i10 < n7; i10++) {
      s18 = arguments[i10];
      for (var p10 in s18)
        if (Object.prototype.hasOwnProperty.call(s18, p10))
          t15[p10] = s18[p10];
    }
    return t15;
  };
  return __assign2.apply(this, arguments);
};
var __rest2 = function(s18, e6) {
  var t15 = {};
  for (var p10 in s18)
    if (Object.prototype.hasOwnProperty.call(s18, p10) && e6.indexOf(p10) < 0)
      t15[p10] = s18[p10];
  if (s18 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i10 = 0, p10 = Object.getOwnPropertySymbols(s18); i10 < p10.length; i10++) {
      if (e6.indexOf(p10[i10]) < 0 && Object.prototype.propertyIsEnumerable.call(s18, p10[i10]))
        t15[p10[i10]] = s18[p10[i10]];
    }
  return t15;
};
var __read2 = function(o13, n7) {
  var m12 = typeof Symbol === "function" && o13[Symbol.iterator];
  if (!m12)
    return o13;
  var i10 = m12.call(o13), r10, ar2 = [], e6;
  try {
    while ((n7 === void 0 || n7-- > 0) && !(r10 = i10.next()).done)
      ar2.push(r10.value);
  } catch (error2) {
    e6 = { error: error2 };
  } finally {
    try {
      if (r10 && !r10.done && (m12 = i10["return"]))
        m12.call(i10);
    } finally {
      if (e6)
        throw e6.error;
    }
  }
  return ar2;
};
var majorVersion = parseInt(import_react99.default.version.slice(0, 2), 10);
if (majorVersion < 16) {
  throw new Error([
    "GraphiQL 0.18.0 and after is not compatible with React 15 or below.",
    "If you are using a CDN source (jsdelivr, unpkg, etc), follow this example:",
    "https://github.com/graphql/graphiql/blob/master/examples/graphiql-cdn/index.html#L49"
  ].join("\n"));
}
function GraphiQL(_a) {
  var dangerouslyAssumeSchemaIsValid = _a.dangerouslyAssumeSchemaIsValid, defaultQuery = _a.defaultQuery, defaultTabs = _a.defaultTabs, externalFragments = _a.externalFragments, fetcher = _a.fetcher, getDefaultFieldNames = _a.getDefaultFieldNames, headers = _a.headers, inputValueDeprecation = _a.inputValueDeprecation, introspectionQueryName = _a.introspectionQueryName, maxHistoryLength = _a.maxHistoryLength, onEditOperationName = _a.onEditOperationName, onSchemaChange = _a.onSchemaChange, onTabChange = _a.onTabChange, onTogglePluginVisibility = _a.onTogglePluginVisibility, operationName = _a.operationName, plugins = _a.plugins, query = _a.query, response = _a.response, schema = _a.schema, schemaDescription = _a.schemaDescription, shouldPersistHeaders = _a.shouldPersistHeaders, storage = _a.storage, validationRules = _a.validationRules, variables = _a.variables, visiblePlugin = _a.visiblePlugin, defaultHeaders = _a.defaultHeaders, props = __rest2(_a, ["dangerouslyAssumeSchemaIsValid", "defaultQuery", "defaultTabs", "externalFragments", "fetcher", "getDefaultFieldNames", "headers", "inputValueDeprecation", "introspectionQueryName", "maxHistoryLength", "onEditOperationName", "onSchemaChange", "onTabChange", "onTogglePluginVisibility", "operationName", "plugins", "query", "response", "schema", "schemaDescription", "shouldPersistHeaders", "storage", "validationRules", "variables", "visiblePlugin", "defaultHeaders"]);
  if (typeof fetcher !== "function") {
    throw new TypeError("The `GraphiQL` component requires a `fetcher` function to be passed as prop.");
  }
  return import_react99.default.createElement(
    il,
    { getDefaultFieldNames, dangerouslyAssumeSchemaIsValid, defaultQuery, defaultHeaders, defaultTabs, externalFragments, fetcher, headers, inputValueDeprecation, introspectionQueryName, maxHistoryLength, onEditOperationName, onSchemaChange, onTabChange, onTogglePluginVisibility, plugins, visiblePlugin, operationName, query, response, schema, schemaDescription, shouldPersistHeaders, storage, validationRules, variables },
    import_react99.default.createElement(GraphiQLInterface, __assign2({ showPersistHeadersSettings: shouldPersistHeaders !== false }, props))
  );
}
GraphiQL.Logo = GraphiQLLogo;
GraphiQL.Toolbar = GraphiQLToolbar;
GraphiQL.Footer = GraphiQLFooter;
function GraphiQLInterface(props) {
  var _a, _b, _c;
  var isHeadersEditorEnabled = (_a = props.isHeadersEditorEnabled) !== null && _a !== void 0 ? _a : true;
  var editorContext = j6({ nonNull: true });
  var executionContext = We5({ nonNull: true });
  var schemaContext = re6({ nonNull: true });
  var storageContext = de4();
  var pluginContext = at();
  var copy = Yt({ onCopyQuery: props.onCopyQuery });
  var merge = be6();
  var prettify = Qe5();
  var _d = sl(), theme = _d.theme, setTheme = _d.setTheme;
  var PluginContent = (_b = pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.visiblePlugin) === null || _b === void 0 ? void 0 : _b.content;
  var pluginResize = al({
    defaultSizeRelation: 1 / 3,
    direction: "horizontal",
    initiallyHidden: (pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.visiblePlugin) ? void 0 : "first",
    onHiddenElementChange: function(resizableElement) {
      if (resizableElement === "first") {
        pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.setVisiblePlugin(null);
      }
    },
    sizeThresholdSecond: 200,
    storageKey: "docExplorerFlex"
  });
  var editorResize = al({
    direction: "horizontal",
    storageKey: "editorFlex"
  });
  var editorToolsResize = al({
    defaultSizeRelation: 3,
    direction: "vertical",
    initiallyHidden: function() {
      if (props.defaultEditorToolsVisibility === "variables" || props.defaultEditorToolsVisibility === "headers") {
        return;
      }
      if (typeof props.defaultEditorToolsVisibility === "boolean") {
        return props.defaultEditorToolsVisibility ? void 0 : "second";
      }
      return editorContext.initialVariables || editorContext.initialHeaders ? void 0 : "second";
    }(),
    sizeThresholdSecond: 60,
    storageKey: "secondaryEditorFlex"
  });
  var _e5 = __read2((0, import_react99.useState)(function() {
    if (props.defaultEditorToolsVisibility === "variables" || props.defaultEditorToolsVisibility === "headers") {
      return props.defaultEditorToolsVisibility;
    }
    return !editorContext.initialVariables && editorContext.initialHeaders && isHeadersEditorEnabled ? "headers" : "variables";
  }), 2), activeSecondaryEditor = _e5[0], setActiveSecondaryEditor = _e5[1];
  var _f = __read2((0, import_react99.useState)(null), 2), showDialog = _f[0], setShowDialog = _f[1];
  var _g = __read2((0, import_react99.useState)(null), 2), clearStorageStatus = _g[0], setClearStorageStatus = _g[1];
  var children = import_react99.default.Children.toArray(props.children);
  var logo = children.find(function(child) {
    return isChildComponentType(child, GraphiQL.Logo);
  }) || import_react99.default.createElement(GraphiQL.Logo, null);
  var toolbar = children.find(function(child) {
    return isChildComponentType(child, GraphiQL.Toolbar);
  }) || import_react99.default.createElement(
    import_react99.default.Fragment,
    null,
    import_react99.default.createElement(
      Ro,
      { onClick: prettify, label: "Prettify query (Shift-Ctrl-P)" },
      import_react99.default.createElement(tl, { className: "graphiql-toolbar-icon", "aria-hidden": "true" })
    ),
    import_react99.default.createElement(
      Ro,
      { onClick: merge, label: "Merge fragments into query (Shift-Ctrl-M)" },
      import_react99.default.createElement(Xo, { className: "graphiql-toolbar-icon", "aria-hidden": "true" })
    ),
    import_react99.default.createElement(
      Ro,
      { onClick: copy, label: "Copy query (Shift-Ctrl-C)" },
      import_react99.default.createElement(Jo, { className: "graphiql-toolbar-icon", "aria-hidden": "true" })
    ),
    ((_c = props.toolbar) === null || _c === void 0 ? void 0 : _c.additionalContent) || null
  );
  var footer = children.find(function(child) {
    return isChildComponentType(child, GraphiQL.Footer);
  });
  var onClickReference = (0, import_react99.useCallback)(function() {
    if (pluginResize.hiddenElement === "first") {
      pluginResize.setHiddenElement(null);
    }
  }, [pluginResize]);
  var handleClearData = (0, import_react99.useCallback)(function() {
    try {
      storageContext === null || storageContext === void 0 ? void 0 : storageContext.clear();
      setClearStorageStatus("success");
    } catch (_a2) {
      setClearStorageStatus("error");
    }
  }, [storageContext]);
  var handlePersistHeaders = (0, import_react99.useCallback)(function(event) {
    editorContext.setShouldPersistHeaders(event.currentTarget.dataset.value === "true");
  }, [editorContext]);
  var handleChangeTheme = (0, import_react99.useCallback)(function(event) {
    var selectedTheme = event.currentTarget.dataset.theme;
    setTheme(selectedTheme || null);
  }, [setTheme]);
  var handleAddTab = editorContext.addTab;
  var handleRefetchSchema = schemaContext.introspect;
  var handleReorder = editorContext.moveTab;
  var handleShowDialog = (0, import_react99.useCallback)(function(event) {
    setShowDialog(event.currentTarget.dataset.value);
  }, []);
  var handlePluginClick = (0, import_react99.useCallback)(function(e6) {
    var context = pluginContext;
    var pluginIndex = Number(e6.currentTarget.dataset.index);
    var plugin = context.plugins.find(function(_5, index2) {
      return pluginIndex === index2;
    });
    var isVisible = plugin === context.visiblePlugin;
    if (isVisible) {
      context.setVisiblePlugin(null);
      pluginResize.setHiddenElement("first");
    } else {
      context.setVisiblePlugin(plugin);
      pluginResize.setHiddenElement(null);
    }
  }, [pluginContext, pluginResize]);
  var handleVariablesTabClick = (0, import_react99.useCallback)(function() {
    if (editorToolsResize.hiddenElement === "second") {
      editorToolsResize.setHiddenElement(null);
    }
    setActiveSecondaryEditor("variables");
  }, [editorToolsResize]);
  var handleHeadersTabClick = (0, import_react99.useCallback)(function() {
    if (editorToolsResize.hiddenElement === "second") {
      editorToolsResize.setHiddenElement(null);
    }
    setActiveSecondaryEditor("headers");
  }, [editorToolsResize]);
  var toggleEditorTools = (0, import_react99.useCallback)(function() {
    editorToolsResize.setHiddenElement(editorToolsResize.hiddenElement === "second" ? null : "second");
  }, [editorToolsResize]);
  var handleOpenShortKeysDialog = (0, import_react99.useCallback)(function(isOpen) {
    if (!isOpen) {
      setShowDialog(null);
    }
  }, []);
  var handleOpenSettingsDialog = (0, import_react99.useCallback)(function(isOpen) {
    if (!isOpen) {
      setShowDialog(null);
      setClearStorageStatus(null);
    }
  }, []);
  var addTab = import_react99.default.createElement(
    ae3,
    { label: "Add tab" },
    import_react99.default.createElement(
      X6,
      { type: "button", className: "graphiql-tab-add", onClick: handleAddTab, "aria-label": "Add tab" },
      import_react99.default.createElement(el, { "aria-hidden": "true" })
    )
  );
  return import_react99.default.createElement(
    ae3.Provider,
    null,
    import_react99.default.createElement(
      "div",
      { "data-testid": "graphiql-container", className: "graphiql-container" },
      import_react99.default.createElement(
        "div",
        { className: "graphiql-sidebar" },
        import_react99.default.createElement("div", { className: "graphiql-sidebar-section" }, pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.plugins.map(function(plugin, index2) {
          var isVisible = plugin === pluginContext.visiblePlugin;
          var label = "".concat(isVisible ? "Hide" : "Show", " ").concat(plugin.title);
          var Icon = plugin.icon;
          return import_react99.default.createElement(
            ae3,
            { key: plugin.title, label },
            import_react99.default.createElement(
              X6,
              { type: "button", className: isVisible ? "active" : "", onClick: handlePluginClick, "data-index": index2, "aria-label": label },
              import_react99.default.createElement(Icon, { "aria-hidden": "true" })
            )
          );
        })),
        import_react99.default.createElement(
          "div",
          { className: "graphiql-sidebar-section" },
          import_react99.default.createElement(
            ae3,
            { label: "Re-fetch GraphQL schema" },
            import_react99.default.createElement(
              X6,
              { type: "button", disabled: schemaContext.isFetching, onClick: handleRefetchSchema, "aria-label": "Re-fetch GraphQL schema" },
              import_react99.default.createElement(nl, { className: schemaContext.isFetching ? "graphiql-spin" : "", "aria-hidden": "true" })
            )
          ),
          import_react99.default.createElement(
            ae3,
            { label: "Open short keys dialog" },
            import_react99.default.createElement(
              X6,
              { type: "button", "data-value": "short-keys", onClick: handleShowDialog, "aria-label": "Open short keys dialog" },
              import_react99.default.createElement(Yo, { "aria-hidden": "true" })
            )
          ),
          import_react99.default.createElement(
            ae3,
            { label: "Open settings dialog" },
            import_react99.default.createElement(
              X6,
              { type: "button", "data-value": "settings", onClick: handleShowDialog, "aria-label": "Open settings dialog" },
              import_react99.default.createElement(rl, { "aria-hidden": "true" })
            )
          )
        )
      ),
      import_react99.default.createElement(
        "div",
        { className: "graphiql-main" },
        import_react99.default.createElement(
          "div",
          { ref: pluginResize.firstRef, style: {
            minWidth: "200px"
          } },
          import_react99.default.createElement("div", { className: "graphiql-plugin" }, PluginContent ? import_react99.default.createElement(PluginContent, null) : null)
        ),
        import_react99.default.createElement("div", { ref: pluginResize.dragBarRef }, (pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.visiblePlugin) ? import_react99.default.createElement("div", { className: "graphiql-horizontal-drag-bar" }) : null),
        import_react99.default.createElement(
          "div",
          { ref: pluginResize.secondRef, style: { minWidth: 0 } },
          import_react99.default.createElement(
            "div",
            { className: "graphiql-sessions" },
            import_react99.default.createElement(
              "div",
              { className: "graphiql-session-header" },
              import_react99.default.createElement(Br, { values: editorContext.tabs, onReorder: handleReorder, "aria-label": "Select active operation" }, editorContext.tabs.length > 1 ? import_react99.default.createElement(
                import_react99.default.Fragment,
                null,
                editorContext.tabs.map(function(tab, index2) {
                  return import_react99.default.createElement(
                    ll,
                    { key: tab.id, value: tab, isActive: index2 === editorContext.activeTabIndex },
                    import_react99.default.createElement(ll.Button, { "aria-controls": "graphiql-session", id: "graphiql-session-tab-".concat(index2), onClick: function() {
                      executionContext.stop();
                      editorContext.changeTab(index2);
                    } }, tab.title),
                    import_react99.default.createElement(ll.Close, { onClick: function() {
                      if (editorContext.activeTabIndex === index2) {
                        executionContext.stop();
                      }
                      editorContext.closeTab(index2);
                    } })
                  );
                }),
                addTab
              ) : null),
              import_react99.default.createElement(
                "div",
                { className: "graphiql-session-header-right" },
                editorContext.tabs.length === 1 ? import_react99.default.createElement("div", { className: "graphiql-add-tab-wrapper" }, addTab) : null,
                logo
              )
            ),
            import_react99.default.createElement(
              "div",
              { role: "tabpanel", id: "graphiql-session", className: "graphiql-session", "aria-labelledby": "graphiql-session-tab-".concat(editorContext.activeTabIndex) },
              import_react99.default.createElement(
                "div",
                { ref: editorResize.firstRef },
                import_react99.default.createElement(
                  "div",
                  { className: "graphiql-editors".concat(editorContext.tabs.length === 1 ? " full-height" : "") },
                  import_react99.default.createElement(
                    "div",
                    { ref: editorToolsResize.firstRef },
                    import_react99.default.createElement(
                      "section",
                      { className: "graphiql-query-editor", "aria-label": "Query Editor" },
                      import_react99.default.createElement(
                        "div",
                        { className: "graphiql-query-editor-wrapper" },
                        import_react99.default.createElement(To, { editorTheme: props.editorTheme, keyMap: props.keyMap, onClickReference, onCopyQuery: props.onCopyQuery, onEdit: props.onEditQuery, readOnly: props.readOnly })
                      ),
                      import_react99.default.createElement(
                        "div",
                        { className: "graphiql-toolbar", role: "toolbar", "aria-label": "Editor Commands" },
                        import_react99.default.createElement(St, null),
                        toolbar
                      )
                    )
                  ),
                  import_react99.default.createElement(
                    "div",
                    { ref: editorToolsResize.dragBarRef },
                    import_react99.default.createElement(
                      "div",
                      { className: "graphiql-editor-tools" },
                      import_react99.default.createElement(
                        "div",
                        { className: "graphiql-editor-tools-tabs" },
                        import_react99.default.createElement(X6, { type: "button", className: activeSecondaryEditor === "variables" && editorToolsResize.hiddenElement !== "second" ? "active" : "", onClick: handleVariablesTabClick }, "Variables"),
                        isHeadersEditorEnabled ? import_react99.default.createElement(X6, { type: "button", className: activeSecondaryEditor === "headers" && editorToolsResize.hiddenElement !== "second" ? "active" : "", onClick: handleHeadersTabClick }, "Headers") : null
                      ),
                      import_react99.default.createElement(
                        ae3,
                        { label: editorToolsResize.hiddenElement === "second" ? "Show editor tools" : "Hide editor tools" },
                        import_react99.default.createElement(X6, { type: "button", onClick: toggleEditorTools, "aria-label": editorToolsResize.hiddenElement === "second" ? "Show editor tools" : "Hide editor tools" }, editorToolsResize.hiddenElement === "second" ? import_react99.default.createElement(Ko, { className: "graphiql-chevron-icon", "aria-hidden": "true" }) : import_react99.default.createElement(Uo, { className: "graphiql-chevron-icon", "aria-hidden": "true" }))
                      )
                    )
                  ),
                  import_react99.default.createElement(
                    "div",
                    { ref: editorToolsResize.secondRef },
                    import_react99.default.createElement(
                      "section",
                      { className: "graphiql-editor-tool", "aria-label": activeSecondaryEditor === "variables" ? "Variables" : "Headers" },
                      import_react99.default.createElement(Lt, { editorTheme: props.editorTheme, isHidden: activeSecondaryEditor !== "variables", keyMap: props.keyMap, onEdit: props.onEditVariables, onClickReference, readOnly: props.readOnly }),
                      isHeadersEditorEnabled && import_react99.default.createElement(Et, { editorTheme: props.editorTheme, isHidden: activeSecondaryEditor !== "headers", keyMap: props.keyMap, onEdit: props.onEditHeaders, readOnly: props.readOnly })
                    )
                  )
                )
              ),
              import_react99.default.createElement(
                "div",
                { ref: editorResize.dragBarRef },
                import_react99.default.createElement("div", { className: "graphiql-horizontal-drag-bar" })
              ),
              import_react99.default.createElement(
                "div",
                { ref: editorResize.secondRef },
                import_react99.default.createElement(
                  "div",
                  { className: "graphiql-response" },
                  executionContext.isFetching ? import_react99.default.createElement(qt, null) : null,
                  import_react99.default.createElement(Mo, { editorTheme: props.editorTheme, responseTooltip: props.responseTooltip, keyMap: props.keyMap }),
                  footer
                )
              )
            )
          )
        )
      ),
      import_react99.default.createElement(
        ol,
        { open: showDialog === "short-keys", onOpenChange: handleOpenShortKeysDialog },
        import_react99.default.createElement(
          "div",
          { className: "graphiql-dialog-header" },
          import_react99.default.createElement(ol.Title, { className: "graphiql-dialog-title" }, "Short Keys"),
          import_react99.default.createElement(ol.Close, null)
        ),
        import_react99.default.createElement(
          "div",
          { className: "graphiql-dialog-section" },
          import_react99.default.createElement(ShortKeys, { keyMap: props.keyMap || "sublime" })
        )
      ),
      import_react99.default.createElement(
        ol,
        { open: showDialog === "settings", onOpenChange: handleOpenSettingsDialog },
        import_react99.default.createElement(
          "div",
          { className: "graphiql-dialog-header" },
          import_react99.default.createElement(ol.Title, { className: "graphiql-dialog-title" }, "Settings"),
          import_react99.default.createElement(ol.Close, null)
        ),
        props.showPersistHeadersSettings ? import_react99.default.createElement(
          "div",
          { className: "graphiql-dialog-section" },
          import_react99.default.createElement(
            "div",
            null,
            import_react99.default.createElement("div", { className: "graphiql-dialog-section-title" }, "Persist headers"),
            import_react99.default.createElement(
              "div",
              { className: "graphiql-dialog-section-caption" },
              "Save headers upon reloading.",
              " ",
              import_react99.default.createElement("span", { className: "graphiql-warning-text" }, "Only enable if you trust this device.")
            )
          ),
          import_react99.default.createElement(
            qr,
            null,
            import_react99.default.createElement(Fe3, { type: "button", id: "enable-persist-headers", className: editorContext.shouldPersistHeaders ? "active" : "", "data-value": "true", onClick: handlePersistHeaders }, "On"),
            import_react99.default.createElement(Fe3, { type: "button", id: "disable-persist-headers", className: editorContext.shouldPersistHeaders ? "" : "active", onClick: handlePersistHeaders }, "Off")
          )
        ) : null,
        import_react99.default.createElement(
          "div",
          { className: "graphiql-dialog-section" },
          import_react99.default.createElement(
            "div",
            null,
            import_react99.default.createElement("div", { className: "graphiql-dialog-section-title" }, "Theme"),
            import_react99.default.createElement("div", { className: "graphiql-dialog-section-caption" }, "Adjust how the interface looks like.")
          ),
          import_react99.default.createElement(
            "div",
            null,
            import_react99.default.createElement(
              qr,
              null,
              import_react99.default.createElement(Fe3, { type: "button", className: theme === null ? "active" : "", onClick: handleChangeTheme }, "System"),
              import_react99.default.createElement(Fe3, { type: "button", className: theme === "light" ? "active" : "", "data-theme": "light", onClick: handleChangeTheme }, "Light"),
              import_react99.default.createElement(Fe3, { type: "button", className: theme === "dark" ? "active" : "", "data-theme": "dark", onClick: handleChangeTheme }, "Dark")
            )
          )
        ),
        storageContext ? import_react99.default.createElement(
          "div",
          { className: "graphiql-dialog-section" },
          import_react99.default.createElement(
            "div",
            null,
            import_react99.default.createElement("div", { className: "graphiql-dialog-section-title" }, "Clear storage"),
            import_react99.default.createElement("div", { className: "graphiql-dialog-section-caption" }, "Remove all locally stored data and start fresh.")
          ),
          import_react99.default.createElement(
            "div",
            null,
            import_react99.default.createElement(Fe3, { type: "button", state: clearStorageStatus || void 0, disabled: clearStorageStatus === "success", onClick: handleClearData }, clearStorageStatus === "success" ? "Cleared data" : clearStorageStatus === "error" ? "Failed" : "Clear data")
          )
        ) : null
      )
    )
  );
}
var modifier = typeof window !== "undefined" && window.navigator.platform.toLowerCase().indexOf("mac") === 0 ? "Cmd" : "Ctrl";
var SHORT_KEYS = Object.entries({
  "Search in editor": [modifier, "F"],
  "Search in documentation": [modifier, "K"],
  "Execute query": [modifier, "Enter"],
  "Prettify editors": ["Ctrl", "Shift", "P"],
  "Merge fragments definitions into operation definition": [
    "Ctrl",
    "Shift",
    "M"
  ],
  "Copy query": ["Ctrl", "Shift", "C"],
  "Re-fetch schema using introspection": ["Ctrl", "Shift", "R"]
});
function ShortKeys(_a) {
  var keyMap = _a.keyMap;
  return import_react99.default.createElement(
    "div",
    null,
    import_react99.default.createElement(
      "table",
      { className: "graphiql-table" },
      import_react99.default.createElement(
        "thead",
        null,
        import_react99.default.createElement(
          "tr",
          null,
          import_react99.default.createElement("th", null, "Short Key"),
          import_react99.default.createElement("th", null, "Function")
        )
      ),
      import_react99.default.createElement("tbody", null, SHORT_KEYS.map(function(_a2) {
        var _b = __read2(_a2, 2), title = _b[0], keys = _b[1];
        return import_react99.default.createElement(
          "tr",
          { key: title },
          import_react99.default.createElement("td", null, keys.map(function(key, index2, array) {
            return import_react99.default.createElement(
              import_react99.Fragment,
              { key },
              import_react99.default.createElement("code", { className: "graphiql-key" }, key),
              index2 !== array.length - 1 && " + "
            );
          })),
          import_react99.default.createElement("td", null, title)
        );
      }))
    ),
    import_react99.default.createElement(
      "p",
      null,
      "The editors use",
      " ",
      import_react99.default.createElement("a", { href: "https://codemirror.net/5/doc/manual.html#keymaps", target: "_blank", rel: "noopener noreferrer" }, "CodeMirror Key Maps"),
      " ",
      "that add more short keys. This instance of Graph",
      import_react99.default.createElement("em", null, "i"),
      "QL uses",
      " ",
      import_react99.default.createElement("code", null, keyMap),
      "."
    )
  );
}
function GraphiQLLogo(props) {
  return import_react99.default.createElement("div", { className: "graphiql-logo" }, props.children || import_react99.default.createElement(
    "a",
    { className: "graphiql-logo-link", href: "https://github.com/graphql/graphiql", target: "_blank", rel: "noreferrer" },
    "Graph",
    import_react99.default.createElement("em", null, "i"),
    "QL"
  ));
}
GraphiQLLogo.displayName = "GraphiQLLogo";
function GraphiQLToolbar(props) {
  return import_react99.default.createElement(import_react99.default.Fragment, null, props.children);
}
GraphiQLToolbar.displayName = "GraphiQLToolbar";
function GraphiQLFooter(props) {
  return import_react99.default.createElement("div", { className: "graphiql-footer" }, props.children);
}
GraphiQLFooter.displayName = "GraphiQLFooter";
function isChildComponentType(child, component) {
  var _a;
  if (((_a = child === null || child === void 0 ? void 0 : child.type) === null || _a === void 0 ? void 0 : _a.displayName) && child.type.displayName === component.displayName) {
    return true;
  }
  return child.type === component;
}
export {
  GraphiQL,
  GraphiQLInterface,
  il as GraphiQLProvider,
  GraphiQL as default
};
/*! Bundled license information:

is-primitive/index.js:
  (*!
   * is-primitive <https://github.com/jonschlinkert/is-primitive>
   *
   * Copyright (c) 2014-present, Jon Schlinkert.
   * Released under the MIT License.
   *)

isobject/index.js:
  (*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-plain-object/index.js:
  (*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

set-value/index.js:
  (*!
   * set-value <https://github.com/jonschlinkert/set-value>
   *
   * Copyright (c) Jon Schlinkert (https://github.com/jonschlinkert).
   * Released under the MIT License.
   *)
*/
//# sourceMappingURL=graphiql.js.map
